<%@ Page Language="vb" AutoEventWireup="false" CodeBehind="frmWOJobDetails.aspx.vb" Inherits="CARS.frmWOJobDetails" MasterPageFile="~/MasterPage.Master" ValidateRequest="false" %>

<asp:Content ID="Content1" ContentPlaceHolderID="cntMainPanel" runat="Server">
    <style type="text/css">
        .ui-jqgrid-disablePointerEvents {
            pointer-events: none;
        }
        .ui-jqgrid tr.ui-row-ltr td {
            text-align: center;
        }
        .context-menu-list {
            z-index: 10;
        }
        .ui-state-hover, .ui-widget-content .ui-state-hover, .ui-widget-header .ui-state-hover, .ui-state-focus, .ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus {
            border: 1px solid #999999;
            font-weight: normal;
            color: #212121;
            background-color: white;
        }

        /*added for dialog close button*/
        .ui-dialog .ui-dialog-titlebar-close span {
            display: block;
           margin-bottom: 0px;
            padding: 0px;
            margin-left: -9px;
            margin-top: -9px;
        }

        .ui-dialog .ui-dialog-titlebar button.ui-button:focus,
        .ui-dialog .ui-dialog-titlebar button.ui-button.ui-state-focus,
        .ui-dialog .ui-dialog-titlebar button.ui-button.ui-state-active,
        .ui-dialog .ui-dialog-titlebar button.ui-button.ui-state-hover {
            outline: none;
        }

    </style>

    <script type="text/javascript">
        $(document).ready(function () {

            var dateFormat = "";
            if ($('#<%=hdnDateFormat.ClientID%>').val() == "dd.MM.yyyy") {
                dateFormat = "dd.mm.yy"
            }
            else {
                dateFormat = "dd/mm/yy"
            }

            $(function () {
                $('.ui.dropdown').dropdown();
            });

            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };
            var userId = '<%= Session("UserID")%>';

            var woNumber = getUrlParameter('Wonumber');
            var woPrefix = getUrlParameter('WOPrefix');
            var searchmode = getUrlParameter('Mode');
            var woSearchflag = getUrlParameter('Flag');
            var blWOsearch = getUrlParameter('blWOsearch');

            woNumber = decodeURIComponent(woNumber);
            woPrefix = decodeURIComponent(woPrefix);
            searchmode = decodeURIComponent(searchmode);
            woSearchflag = decodeURIComponent(woSearchflag);
            blWOsearch = decodeURIComponent(blWOsearch);

            loadInit();
            function loadInit() {
                $('#<%=hdnWoNo.ClientID%>').val("");
                $('#<%=hdnWoPr.ClientID%>').val("");
                $('#<%=lblOrderNo.ClientID%>').text("");
                setTab('Head');
            }
            ///Head Tab
            FillType();
            FillStatus();
            FillPayType();
            FillPayTerms();
            FillCustGroup();
            FillMake();
            FillNewModel();
            //loadSrchMake();
            $('#<%=lnkDefect.ClientID%>').hide();
            $('#<%=lst_veh.ClientID%>').hide();

            //Load select dropdowns in pop-up
            loadDefaultMake();
            loadDefaultSpSupplier();
            loadDefaultLocation();

            //Populate the saved data      

            //var arrMake = ['VO', 'VP'];

            //$('.ui.fluid.dropdown').dropdown('set selected', arrMake);
            //$('.ui.fluid.dropdown').dropdown('set selected', ['697', '702']);
            //$('.ui.fluid.dropdown').dropdown('set selected', ['A', 'B']);

            if (blWOsearch == "true") {
                if (woNumber != "" && woPrefix != "") {
                    $(document.getElementById('<%=hdnWoNo.ClientID%>')).val(woNumber);
                    $(document.getElementById('<%=hdnWoPr.ClientID%>')).val(woPrefix);
                    $('#<%=lblOrderNo.ClientID%>').text(woPrefix + woNumber);
                    var Flag = getUrlParameter('Flag');
                    $('#<%=lst_veh.ClientID%>').hide();
                    $('#<%=txtSrchVeh.ClientID%>').show();
                    PopulateWODetails(woNumber, woPrefix, Flag);

                } else {
                    $(document.getElementById('<%=hdnWoNo.ClientID%>')).val("");
                    $(document.getElementById('<%=hdnWoPr.ClientID%>')).val("");
                }
            }

            $.datepicker.setDefaults($.datepicker.regional["no"]);
            $('#<%=txtDeliveryDate.ClientID%>').datepicker({
                //showWeek: true,
                //showOn: "button",
                //buttonImage: "../images/calendar_icon.gif",
                // buttonImageOnly: true,
                // buttonText: "Velg dato",
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                yearRange: "-50:+1",
                dateFormat: dateFormat
            });

            $('#<%=txtFinishDate.ClientID%>').datepicker({
                //showWeek: true,
                //showOn: "button",
                //buttonImage: "../images/calendar_icon.gif",
                //buttonImageOnly: true,
                // buttonText: "Velg dato",
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                yearRange: "-50:+1",
                dateFormat: dateFormat
            });

            $('#<%=txtDeliveryTime.ClientID%>').change(function (e) {
                fnValidateTime();
            });

            function fnValidateTime() {
                if ($('#<%=txtDeliveryTime.ClientID%>').val() != '') {
                    Validatetime($('#<%=txtDeliveryTime.ClientID%>'));
                }
            }

            $('#<%=txtDeliveryDate.ClientID%>').keyup(function () {
                if ($(this).val().length == 2 || $(this).val().length == 5) {
                    $(this).val($(this).val() + $('#<%=hdnDateFormatLang.ClientID%>').val());
                }
            });

            $('#<%=CustMoreInfo.ClientID%>').click(function () {
                if ($('#<%=txtSrchCust.ClientID%>').val().length > 0) {
                    var custId = $('#<%=txtSrchCust.ClientID%>').val();
                    //window.open("../Master/frmCustomerDetail.aspx?cust=" + custId, "info6", "resizable=no,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
                   // window.showModalDialog("../Master/frmCustomerDetail.aspx?cust=" + custId, window.self, "dialogHeight:700px;dialogWidth:1000px;resizable:no;center:yes;scroll:yes;");
                    moreInfo('../Master/frmCustomerDetail.aspx?cust=' + custId + '&pageName=OrderHead', 'Kundedetaljer');
                }
                else {
                    moreInfo('../Master/frmCustomerDetail.aspx?pageName=OrderHead', 'Kundedetaljer');
                }
            });


            $('#<%=VehMoreInfo.ClientID%>').click(function () {
                if ($('#<%=txtInternalNo.ClientID%>').val().length > 0) {
                    var intNo = $('#<%=txtInternalNo.ClientID%>').val();
                    //window.open("../Master/frmVehicleDetail.aspx?refno=" + vehId, "info6", "resizable=no,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
                    //window.showModalDialog("../Master/frmVehicleDetail.aspx?refno=" + vehId, window.self, "dialogHeight:700px;dialogWidth:1000px;resizable:no;center:yes;scroll:yes;");
                    moreInfo('../Master/frmVehicleDetail.aspx?refno=' + intNo + '&pageName=OrderHead', 'KjÃ¸retÃ¸ydetaljer');
                }
                else {
                    moreInfo('../Master/frmVehicleDetail.aspx?pageName=OrderHead', 'KjÃ¸retÃ¸ydetaljer');
                }
            });

            //To open the customer/vehicle page as modal popup
            function moreInfo(page, title) {
                //var page = '../Master/frmCustomerDetail.aspx';

                var $dialog = $('<div id="testdialog"></div>')
                               .html('<iframe id="testifr" style="border: 0px;" src="' + page + '" width="1000px" height="800px"></iframe>')
                               .dialog({
                                   autoOpen: false,
                                   modal: true,
                                   height: 800,
                                   width: '80%',
                                   title: title
                               });
                $dialog.dialog('open');
            }

            $('#<%=ddlMake.ClientID%>').change(function (e) {
                var makeId = $('#<%=ddlMake.ClientID%>').val();
            });

            $('#<%=ddlCusGroup.ClientID%>').change(function (e) {
                var custGrpId = $('#<%=ddlCusGroup.ClientID%>').val();
                FillPayDet(custGrpId);
            });

            $('#<%=lst_veh.ClientID%>').change(function (e) {

                $('#<%=lst_veh.ClientID%>').hide();
                $('#<%=txtSrchVeh.ClientID%>').show();
                var vehId = $('#<%=lst_veh.ClientID%>')[0].value;
                $('#<%=txtSrchVeh.ClientID%>').val(vehId);
                FillVehDet(vehId);
            });

            $('#<%=txtSrchVeh.ClientID%>').change(function (e) {
                var vehId = $('#<%=txtSrchVeh.ClientID%>').val();
                var retVal = validateVeh(vehId);
                if (retVal == "False") {
                    alert("Vehicle does not exist. Do you want to create a new vehicle?");
                   // window.open("../Master/frmVehicleDetail.aspx?vehid=" + vehId, "info6", "resizable=no,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
                  //  window.showModalDialog("../Master/frmVehicleDetail.aspx?vehid=" + vehId, window.self, "dialogHeight:700px;dialogWidth:1000px;resizable:no;center:yes;scroll:yes;");
                    moreInfo("../Master/frmVehicleDetail.aspx?vehId=" + vehId + "&pageName= OrderHead");
                }
            });

            $('#<%=txtSrchCust.ClientID%>').change(function (e) {
                var custId = $('#<%=txtSrchCust.ClientID%>').val();
                var retVal = validateCust(custId);
                if (retVal == "False") {
                    if ($('#<%=txtSrchCust.ClientID%>').val().length > 0) {
                        alert("Do you want to create that customer?");
                        //window.open("../Master/frmCustomerDetail.aspx?cust=" + custId, "info6", "resizable=no,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
                        // window.showModalDialog("../Master/frmCustomerDetail.aspx?custId=" + custId, window.self, "dialogHeight:700px;dialogWidth:1000px;resizable:no;center:yes;scroll:yes;");
                        moreInfo("../Master/frmCustomerDetail.aspx?custId=" + custId + "&pageName= OrderHead");
                    }
                }
            });

            // PopulateWODetails(WoNo, WoPr);
            var cust = $('#<%=txtSrchCust.ClientID%>').val();
            $('#<%=txtSrchCust.ClientID%>').autocomplete({
                selectFirst: true,
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "frmWoSearch.aspx/Customer_Search",
                        data: "{'q':'" + $('#<%=txtSrchCust.ClientID%>').val() + "'}",
                        dataType: "json",

                        success: function (data) {
                            response($.map(data.d, function (item) {
                                return {
                                    label: item.CUST_FIRST_NAME + " " + item.CUST_MIDDLE_NAME + " " + item.CUST_LAST_NAME + " - " + item.CUST_PERM_ADD1 + " - " + item.ID_CUST_PERM_ZIPCODE + " " + item.CUST_PERM_CITY,
                                    val: item.ID_CUSTOMER,
                                    value: item.ID_CUSTOMER
                                }
                            }))
                        },
                        error: function (xhr, status, error) {
                            alert("Error" + error);
                            <%--$('#systemMSG').hide();--%>
                            var err = eval("(" + xhr.responseText + ")");
                            alert('Error: ' + err.Message);
                        }
                    });
                },
                select: function (e, i) {
                    $("#<%=txtSrchCust.ClientID%>").val(i.item.val);
                    FillCustDet($("#<%=txtSrchCust.ClientID%>").val());
                    FillVehDrpDwn($("#<%=txtSrchCust.ClientID%>").val());
                    LoadNonInvoiceOrderDet($("#<%=txtSrchCust.ClientID%>").val());
                },
            });

            //Insurance tab Customer field
            $('#<%=txtInsCustID.ClientID%>').autocomplete({
                selectFirst: true,
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "frmWoSearch.aspx/Customer_Search",
                        data: "{'q':'" + $('#<%=txtInsCustID.ClientID%>').val() + "'}",
                        dataType: "json",

                        success: function (data) {
                            response($.map(data.d, function (item) {
                                return {
                                    label: item.CUST_FIRST_NAME + " " + item.CUST_MIDDLE_NAME + " " + item.CUST_LAST_NAME + " - " + item.CUST_PERM_ADD1 + " - " + item.ID_CUST_PERM_ZIPCODE + " " + item.CUST_PERM_CITY,
                                    val: item.ID_CUSTOMER,
                                    value: item.ID_CUSTOMER
                                }
                            }))
                        },
                        error: function (xhr, status, error) {
                            alert("Error" + error);
                            <%--$('#systemMSG').hide();--%>
                            var err = eval("(" + xhr.responseText + ")");
                            alert('Error: ' + err.Message);
                        }
                    });
                },
                select: function (e, i) {
                    $("#<%=txtInsCustID.ClientID%>").val(i.item.val);
                    $('#<%=hdnInsCustId.ClientID%>').val(i.item.val);
                    $('#<%=hdnDbtSeq.ClientID%>').val("");
                    if ($("#<%=txtInsCustID.ClientID%>").val() != "") {
                        FillInsCustDet($("#<%=txtInsCustID.ClientID%>").val(),"add");
                    }                    
                },
            });


            //Internal Customer
            $('#<%=txtIntCustID.ClientID%>').autocomplete({
                selectFirst: true,
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "frmWoSearch.aspx/Customer_Search",
                        data: "{'q':'" + $('#<%=txtIntCustID.ClientID%>').val() + "'}",
                        dataType: "json",

                        success: function (data) {
                            response($.map(data.d, function (item) {
                                return {
                                    label: item.CUST_FIRST_NAME + " " + item.CUST_MIDDLE_NAME + " " + item.CUST_LAST_NAME + " - " + item.CUST_PERM_ADD1 + " - " + item.ID_CUST_PERM_ZIPCODE + " " + item.CUST_PERM_CITY,
                                    val: item.ID_CUSTOMER,
                                    value: item.ID_CUSTOMER
                                }
                            }))
                        },
                        error: function (xhr, status, error) {
                            alert("Error" + error);
                            <%--$('#systemMSG').hide();--%>
                            var err = eval("(" + xhr.responseText + ")");
                            alert('Error: ' + err.Message);
                        }
                    });
                },
                select: function (e, i) {
                    $("#<%=txtIntCustID.ClientID%>").val(i.item.val);
                    $('#<%=hdnIntCustId.ClientID%>').val(i.item.val);
                    $('#<%=hdnIntDbtSeq.ClientID%>').val("");
                    if ($("#<%=txtIntCustID.ClientID%>").val() != "") {
                        FillIntCustDet($("#<%=txtIntCustID.ClientID%>").val(),"add");
                    }
                },
            });

            //Claim Customer
            $('#<%=txtClaimCustID.ClientID%>').autocomplete({
                selectFirst: true,
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "frmWoSearch.aspx/Customer_Search",
                        data: "{'q':'" + $('#<%=txtClaimCustID.ClientID()%>').val() + "'}",
                        dataType: "json",

                        success: function (data) {
                            response($.map(data.d, function (item) {
                                return {
                                    label: item.CUST_FIRST_NAME + " " + item.CUST_MIDDLE_NAME + " " + item.CUST_LAST_NAME + " - " + item.CUST_PERM_ADD1 + " - " + item.ID_CUST_PERM_ZIPCODE + " " + item.CUST_PERM_CITY,
                                    val: item.ID_CUSTOMER,
                                    value: item.ID_CUSTOMER
                                }
                            }))
                        },
                        error: function (xhr, status, error) {
                            alert("Error" + error);
                            <%--$('#systemMSG').hide();--%>
                            var err = eval("(" + xhr.responseText + ")");
                            alert('Error: ' + err.Message);
                        }
                    });
                },
                select: function (e, i) {
                    $("#<%=txtClaimCustID.ClientID%>").val(i.item.val);
                    $('#<%=hdnClaimCustId.ClientID%>').val(i.item.val);
                    $('#<%=hdnClaimDbtSeq.ClientID%>').val("");
                    if ($("#<%=txtClaimCustID.ClientID%>").val() != "") {
                        FillClaimCustDet($("#<%=txtClaimCustID.ClientID%>").val(),"add");
                    }
                },
            });

            //Misc Customer
            $('#<%=txtMiscCustID.ClientID%>').autocomplete({
                selectFirst: true,
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "frmWoSearch.aspx/Customer_Search",
                        data: "{'q':'" + $('#<%=txtMiscCustID.ClientID()%>').val() + "'}",
                        dataType: "json",

                        success: function (data) {
                            response($.map(data.d, function (item) {
                                return {
                                    label: item.CUST_FIRST_NAME + " " + item.CUST_MIDDLE_NAME + " " + item.CUST_LAST_NAME + " - " + item.CUST_PERM_ADD1 + " - " + item.ID_CUST_PERM_ZIPCODE + " " + item.CUST_PERM_CITY,
                                    val: item.ID_CUSTOMER,
                                    value: item.ID_CUSTOMER
                                }
                            }))
                        },
                        error: function (xhr, status, error) {
                            alert("Error" + error);
                            <%--$('#systemMSG').hide();--%>
                            var err = eval("(" + xhr.responseText + ")");
                            alert('Error: ' + err.Message);
                        }
                    });
                },
                select: function (e, i) {
                    $("#<%=txtMiscCustID.ClientID%>").val(i.item.val);
                    $('#<%=hdnMiscCustId.ClientID%>').val(i.item.val);
                    $('#<%=hdnMiscDbtSeq.ClientID%>').val("");
                    if ($("#<%=txtMiscCustID.ClientID%>").val() != "") {
                        FillMiscCustDet($("#<%=txtMiscCustID.ClientID%>").val(),"add");
                    }
                },
            });


            $('#<%=txtSrchVeh.ClientID%>').autocomplete({
                selectFirst: true,
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "frmWOHead.aspx/GetVehicle",
                        data: "{'vehicleRegNo':'" + $('#<%=txtSrchVeh.ClientID%>').val() + "'}",
                        dataType: "json",
                        success: function (data) {
                            response($.map(data.d, function (item) {
                                return {
                                    label: item.split('-')[0] + "-" + item.split('-')[1] + "-" + item.split('-')[2],
                                    val: item.split('-')[0],
                                    value: item.split('-')[0]
                                }
                            }))
                        },
                        error: function (xhr, status, error) {
                            alert("Error" + error);
                            <%--$('#systemMSG').hide();--%>
                            var err = eval("(" + xhr.responseText + ")");
                            alert('Error: ' + err.Message);
                        }
                    });
                },
                select: function (e, i) {
                    $("#<%=txtSrchVeh.ClientID%>").val(i.item.value);
                    FillVehDet($("#<%=txtSrchVeh.ClientID%>").val());

                }
            });

            $('#<%=txtZipCode.ClientID%>').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "frmWOHead.aspx/GetZipCodes",
                        data: "{'zipCode':'" + $('#<%=txtZipCode.ClientID%>').val() + "'}",
                        dataType: "json",
                        success: function (data) {
                            $('#<%=hdnNewZip.ClientID%>').val("1");
                            response($.map(data.d, function (item) {
                                return {
                                    label: item.split('-')[0] + "-" + item.split('-')[3],
                                    val: item.split('-')[0],
                                    value: item.split('-')[0],
                                    country: item.split('-')[1],
                                    state: item.split('-')[2],
                                    city: item.split('-')[3],
                                }
                            }))
                        },
                        error: function (xhr, status, error) {
                            $('#<%=hdnNewZip.ClientID%>').val("0");
                            alert("Error" + error);
                            var err = eval("(" + xhr.responseText + ")");
                            alert('Error Response ' + err.Message);
                        }
                    });
                },
                select: function (e, i) {
                    $("#<%=txtZipCode.ClientID%>").val(i.item.val);
                    $("#<%=txtCountry.ClientID%>").val(i.item.country);
                    $("#<%=txtState.ClientID%>").val(i.item.state);
                },
            });

            $('#<%=btnSaveOrder.ClientID%>').on('click', function () {
                var OrderNo = $('#<%=lblOrderNo.ClientID%>').text();
                if (OrderNo != "") {
                    UpdateOrder();
                    PopulateWODetails($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value, 'update');
                    loadConfig($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value, userId, idMakeRP, idModelRP);
                    var Hprice = LoadHourlyPrice("New");
                    $('#<%=hdnHP.ClientID%>').val(Hprice);
                    loadRepairCode();
                    loadWorkCode();
                    loadWOJobGrid($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value);
                }
                else {
                    SaveOrder();
                    loadConfig($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value, userId, idMakeRP, idModelRP);
                    var Hprice = LoadHourlyPrice("New");
                    $('#<%=hdnHP.ClientID%>').val(Hprice);
                    loadRepairCode();
                    loadWorkCode();
                    loadWOJobGrid($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value);
                }
            });

            ///OrderDetails
            var idMakeRP = "AM";
            var idModelRP = "";
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
            var idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;
            var userId = 'pv45';
            $('#<%=lblOrderNo.ClientID%>').text(idWOPrefix + idWONO);

            $('#<%=btnSearchSpares.ClientID%>').on('click', function () {
                //$('.overlayHide').addClass('ohActive');
                //$('#modNewCust').removeClass('hidden');
                var mkArr = new Array();
                var supArr = new Array();
                var locArr = new Array();
                var makelist = $('#<%=selMake.ClientID%>').dropdown('get value');
                if (makelist.length > 1) {
                    for (var i = 0; i < makelist.length - 1; i++) {
                        mkArr[i] = makelist[i];
                    }
                }

                var suppList = $('#<%=selSupp.ClientID%>').dropdown('get value');
                if (suppList.length > 1) {
                    for (var k = 0; k < suppList.length - 1; k++) {
                        supArr[k] = suppList[k];
                    }
                }

                var locList = $('#<%=selLoc.ClientID%>').dropdown('get value');
                if (locList.length > 1) {
                    for (var k = 0; k < locList.length - 1; k++) {
                        locArr[k] = locList[k];
                    }
                }

                loadSparesGrid($('#txtSPSearch')[0].value, $('#<%=lblCustName.ClientID%>').text(), $('#<%=hdnVehId.ClientID%>').val(), mkArr, supArr, locArr);
            });

            $('#<%=btnCancel.ClientID%>').on('click', function () {
                var res;
                var msg = GetMultiMessage('0242', '', '');
                res = confirm(msg);

                if (res == true) {
                    window.location.replace("../Transactions/frmWOSearch.aspx");
                }
                else {
                    saveJobDet(1);
                }
            });

            var grid = $("#jobgrid");
            var pageSize = "1000";
            var mydata;
            grid.jqGrid({
                datatype: "local",
                data: mydata,
                colNames: ['Job/Sparepart/Mech', 'Text', 'Nivå', 'Ford%', 'Bestilt', 'Levert', 'Pris', 'Rab', 'Belop', 'JobId', 'Flag', 'Diff', 'StockQty', 'Disc_Amt', 'Id_Make', 'WC', 'RC', 'ItemDesc', 'ForeignJob', 'IdMech', 'Id_Warehouse', 'IdWODetailseq', 'IdWOItemseq', 'Job_Status', 'LineNo', 'IdWOLabSeq', 'Id_Deb_Seq', 'Jobi_Bo_Qty', 'Sp_Cost_Price', 'MechanicName', 'DebitorType','SpareDiscount'],
                colModel: [
                    {
                        name: 'IdJob', index: 'IdJob', width: 290, editable: true,
                        editoptions: {
                            dataInit: function (el) {
                                $(el).autocomplete({
                                    selectFirst: true,
                                    autoFocus: true,
                                    source: function (request, response) {
                                        $.ajax({
                                            type: "POST",
                                            contentType: "application/json; charset=utf-8",
                                            url: "frmWOJobDetails.aspx/GetSpares",
                                            data: "{'spName':'" + $(el).val() + "',idCustomer:'" + $('#<%=lblCustName.ClientID%>').text() + "',vehId:'" + $('#<%=hdnVehId.ClientID%>').val() + "'}",
                                            dataType: "json",
                                            success: function (data) {
                                                response($.map(data.d, function (item) {
                                                    return {
                                                        label: item.Id_Item + " - " + item.Item_Sp_Desc,
                                                        val: item.Id_Item,
                                                        value: item.Id_Item,
                                                        spreplace: item.Id_Sp_Replace,
                                                        spdesc: item.Item_Sp_Desc,
                                                        spcatg: item.Id_Item_Catg,
                                                        spmake: item.Sp_Make,
                                                        idmake: item.Id_Make,
                                                        catgdesc: item.Category_Desc,
                                                        spmake: item.Sp_Make,
                                                        availqty: item.Item_Avail_Qty,
                                                        flgbkord: item.Flg_Allow_Bckord,
                                                        jobidisper: item.Jobi_Dis_Per,
                                                        jobivatper: item.Jobi_Vat_Per,
                                                        jobvatseq: item.Jobi_Vat_Seq,
                                                        spitemprice: item.Sp_Item_Price,
                                                        jobidelqty: item.Jobi_Deliver_Qty,
                                                        jobiboqty: item.Jobi_Bo_Qty,
                                                        costprice: item.Cost_Price,
                                                        disccodesell: item.Sp_Disc_Code_Sell,
                                                        disccodebuy: item.Sp_Disc_Code_Buy,
                                                        location: item.Sp_Location,
                                                        itemdesc: item.Sp_Item_Description,
                                                        spitem: item.Sp_I_Item,
                                                        idwhitem: item.Id_Wh_Item,
                                                        enviditem: item.Env_Id_Item,
                                                        envidmake: item.Env_Id_Make,
                                                        envidwh: item.Env_Id_Warehouse,
                                                        flgefd: item.Flg_Efd,
                                                        oldReplacementSpare: item.Id_Old_Sp_Replace,
                                                        sparediscount:item.SpareDiscount

                                                    }
                                                }))
                                            },
                                            error: function (xhr, status, error) {
                                                alert("Error" + error);
                                                <%--$('#systemMSG').hide();--%>
                                                var err = eval("(" + xhr.responseText + ")");
                                                alert('Error: ' + err.Message);
                                            }
                                        });
                                    },
                                    select: function (e, i) {
                                        var key = e.charCode || e.keyCode; // to support all browsers
                                        //                   //something on key press by manipulating above value

                                        $("#<%=hdnAvail_Qty.ClientID%>").val(i.item.availqty);

                                        $(el).val(i.item.val);
                                        $("#<%=hdnIdItem.ClientID%>").val(i.item.val);
                                        $("#<%=hdnIdMake.ClientID%>").val(i.item.idmake);
                                        var id = jQuery("#jobgrid").jqGrid('getGridParam', 'selrow');


                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                                        var jobId = rowdata.JobId;
                                        var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                        var actualsparelength = rowspareData.length;
                                        jQuery("#jobgrid").setCell(id, "Nei", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(id, "Ford", "", 'not-editable-cell');

                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Nei', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Ford', "100");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Bestilt', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Levert', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Pris', i.item.spitemprice);
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Text', i.item.spdesc);
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Diff', "S");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Item_Avail_Qty', i.item.availqty);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'IdJob', i.item.val);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'Id_Make', i.item.idmake);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'ItemDesc', i.item.spdesc);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'Id_Warehouse', i.item.idwhitem);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'Sp_Cost_Price', i.item.costprice);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'SpareDiscount', i.item.sparediscount);

                                        if (i.item.spdesc != "") {
                                            jQuery("#jobgrid").setCell(id, "Text", "", 'not-editable-cell');
                                        }

                                        var cmn = jQuery("#jobgrid").jqGrid('getColProp', 'Bestilt');
                                        cmn.editable = true;
                                        jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                                        $("#jobgrid").jqGrid("hideCol", "subGrid");
                                        setGridLinesColour();
                                    },
                                });
                            }
                        }
                    },
                    {
                        name: 'Text', index: 'Text', width: 120, editable: true,
                        editoptions: {
                            dataInit: function (elem) { $(elem).focus(function () { this.select(); }) },
                            dataEvents: [
                                {
                                    type: 'keydown',
                                    fn: function (e) {
                                        var key = e.charCode || e.keyCode;
                                        if (key == 9 || key == 13)//tab
                                        {
                                            var grid = $('#jobgrid');
                                            var rowId = jQuery("#jobgrid").jqGrid('getGridParam', 'selrow');
                                            var fol = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                            var rowData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                            if (fol.Diff != "S" && fol.Diff != undefined) {
                                                jQuery('#jobgrid').jqGrid("setCell", rowId, 'Pris', $('#<%=hdnHP.ClientID%>').val());
                                            }
                                            jQuery('#jobgrid').setColProp('Nei', { editable: false });
                                            jQuery('#jobgrid').setColProp('Ford', { editable: false });
                                            // To be loaded from LoadHourlyPrice
                                            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                            for (var k = 0; k < rowdisdata.length; k++) {
                                                if ((rowdisdata[k].Text != "") && (rowdisdata[k].Diff == "S")) {

                                                    if (rowdisdata[k].ItemDesc != "" && rowdisdata[k].ItemDesc != undefined) {
                                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Text", "", 'not-editable-cell');
                                                    }

                                                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Nei", "", 'not-editable-cell');
                                                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');
                                                }
                                                if ((rowdisdata[k].IdJob == "")) {
                                                    jQuery('#jobgrid').jqGrid("setCell", rowdisdata[k].id, 'Nei', "0");
                                                    if (rowdisdata[k].Diff != "RAOR" || rowdisdata[k].Diff != "RBOR") {
                                                        if ($('#<%=hdnInsCustId.ClientID%>').val() == "") {
                                                            jQuery('#jobgrid').jqGrid("setCell", rowdisdata[k].id, 'Ford', "100");
                                                        }
                                                    }

                                                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Nei", "", 'not-editable-cell');
                                                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');
                                                    var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Bestilt');
                                                    cm.editable = false;
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    { name: 'Nei', index: 'Nei', width: 120, editable: false },
                    { name: 'Ford', index: 'Ford', width: 120, editable: false },
                    {
                        name: 'Bestilt', index: 'Bestilt', width: 80, editable: true,//, editrules: { custom: true, custom_func: calculateSp },
                        editoptions: {
                            dataInit: function (elem) { $(elem).focus(function () { this.select(); }) },
                        }
                    },
                    { name: 'Levert', index: 'Levert', width: 120, editable: true },
                    { name: 'Pris', index: 'Pris', width: 120, editable: true },
                    { name: 'Rab', index: 'Rab', width: 120, editable: true },
                    { name: 'Belop', index: 'Belop', width: 120, editable: false },
                    { name: 'JobId', index: 'JobId', width: 20, editable: true, hidden: true },
                    { name: 'Flag', index: 'Flag', width: 20, editable: true, hidden: true },
                    { name: 'Diff', index: 'Diff', width: 20, hidden: true },
                    { name: 'Item_Avail_Qty', index: 'Item_Avail_Qty', width: 20, hidden: true },
                    { name: 'Disc_Amt', index: 'Disc_Amt', hidden: true },
                    { name: 'Id_Make', index: 'Id_Make', hidden: true },
                    { name: 'WC', index: 'WC', hidden: true },
                    { name: 'RC', index: 'RC', hidden: true },
                    { name: 'ItemDesc', index: 'ItemDesc', hidden: true },
                    { name: 'ForeignJob', index: 'ForeignJob', hidden: true },
                    { name: 'IdMech', index: 'IdMech', hidden: true },
                    { name: 'Id_Warehouse', index: 'Id_Warehouse', hidden: true },
                    { name: 'IdWODetailseq', index: 'IdWODetailseq', hidden: true },
                    { name: 'IdWOItemseq', index: 'IdWOItemseq', hidden: true },
                    { name: 'Job_Status', index: 'Job_Status', hidden: true },
                    { name: 'LineNo', index: 'LineNo', hidden: true },
                    { name: 'IdWOLabSeq', index: 'IdWOLabSeq', hidden: true },
                    { name: 'Id_Deb_Seq', index: 'Id_Deb_Seq', hidden: true },
                    { name: 'Jobi_Bo_Qty', index: 'Jobi_Bo_Qty', hidden: true },
                    { name: 'Sp_Cost_Price', index: 'Sp_Cost_Price', hidden: true },
                    { name: 'MechanicName', index: 'MechanicName', hidden: true },
                    { name: 'DebtType', index: 'DebtType', hidden: true },
                    { name: 'SpareDiscount', index: 'SpareDiscount', hidden: true }
                ],
                multiselect: false,
                rowNum: pageSize,//can fetch from webconfig
                rowList: 5,
                sortorder: 'asc',
                viewrecords: true,
                height: "50%",
                autoWidth: true,
                shrinkToFit: true,
                caption: "Job Details",
                async: false, //Very important,
                subgrid: false,
                'cellEdit': true,
                'cellsubmit': "clientArray",
                editurl: "clientArray",
                afterEditCell: function (rowid, cellname, value, irow, icol) {
                    var cellDOM = this.rows[irow].cells[icol], originalKeydown;
                    var $editControl = $("#" + rowid).find("input, select, textarea,text"),
                        // events = $._data($editControl[0], "events"),
                             events = $editControl.data("events");
                    //originalKeydown;
                    if (events && events.keydown && events.keydown.length) {
                        //debugger;

                        // $editControl.unbind("keydown");
                        $editControl.bind("keydown", function (e) {
                            //   debugger;
                            // we can do something before jqGrid process "keydown" event
                            if (e.keyCode === 13) {
                                var id = rowid;//jQuery("#jobgrid").jqGrid('getGridParam', 'selrow');
                                var rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                                var jobId = rowdata.JobId;
                                var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');

                                if (cellname == "Ford") {
                                    for (var k = 0; k < rowspareData.length; k++) {
                                        if (rowspareData[k].DebtType == "OHC") {
                                            //rowspareData[k].Ford = rowdata.Ford;
                                            if (rowspareData[k].Diff == "RAOR") {
                                                if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop == "") {
                                                    var raorAmt = "0";
                                                    raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                    raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                    rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                }
                                            }

                                            if (rowspareData[k].Diff == "RBOR") {
                                                if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop == "") {
                                                    var raorAmt = "0";
                                                    rborAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                    rborAmt = (fnformatDecimalValue(rborAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                    rowspareData[k].Belop = fnformatDecimalValue(rborAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                }
                                            }
                                        }
                                        if (rowspareData[k].DebtType == "INSC" && (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR")) {
                                            rowspareData[k].Ford = 100 - fnformatDecimalValue(rowdata.Ford, seperator);
                                            //rowspareData[k].Diff = "ORARD"
                                        }
                                    }

                                    var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                    jQuery("#jobgrid").jqGrid('clearGridData');
                                    for (var i = 0; i < rowGrddata.length; i++) {
                                        jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                                    }
                                    //add a condition to check if ford% is > 0
                                    if (fnformatDecimalValue(rowdata.Ford, seperator) > 0 && (rowdata.Diff == "RBOR" || rowdata.Diff == "RAOR")) {
                                        saveJobDet(id);
                                    }
                                    else {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 6, true);
                                        document.getElementById((parseInt(rowid)) + '_Pris').select();
                                    }

                                }

                                if (cellname == "IdJob") {
                                    if (rowdata.IdJob != "" && rowdata.Text == "" && rowdata.Bestilt == "" && rowdata.Pris == "") {
                                        var isSpExists = checkSpareExists(e.target.value, id);
                                        if (isSpExists == "False") {
                                            alert("Select a valid spare");
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 0, true);
                                            document.getElementById((parseInt(rowid)) + '_IdJob').select();
                                            return false;
                                        }
                                    }
                                }

                                rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);

                                if (cellname == "IdJob") {
                                    if (rowdata.IdJob != "" && rowdata.Text != "") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                        document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                    }
                                    else if (rowdata.IdJob == "") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                        document.getElementById((parseInt(rowid)) + '_Text').select();
                                    } else if (rowdata.IdJob != "" && rowdata.Text == "" && rowdata.Diff == "S") {
                                        var isSpExists = checkSpareExists(e.target.value, id);
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                        document.getElementById((parseInt(rowid)) + '_Text').select();
                                    }
                                    else {
                                        if (rowdata.IdJob != "" && rowdata.Diff == "S" && rowdata.Levert != "" && rowdata.Bestilt != "") {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                            document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                        } else {
                                            alert("Select a valid spare");
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 0, true);
                                            document.getElementById((parseInt(rowid)) + '_IdJob').select();
                                            return false;
                                        }
                                    }
                                }

                                if (cellname == "Levert" || cellname == "Bestilt" || cellname == "Pris" || cellname == "Rab") {
                                    if (e.target.value != "") {
                                        var val = e.target.value;
                                        val = fnformatDecimalValue(val, seperator);
                                        var val_Length = val.length;

                                        if (isNaN(val) || (val < 0)) {
                                            msg = GetMultiMessage('0090', '', '');
                                            alert(msg);
                                            if (cellname == "Bestilt") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                                document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                            } else if (cellname == "Levert") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 5, true);
                                                document.getElementById((parseInt(rowid)) + '_Levert').select();
                                            } else if (cellname == "Pris") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 6, true);
                                                document.getElementById((parseInt(rowid)) + '_Pris').select();
                                            } else if (cellname == "Rab") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                document.getElementById((parseInt(rowid)) + '_Rab').select();
                                            }
                                            return false;
                                        }
                                        for (i = 0; i < val_Length; i++) {
                                            str = val.charCodeAt(i);
                                            if ((str == 46) || (str == 101) || (str == 32) || (str == 45) || (str == 43)) {
                                                msg = GetMultiMessage('MSGGERR1', '', '');
                                                alert(msg);

                                                if (cellname == "Bestilt") {
                                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                                    document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                                } else if (cellname == "Levert") {
                                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 5, true);
                                                    document.getElementById((parseInt(rowid)) + '_Levert').select();
                                                } else if (cellname == "Pris") {
                                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 6, true);
                                                    document.getElementById((parseInt(rowid)) + '_Pris').select();
                                                } else if (cellname == "Rab") {
                                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                    document.getElementById((parseInt(rowid)) + '_Rab').select();
                                                }
                                                return false;
                                            }
                                        }
                                        if (cellname == "Rab") {
                                            if (!(gfi_ValidNumber(e.target.value))) {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                document.getElementById((parseInt(rowid)) + '_Rab').select();
                                                return false;
                                            }
                                            if (e.target.value < 0) {
                                                var mess = GetMultiMessage('0116', GetMultiMessage('0338', '', ''), '');  //"Disc Percentage cannot be negative";
                                                alert(mess);
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                document.getElementById((parseInt(rowid)) + '_Rab').select();
                                                return false;
                                            }
                                            else if (e.target.value > 100) {
                                                var mess = GetMultiMessage('0116', GetMultiMessage('0338', '', ''), '');  //"Disc Percentage cannot be greater than 100";
                                                alert(mess);
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                document.getElementById((parseInt(rowid)) + '_Rab').select();
                                                return false;
                                            }
                                        }
                                    }
                                }

                                var idItem = $('#<%=hdnIdItem.ClientID%>').val();
                                var idMake = $('#<%=hdnIdMake.ClientID%>').val();
                                var idCust = $('#<%=lblCustName.ClientID%>').text();
                                var vats = LoadGMHPVat(idItem, idMake,idCust);
                                var gmVat = 0.0;
                                var hpVat = 0.0;
                                var spVat = 0.0;

                                if (vats.length > 0) {
                                    gmVat = fnformatDecimalValue(vats[0], seperator);
                                    hpVat = fnformatDecimalValue(vats[1], seperator);
                                    spVat = fnformatDecimalValue(vats[2], seperator);
                                }

                                if (cellname == "IdJob") {
                                    //var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowid);
                                    var spareId = [];
                                    var ctr = 0;
                                    var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                    for (var k = 0; k < rowdisdata.length; k++) {
                                        //spareId[k] = rowdisdata[k].IdJob;
                                        if ((rowdisdata[k].JobId == rowdata.JobId) && (rowdisdata[k].Diff == "S")) {
                                            spareId.push(rowdisdata[k].IdJob);
                                            if (rowdisdata[k].IdJob == e.target.value) {
                                                ctr = ctr + 1;
                                            }
                                        }
                                    }

                                    if (ctr > 1) {
                                        alert("SparePart already exists.");
                                        return false;
                                    }

                                    var spmake = rowdata.Id_Make;
                                    $('#<%=hdnIdItem.ClientID%>').val(e.target.value);
                                    $('#<%=hdnIdMake.ClientID%>').val(spmake);
                                    //jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                    //document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                }

                                if (e.target.name == "Bestilt") {
                                    jQuery('#jobgrid').jqGrid("setCell", rowid, 'Bestilt', e.target.value);
                                } else if (e.target.name == "Levert") {
                                    jQuery('#jobgrid').jqGrid("setCell", rowid, 'Levert', e.target.value);
                                }

                                var id = rowid;//jQuery("#jobgrid").jqGrid('getGridParam', 'selrow');
                                var rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                                var jobId = rowdata.JobId;
                                var idwodetseq = "";
                                var iddebseq = "";
                                var idwoitemseq = "";
                                var idMechanic = rowdata.IdMech;
                                var makeid = rowdata.Id_Make;
                                idwodetseq = rowdata.IdWODetailseq;
                                idwoitemseq = rowdata.IdWOItemseq;
                                iddebseq = rowdata.Id_Deb_Seq;
                                var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                var isSpare, isLab_OrdText;
                                var isUpdate = "False";
                                var text = "";
                                var mcName = "";
                                var user = $('#<%=hdnDuser.ClientID%>').val();

                                var idItem = $('#<%=hdnIdItem.ClientID%>').val();
                                var idMake = $('#<%=hdnIdMake.ClientID%>').val();
                                var idCust = $('#<%=lblCustName.ClientID%>').text();
                                var vats = LoadGMHPVat(idItem, idMake,idCust);
                                var gmVat = 0.0;
                                var hpVat = 0.0;
                                var spVat = 0.0;
                                var foreignJob = "";

                                if (vats.length > 0) {
                                    gmVat = fnformatDecimalValue(vats[0], seperator);
                                    hpVat = fnformatDecimalValue(vats[1], seperator);
                                    spVat = fnformatDecimalValue(vats[2], seperator);
                                }

                                if (cellname == "Levert" || cellname == "Bestilt" || cellname == "Pris" || cellname == "Rab") {
                                    for (var k = 0; k < rowspareData.length; k++) {

                                        //if (rowspareData[k].Text != "") {
                                        if (e.target.value != "0" || e.target.value == "") {
                                            // if ((rowspareData[k].JobId == jobId) && (rowspareData[k].IdJob.indexOf(":") > -1)) {
                                            if ((rowspareData[k].IdMech != "") || (rowspareData[k].IdMech != undefined)) {
                                                if (rowspareData[k].IdJob != undefined) {
                                                    if (rowspareData[k].IdJob.indexOf(":") > -1) {
                                                        text = rowspareData[k].IdMech;
                                                        var mechName = new Array();
                                                        if (rowspareData[k].MechanicName != "" && rowspareData[k].MechanicName != null && rowspareData[k].MechanicName != undefined) {
                                                            mechName = rowspareData[k].MechanicName.split("-");
                                                            var userName = mechName[0] + "-" + mechName[1];
                                                            mcName = userName;
                                                        }
                                                        foreignJob = rowspareData[k].ForeignJob;
                                                        jQuery("#jobgrid").setCell(rowspareData[k].id, "IdJob", "", 'not-editable-cell');
                                                    }
                                                    else {
                                                        if (text == "" || text == undefined) {
                                                            rowspareData[k].IdMech = user;
                                                            text = rowspareData[k].IdMech;
                                                            var mechName = new Array();
                                                            if (rowspareData[k].MechanicName != "" && rowspareData[k].MechanicName != null && rowspareData[k].MechanicName != undefined) {
                                                                mechName = rowspareData[k].MechanicName.split("-");
                                                                var userName = mechName[0] + "-" + mechName[1];
                                                                mcName = userName;
                                                                if (mechName.length > 2) {
                                                                    rowspareData[k].IdMech = mechName[2];
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else {
                                                if ((rowspareData[k].id == id)) {
                                                    if (text == "") {
                                                        text = rowspareData[k].IdJob;
                                                    }
                                                }
                                            }
                                        }
                                        //}

                                        if (rowspareData[k].id == id) {
                                            if (rowspareData[k].IdJob != "" && rowspareData[k].Diff == "S") {
                                                if (rowspareData[k].Item_Avail_Qty != "0") {
                                                    if (e.target.name == "Levert" || e.target.name == "Bestilt") {
                                                        rowspareData[k].Levert = e.target.value;

                                                        if (e.target.name == "Bestilt") {
                                                            //Need to calculate back order qty
                                                            //call getspareid - set itemavailqty , levert and back order column based on itemavailqty

                                                            checkSpareExists(rowspareData[k].IdJob, id);
                                                            var chkdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                                                            var backOrdQty = 0;
                                                            var spavailqty = 0;
                                                            var orderQty = 0;
                                                            var delvQty = 0;
                                                            var qtyDeliver = 0;
                                                            var Availa_Qty = 0.0;
                                                            var qtyDeliv = 0.0
                                                            spavailqty = fnformatDecimalValue(chkdata.Item_Avail_Qty, seperator);
                                                            orderQty = fnformatDecimalValue(e.target.value, seperator);
                                                            qtyDeliver = fnformatDecimalValue(chkdata.Levert, seperator) + fnformatDecimalValue(qtyDeliver, seperator);


                                                            if (spavailqty == 0) {
                                                                delvQty = 0;
                                                                backOrdQty = orderQty;
                                                            }
                                                            else if (spavailqty >= orderQty) {
                                                                delvQty = orderQty;
                                                                backOrdQty = orderQty - delvQty;
                                                            }
                                                            else if (spavailqty < orderQty) {
                                                                Availa_Qty = spavailqty + qtyDeliver;
                                                                if ((fnformatDecimalValue(orderQty, seperator) - fnformatDecimalValue(Availa_Qty, seperator)) > 0) {
                                                                    backOrdQty = orderQty - Availa_Qty;

                                                                    if (backOrdQty > 0) {
                                                                        backOrdQty = backOrdQty;
                                                                        qtyDeliv = orderQty - Availa_Qty;
                                                                        delvQty = qtyDeliv;
                                                                    }
                                                                    else {
                                                                        backOrdQty = 0;
                                                                        qtyDeliv = orderQty;
                                                                        delvQty = qtyDeliv;
                                                                    }
                                                                }

                                                                else {
                                                                    backOrdQty = 0;
                                                                    qtyDeliv = orderQty;
                                                                    delvQty = qtyDeliv;
                                                                }

                                                            }

                                                            if (chkdata.Rab == "" || chkdata.Rab == undefined || fnformatDecimalValue(chkdata.Rab, seperator)) {
                                                                if (fnformatDecimalValue($('#<%=hdnOHCSpareDisc.ClientID%>').val(), seperator) > 0) {
                                                                    rowspareData[k].Rab = $('#<%=hdnOHCSpareDisc.ClientID%>').val();
                                                                }
                                                                else if (fnformatDecimalValue($('#<%=hdnOHCGenDisc.ClientID%>').val(), seperator) > 0) {
                                                                    rowspareData[k].Rab = $('#<%=hdnOHCGenDisc.ClientID%>').val();
                                                                }
                                                                else if (fnformatDecimalValue(rowspareData[k].SpareDiscount, seperator) > 0) {
                                                                    rowspareData[k].Rab = rowspareData[k].SpareDiscount;
                                                                }
                                                                else {
                                                                    rowspareData[k].Rab = "";
                                                                }
                                                            }

                                                            jQuery('#jobgrid').jqGrid("setCell", id, 'Bestilt', orderQty);
                                                            jQuery('#jobgrid').jqGrid("setCell", id, 'Levert', delvQty);
                                                            jQuery('#jobgrid').jqGrid("setCell", id, 'Item_Avail_Qty', spavailqty);
                                                            jQuery('#jobgrid').jqGrid("setCell", id, 'Jobi_Bo_Qty', backOrdQty);

                                                        }
                                                    }


                                                    if (e.target.name == "Pris") {
                                                        rowspareData[k].Pris = fnreformatDecimal(e.target.value, seperator);
                                                        if (rowspareData[k].IdJob == "" && rowspareData[k].Text == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Levert == "") {
                                                            rowspareData[k].Diff = "OR";
                                                        }

                                                        if (rowspareData[k].Diff == "OR") {
                                                            if (fnformatDecimalValue(e.target.value, seperator) > fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val(), seperator)) {
                                                                alert("Own Risk Amount is greater than job total");
                                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(id), 6, true);
                                                                document.getElementById((parseInt(id)) + '_Pris').select();
                                                                return false;
                                                            }
                                                            saveJobDet(id);
                                                            rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                        }
                                                    }

                                                    if (e.target.name == "Pris") {
                                                        if (rowspareData[k].DebtType == "OHC") {
                                                            //rowspareData[k].Ford = rowdata.Ford;
                                                            if ((rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") && (rowspareData[k].JobId == "1")) {
                                                                if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop != "" && fnformatDecimalValue(rowspareData[k].Ford, seperator) > 0) {
                                                                    var raorAmt = e.target.value;
                                                                    raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                                    raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                                    rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                                } else if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris != "" && rowspareData[k].Belop == 0 && rowspareData[k].Ford == "") {
                                                                    var raorAmt = e.target.value;
                                                                    rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                                }
                                                                saveJobDet(id);
                                                                return false;
                                                            }

                                                        }
                                                    }

                                                    if (e.target.name == "Rab") {
                                                        var rebate = fnformatDecimalValue(e.target.value, seperator)
                                                        if (rebate == 0) {
                                                            rowspareData[k].Rab = "";
                                                        }
                                                        else {
                                                            rowspareData[k].Rab = fnreformatDecimal(e.target.value, seperator);
                                                        }
                                                        //if any reduction lines exists the belop amount shd be recalculated
                                                        recalculateRedLines();
                                                        saveJobDet(id);
                                                        //return false;
                                                        rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                    }

                                                    var amt = (fnformatDecimalValue(rowspareData[k].Levert, seperator) * fnformatDecimalValue(rowspareData[k].Pris, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) * 0.01)).toFixed(2);
                                                    var disc = 0.0;
                                                    //rowspareData[k].Belop = fnreformatDecimal(amt, seperator);
                                                    if (rowspareData[k].Rab != undefined && rowspareData[k].Rab != "0") {
                                                        disc = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowspareData[k].Rab, seperator) / 100)).toFixed(2)
                                                        amt = (amt - disc).toFixed(2);
                                                    }
                                                    rowspareData[k].Disc_Amt = fnreformatDecimal(disc, seperator);

                                                    if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                        rowspareData[k].Belop = fnreformatDecimal(amt, seperator);
                                                    }

                                                    if (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") {
                                                        if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Belop != "") {
                                                            var raorAmt = "0";
                                                            raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                            raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                            rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                        }
                                                    }


                                                    if (rowspareData[k].Diff == "S" && rowspareData[k].IdJob != "") {
                                                        rowspareData[k].Diff = "S";
                                                    }
                                                    else if (rowspareData[k].Diff == "L" && rowspareData[k].Text != "") {
                                                        rowspareData[k].Diff = "L";
                                                        if (rowspareData[k].IdMech == $('#<%=hdnDuser.ClientID%>').val()) {
                                                            rowspareData[k].IdJob = "";
                                                        }
                                                        else {
                                                            rowspareData[k].IdJob = mcName;
                                                        }
                                                        rowspareData[k].IdMech = text;
                                                        rowspareData[k].ForeignJob = foreignJob;
                                                    }
                                                    else if (rowspareData[k].Diff == "T" && rowspareData[k].Text != "") {
                                                        rowspareData[k].Diff = "T";
                                                    }
                                                    else {
                                                        if (text != "" && rowspareData[k].Levert != "") {
                                                            rowspareData[k].Diff = "L";
                                                            rowspareData[k].IdJob = mcName;
                                                            rowspareData[k].IdMech = text;
                                                            rowspareData[k].ForeignJob = foreignJob;
                                                        } else if (text != "" && rowspareData[k].Levert == "" && rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" || rowspareData[k].Diff != "RBOR") {
                                                            if (rowspareData[k].Text != "") {
                                                                rowspareData[k].Diff = "T";
                                                                $('#' + rowspareData[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                                            } else {
                                                                if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                                    rowspareData[k].Diff = "";
                                                                }
                                                            }
                                                            //rowspareData[k].IdJob = text;
                                                        } else {
                                                            if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                                rowspareData[k].Diff = "";
                                                            }
                                                        }
                                                    }
                                                }
                                                else {
                                                    //Added when spare had valid qty and edit spare when 0 qty - Need to check
                                                    //if (rowspareData[k].Levert == "0") {
                                                    //    rowspareData[k].Levert = "0";
                                                    //}
                                                    if (e.target.name == "Bestilt") {
                                                        var chkdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                                                        var backOrdQty = 0;
                                                        var spavailqty = 0;
                                                        var orderQty = 0;
                                                        var delvQty = 0;
                                                        var qtyDeliver = 0;
                                                        var Availa_Qty = 0.0;
                                                        var qtyDeliv = 0.0
                                                        spavailqty = fnformatDecimalValue(chkdata.Item_Avail_Qty, seperator);
                                                        orderQty = fnformatDecimalValue(e.target.value, seperator);
                                                        qtyDeliver = fnformatDecimalValue(chkdata.Levert, seperator) + fnformatDecimalValue(qtyDeliver, seperator);
                                                        Availa_Qty = spavailqty + qtyDeliver;
                                                        if ((fnformatDecimalValue(orderQty, seperator) - fnformatDecimalValue(Availa_Qty, seperator)) > 0) {
                                                            backOrdQty = orderQty - Availa_Qty;

                                                            if (backOrdQty > 0) {
                                                                backOrdQty = backOrdQty;
                                                                qtyDeliv = orderQty - backOrdQty;
                                                                delvQty = qtyDeliv;
                                                            }
                                                            else {
                                                                backOrdQty = 0;
                                                                qtyDeliv = orderQty;
                                                                delvQty = qtyDeliv;
                                                            }
                                                        }

                                                        else {
                                                            backOrdQty = 0;
                                                            qtyDeliv = orderQty;
                                                            delvQty = qtyDeliv;
                                                        }


                                                        rowspareData[k].Bestilt = orderQty;
                                                        rowspareData[k].Levert = delvQty;
                                                        rowspareData[k].Item_Avail_Qty = spavailqty;
                                                        rowspareData[k].Jobi_Bo_Qty = backOrdQty;

                                                        //rowspareData[k].Belop = "2000";

                                                        jQuery("#jobgrid").setCell(rowspareData[k].id, "Belop", "", 'ui-state-disabled');
                                                        if (backOrdQty > 0) {
                                                            jQuery("#jobgrid").jqGrid('setCell', rowspareData[k].id, "Bestilt", "", {
                                                                'color': 'rgba(255, 0, 0, 0.8)',
                                                                'background-image': 'none',
                                                                'text-align': 'right'
                                                            });
                                                        }
                                                    }
                                                    if (e.target.name == "Rab") {
                                                        var rebate = fnformatDecimalValue(e.target.value, seperator);
                                                        if (rebate == 0) {
                                                            rowspareData[k].Rab = "";
                                                        }
                                                        else {
                                                            rowspareData[k].Rab = fnreformatDecimal(e.target.value, seperator);
                                                        }
                                                        //if any reduction lines exists the belop amount shd be recalculated
                                                        recalculateRedLines();
                                                        saveJobDet(id);
                                                        //return false;
                                                        rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                    }
                                                }
                                            }
                                            else {
                                                if (e.target.name == "Levert" || e.target.name == "Bestilt") {
                                                    rowspareData[k].Levert = e.target.value;

                                                    if (e.target.value == "") {
                                                        rowspareData[k].Pris = "";
                                                        rowspareData[k].Diff = "T";
                                                        $('#' + rowspareData[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                                        var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Text');
                                                        cm.editable = true;
                                                    } else {
                                                        if (rowspareData[k].Text != "") {
                                                            rowspareData[k].Diff = "L";
                                                        } else {
                                                            rowspareData[k].Diff = "";
                                                            rowspareData[k].Levert = "";
                                                            rowspareData[k].Pris = "";
                                                        }
                                                    }
                                                }
                                                if (e.target.name == "Pris") {
                                                    rowspareData[k].Pris = fnreformatDecimal(e.target.value, seperator);
                                                    if (rowspareData[k].IdJob == "" && rowspareData[k].Text == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Levert == "") {
                                                        rowspareData[k].Diff = "OR";
                                                    }

                                                    if (rowspareData[k].Diff == "OR") {
                                                        if (fnformatDecimalValue(e.target.value, seperator) > fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val(), seperator)) {
                                                            alert("Own Risk Amount is greater than job total");
                                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(id), 6, true);
                                                            document.getElementById((parseInt(id)) + '_Pris').select();
                                                            return false;
                                                        }
                                                        saveJobDet(id);
                                                        rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');

                                                    }
                                                }

                                                if (e.target.name == "Pris") {
                                                    if (rowspareData[k].DebtType == "OHC") {
                                                        //rowspareData[k].Ford = rowdata.Ford;
                                                        if ((rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") && (rowspareData[k].JobId == "1")) {
                                                            if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop != "" && fnformatDecimalValue(rowspareData[k].Ford, seperator) > 0) {
                                                                var raorAmt = e.target.value;
                                                                raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                                raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                                rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                            } else if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris != "" && rowspareData[k].Belop == 0 && rowspareData[k].Ford == "") {
                                                                var raorAmt = e.target.value;
                                                                rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                            }
                                                            saveJobDet(id);
                                                            return false;
                                                        }

                                                    }
                                                }

                                                if (e.target.name == "Rab") {
                                                    var rebate = fnformatDecimalValue(e.target.value, seperator)
                                                    if (rebate == 0) {
                                                        rowspareData[k].Rab = "";
                                                    }
                                                    else {
                                                        rowspareData[k].Rab = fnreformatDecimal(e.target.value, seperator);
                                                    }
                                                    //if any reduction lines exists the belop amount shd be recalculated
                                                    recalculateRedLines();

                                                    saveJobDet(id);
                                                    //return false;
                                                    rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                }
                                                var amt = (fnformatDecimalValue(rowspareData[k].Levert, seperator) * fnformatDecimalValue(rowspareData[k].Pris, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) * 0.01)).toFixed(2);
                                                var disc = 0.0;
                                                //rowspareData[k].Belop = fnreformatDecimal(amt, seperator);
                                                if (rowspareData[k].Rab != undefined && rowspareData[k].Rab != "0") {
                                                    disc = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowspareData[k].Rab, seperator) / 100)).toFixed(2);
                                                    amt = (amt - disc).toFixed(2);
                                                }

                                                rowspareData[k].Disc_Amt = fnreformatDecimal(disc, seperator);
                                                if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                    rowspareData[k].Belop = fnreformatDecimal(amt, seperator);
                                                }
                                                if (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") {
                                                    if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Belop != "") {
                                                        var raorAmt = "0";
                                                        raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                        raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                        rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                    }
                                                }

                                                if (rowspareData[k].Diff == "S" && rowspareData[k].IdJob != "") {
                                                    rowspareData[k].Diff = "S";
                                                }
                                                else if (rowspareData[k].Diff == "L" && rowspareData[k].Text != "") {
                                                    rowspareData[k].Diff = "L";
                                                    if (rowspareData[k].IdMech == $('#<%=hdnDuser.ClientID%>').val()) {
                                                        rowspareData[k].IdJob = "";

                                                    }
                                                    else {
                                                        rowspareData[k].IdJob = mcName;

                                                    }
                                                    rowspareData[k].IdMech = text;
                                                    rowspareData[k].ForeignJob = foreignJob;
                                                }
                                                else if (rowspareData[k].Diff == "T" && rowspareData[k].Text != "") {
                                                    rowspareData[k].Diff = "T";
                                                }
                                                else {
                                                    if ((text != "" && text != undefined) && (rowspareData[k].Levert != "" && rowspareData[k].Levert != "0")) {
                                                        rowspareData[k].Diff = "L";
                                                        if (rowspareData[k].IdMech == $('#<%=hdnDuser.ClientID%>').val()) {
                                                            rowspareData[k].IdJob = "";
                                                        }
                                                        else {
                                                            rowspareData[k].IdJob = mcName;
                                                        }
                                                        rowspareData[k].IdMech = text;
                                                        rowspareData[k].ForeignJob = foreignJob;
                                                    } else if ((text != "" && text != undefined) && rowspareData[k].Levert == "" && rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                        if (rowspareData[k].Text != "") {
                                                            rowspareData[k].Diff = "T";
                                                        } else {
                                                            if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                                rowspareData[k].Diff = "";
                                                            }
                                                        }
                                                        //rowspareData[k].IdJob = text;
                                                    } else {
                                                        if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                            rowspareData[k].Diff = "";
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        if (rowspareData[k].JobId == jobId) {
                                            if (rowspareData[k].IdJob == "" && rowspareData[k].Text == "") {
                                                isUpdate = "True";
                                            } else {
                                                isUpdate = "False";
                                            }
                                        }
                                        else {
                                            if (rowspareData[k].id == id) {
                                                isUpdate = "True";
                                            }
                                        }
                                        if (rowspareData[k].Diff == "T") {
                                            if (e.target.name == "Levert") {
                                                if (e.target.value == "") {
                                                    rowspareData[k].Diff = "T";
                                                    if (rowspareData[k].id == id) {
                                                        saveJobDet(id);
                                                        return false;
                                                    }
                                                    //rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                }
                                            }
                                        }
                                    }

                                    if (isUpdate == "False") {
                                        //add new line
                                        var spares = {
                                            id: parseInt(id) + 1,
                                            IdJob: "",
                                            Text: "",
                                            Nei: "0",
                                            Ford: "100",
                                            Bestilt: "",
                                            Levert: "",
                                            Pris: "",
                                            Rab: "",
                                            Belop: "",
                                            JobId: jobId.toString(),
                                            Flag: "0",
                                            Diff: "",
                                            Item_Avail_Qty: "",
                                            Disc_Amt: "0",
                                            ForeignJob: "",
                                            ItemDesc: "",
                                            IdWODetailseq: idwodetseq,
                                            Id_Deb_Seq: iddebseq,
                                            IdMech: idMechanic,
                                            Id_Make: makeid,
                                            IdWOItemseq: idwoitemseq
                                        }

                                        var newspares = $.extend(true, {}, rowspareData);
                                        var actualsparelength = rowspareData.length;
                                        if (id == rowspareData.length) {
                                            rowspareData[parseInt(id)] = spares;
                                            actualsparelength = rowspareData.length;
                                        } else {
                                            for (var a = 0; a < id; a++) {
                                                newspares[a].IdJob = rowspareData[a].IdJob,
                                                newspares[a].Text = rowspareData[a].Text,
                                                newspares[a].Nei = rowspareData[a].Nei,
                                                newspares[a].Ford = rowspareData[a].Ford,
                                                newspares[a].Bestilt = rowspareData[a].Bestilt,
                                                newspares[a].Levert = rowspareData[a].Levert,
                                                newspares[a].Pris = rowspareData[a].Pris,
                                                newspares[a].Rab = rowspareData[a].Rab,
                                                newspares[a].Belop = rowspareData[a].Belop,
                                                newspares[a].JobId = rowspareData[a].JobId,
                                                newspares[a].Flag = rowspareData[a].Flag,
                                                newspares[a].Diff = rowspareData[a].Diff,
                                                newspares[a].Item_Avail_Qty = rowspareData[a].Item_Avail_Qty,
                                                newspares[a].Disc_Amt = rowspareData[a].Disc_Amt,
                                                newspares[a].ForeignJob = rowspareData[a].ForeignJob,
                                                newspares[a].ItemDesc = rowspareData[a].ItemDesc
                                                newspares[a].IdWODetailseq = rowspareData[a].IdWODetailseq
                                                newspares[a].Id_Deb_Seq = rowspareData[a].Id_Deb_Seq
                                                newspares[a].Id_Make = rowspareData[a].Id_Make
                                                newspares[a].IdMech = rowspareData[a].IdMech
                                                newspares[a].IdWOItemseq = rowspareData[a].IdWOItemseq
                                            }

                                            for (var b = parseInt(id) ; b < rowspareData.length + 1; b++) {
                                                var spares1 = {
                                                    id: b + 1,
                                                    IdJob: "",
                                                    Text: "",
                                                    Nei: "0",
                                                    Ford: "100",
                                                    Bestilt: "",
                                                    Levert: "",
                                                    Pris: "",
                                                    Rab: "",
                                                    Belop: "",
                                                    JobId: jobId.toString(),
                                                    Flag: "0",
                                                    Diff: "",
                                                    Item_Avail_Qty: "",
                                                    Disc_Amt: "0",
                                                    ForeignJob: "",
                                                    ItemDesc: "",
                                                    IdWODetailseq: idwodetseq,
                                                    Id_Deb_Seq: iddebseq,
                                                    IdMech: idMechanic,
                                                    Id_Make: makeid,
                                                    IdWOItemseq: idwoitemseq
                                                }
                                                newspares[parseInt(b)] = spares1;
                                            }

                                            for (var a = parseInt(id) ; a < rowspareData.length; a++) {
                                                newspares[parseInt(a) + 1].IdJob = rowspareData[parseInt(a)].IdJob,
                                                newspares[parseInt(a) + 1].Text = rowspareData[parseInt(a)].Text,
                                                newspares[parseInt(a) + 1].Nei = rowspareData[parseInt(a)].Nei,
                                                newspares[parseInt(a) + 1].Ford = rowspareData[parseInt(a)].Ford,
                                                newspares[parseInt(a) + 1].Bestilt = rowspareData[parseInt(a)].Bestilt,
                                                newspares[parseInt(a) + 1].Levert = rowspareData[parseInt(a)].Levert,
                                                newspares[parseInt(a) + 1].Pris = rowspareData[parseInt(a)].Pris,
                                                newspares[parseInt(a) + 1].Rab = rowspareData[parseInt(a)].Rab,
                                                newspares[parseInt(a) + 1].Belop = rowspareData[parseInt(a)].Belop,
                                                newspares[parseInt(a) + 1].JobId = rowspareData[parseInt(a)].JobId,
                                                newspares[parseInt(a) + 1].Flag = rowspareData[parseInt(a)].Flag,
                                                newspares[parseInt(a) + 1].Diff = rowspareData[parseInt(a)].Diff,
                                                newspares[parseInt(a) + 1].Item_Avail_Qty = rowspareData[parseInt(a)].Item_Avail_Qty,
                                                newspares[parseInt(a) + 1].Disc_Amt = rowspareData[parseInt(a)].Disc_Amt,
                                                newspares[parseInt(a) + 1].ForeignJob = rowspareData[parseInt(a)].ForeignJob
                                                newspares[parseInt(a) + 1].ItemDesc = rowspareData[parseInt(a)].ItemDesc
                                                newspares[parseInt(a) + 1].IdWODetailseq = rowspareData[parseInt(a)].IdWODetailseq
                                                newspares[parseInt(a) + 1].Id_Deb_Seq = rowspareData[parseInt(a)].Id_Deb_Seq
                                                newspares[parseInt(a) + 1].Id_Make = rowspareData[parseInt(a)].Id_Make
                                                newspares[parseInt(a) + 1].Id_Mech = rowspareData[parseInt(a)].Id_Mech
                                                newspares[parseInt(a) + 1].IdWOItemseq = rowspareData[parseInt(a)].IdWOItemseq
                                            }
                                            actualsparelength = actualsparelength + 1;
                                            rowspareData = newspares;
                                        }


                                        jQuery("#jobgrid").jqGrid('clearGridData');
                                        for (var j = 0; j < actualsparelength; j++) {
                                            sparedata = rowspareData;
                                            jQuery("#jobgrid").jqGrid('addRowData', j + 1, sparedata[j]);
                                        }
                                        jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                                        $("#jobgrid").jqGrid("hideCol", "subGrid");

                                    } else {

                                        jQuery("#jobgrid").jqGrid('clearGridData');
                                        for (var j = 0; j < rowspareData.length; j++) {
                                            sparedata = rowspareData;
                                            jQuery("#jobgrid").jqGrid('addRowData', j + 1, sparedata[j]);
                                        }
                                        jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                                        $("#jobgrid").jqGrid("hideCol", "subGrid");
                                    }
                                }
                                //end of if
                                var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                var hpVatPer = hpVat;
                                var gmVatPer = gmVat;
                                var spVatPer = spVat;
                                var hpVat = 0.0;
                                var gmVat = 0.0;
                                var amtS = 0.0;
                                var vatAmount = 0.0;
                                var amtL = 0.0;
                                var discAmount = 0.0;
                                var TotalGM = 0.0;
                                var amtG = 0.0;
                                //var jobDisc = 0.0;

                                var labDisc = 0.0;
                                var gmDisc = 0.0;
                                var spareDisc = 0.0;
                                var labVatDisc = 0.0;
                                var gmVatDisc = 0.0;
                                var spareVatDisc = 0.0;
                                var totLabVatDisc = 0.0;
                                var totGmVatDisc = 0.0;
                                var totSpareVatDisc = 0.0;
                                var idCust = $('#<%=lblCustName.ClientID%>').text();
                                for (var k = 0; k < rowdisdata.length; k++) {
                                    vats = LoadGMHPVat(rowdisdata[k].IdJob, rowdisdata[k].Id_Make, idCust);
                                    //gmVat = 0.0;
                                    //hpVat = 0.0;
                                    spVat = 0.0;

                                    if (vats.length > 0) {
                                        // gmVat = fnformatDecimalValue(vats[0], seperator);
                                        // hpVat = fnformatDecimalValue(vats[1], seperator);
                                        spVat = fnformatDecimalValue(vats[2], seperator);
                                    }

                                    spVatPer = spVat;

                                    if (rowdisdata[k].Diff == "S") {
                                        if (rowdisdata[k].Jobi_Bo_Qty != undefined) {
                                            var boQty = fnformatDecimalValue(rowdisdata[k].Jobi_Bo_Qty, seperator);
                                            if (boQty != "0") {
                                                jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                                    'color': 'rgba(255, 0, 0, 0.8)',
                                                    'background-image': 'none'
                                                });
                                            }
                                        }
                                    }
                                    

                                    if (rowdisdata[k].Flag == "1" && (rowdisdata[k].DebtType == "OHC" || rowdisdata[k].DebtType == null || rowdisdata[k].DebtType == undefined ||rowdisdata[k].DebtType == "")) {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    }                                     
                                    else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "INSC") {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "INSC") {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                    }
                                    else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "INTC") {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "INTC") {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                    }

                                    else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "CLA") {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "CLA") {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                    }
                                    else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "MISC") {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "MISC") {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                    }
                                    else {
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'text-align': 'left'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'text-align': 'left'
                                        });

                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Belop", "", 'ui-state-disabled');

                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                    }
                                    if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "OR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC") || (rowdisdata[k].DebtType == "INTC") || (rowdisdata[k].DebtType == "CLA") || (rowdisdata[k].DebtType == "MISC")) {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                    }
                                    if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "RAOR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "INTC" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "CLA" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "MISC" && rowdisdata[k].Diff == "RAOR")) {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                    }
                                    if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "RBOR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "INTC" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "CLA" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "MISC" && rowdisdata[k].Diff == "RBOR")) {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                    }
                                    if (rowdisdata[k].Diff == "T") {
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Bestilt", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Levert", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Pris", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Rab", "", 'not-editable-cell');
                                    }
                                    if ((rowdisdata[k].Text != "") && (rowdisdata[k].Diff == "S")) {
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                                        if ((rowdisdata[k].ItemDesc != "" && rowdisdata[k].ItemDesc != undefined) && (rowdisdata[k].Diff == "S")) {
                                            jQuery("#jobgrid").setCell(rowdisdata[k].id, "Text", "", 'not-editable-cell');
                                        }

                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Nei", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');
                                    }

                                    if (rowdisdata[k].Diff == "L") {
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Bestilt", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');

                                        //var amount = fnformatDecimalValue(rowdisdata[k].Belop, seperator);
                                        var amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                        amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);
                                        var GM = $('#<%=txtGM.ClientID%>').val();

                                        if (rowdisdata[k].ForeignJob != "FJ") {
                                            amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                                            TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                                            // TotalGM = fnreformatDecimal(TotalGM, seperator);
                                            $('#<%=txtTGM.ClientID%>').val(TotalGM);
                                        }

                                        //Lab and GM Discount
                                        if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                                            labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                                            gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);

                                            labVatDisc = (amount * (hpVatPer / 100)).toFixed(2);
                                            totLabVatDisc = (fnformatDecimalValue(totLabVatDisc, seperator) + (fnformatDecimalValue(labVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);

                                            gmVatDisc = (amtG * (gmVatPer / 100)).toFixed(2);
                                            totGmVatDisc = (fnformatDecimalValue(totGmVatDisc, seperator) + (fnformatDecimalValue(gmVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);
                                        }

                                        hpVat = (amtL * (hpVatPer / 100)).toFixed(2);
                                        gmVat = (TotalGM * (gmVatPer / 100)).toFixed(2);
                                        hpVat = fnreformatDecimal(hpVat, seperator);
                                        gmVat = fnreformatDecimal(gmVat, seperator);
                                        amtL = fnreformatDecimal(amtL, seperator);
                                        TotalGM = fnreformatDecimal(TotalGM, seperator);
                                        $('#<%=txtTGM.ClientID%>').val(TotalGM);
                                        $('#<%=txtHPVat.ClientID%>').val(hpVat);
                                        $('#<%=txtGMVat.ClientID%>').val(gmVat);
                                        $('#<%=txtTLab.ClientID%>').val(amtL);

                                        var discChk = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                                        rowdisdata[k].Disc_Amt = fnreformatDecimal(discChk, seperator);

                                        var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(discChk, seperator)).toFixed(2);
                                        rowdisdata[k].Belop = fnreformatDecimal(perLineDisc, seperator);
                                    }

                                    if (rowdisdata[k].Diff == "S") {
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Levert", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                                        var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Bestilt');
                                        cm.editable = true;
                                        var amount;
                                        if (rowdisdata[k].Belop != undefined) {
                                            // amount = fnformatDecimalValue(rowdisdata[k].Belop, seperator);
                                            amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                        } else {
                                            amount = fnformatDecimalValue("", seperator) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                        }
                                        amtS = (fnformatDecimalValue(amtS, seperator) + amount).toFixed(2);
                                        //vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVatPer))).toFixed(2);
                                        vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01) * (fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVatPer))).toFixed(2);

                                        amtS = fnreformatDecimal(amtS, seperator);
                                        vatAmount = fnreformatDecimal(vatAmount, seperator);
                                        $('#<%=txtSPVat.ClientID%>').val(vatAmount);
                                        $('#<%=txtTSP.ClientID%>').val(amtS);

                                        if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                                            var amt;
                                            var boQty;
                                            if (rowdisdata[k].Jobi_Bo_Qty != undefined) {
                                                boQty = fnformatDecimalValue(rowdisdata[k].Jobi_Bo_Qty, seperator);
                                            } else {
                                                boQty = 0;
                                            }

                                            if (boQty != "0") {
                                                //discAmount = 0;
                                                spareDisc = (fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(0, seperator)).toFixed(2);
                                            } else {
                                                amt = fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                                //discAmount = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2);
                                                spareDisc = (fnformatDecimalValue(spareDisc, seperator) + (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100))).toFixed(2);
                                            }
                                        }
                                        spareVatDisc = (amount * (spVatPer / 100)).toFixed(2);
                                        totSpareVatDisc = (fnformatDecimalValue(totSpareVatDisc, seperator) + (fnformatDecimalValue(spareVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);

                                        var spchck = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                                        rowdisdata[k].Disc_Amt = fnreformatDecimal(spchck, seperator);

                                        var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(spchck, seperator)).toFixed(2);
                                        rowdisdata[k].Belop = fnreformatDecimal(perLineDisc, seperator);

                                    }

                                    if (rowdisdata[k].Disc_Amt != undefined) {
                                        discAmount = (fnformatDecimalValue(discAmount, seperator) + fnformatDecimalValue(rowdisdata[k].Disc_Amt, seperator)).toFixed(2);
                                    }

                                    discAmount = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(totLabVatDisc, seperator) + fnformatDecimalValue(totGmVatDisc, seperator) + fnformatDecimalValue(totSpareVatDisc, seperator)).toFixed(2);
                                }

                                if ($('#<%=txtTLab.ClientID%>').val() == "") {
                                    $('#<%=txtTLab.ClientID%>').val('0');
                                    $('#<%=txtTGM.ClientID%>').val('0');
                                    $('#<%=txtHPVat.ClientID%>').val('0');
                                    $('#<%=txtGMVat.ClientID%>').val('0');
                                }

                                if ($('#<%=txtSPVat.ClientID%>').val() == "") {
                                    $('#<%=txtSPVat.ClientID%>').val('0');
                                    $('#<%=txtTSP.ClientID%>').val('0');
                                }

                                var total = (fnformatDecimalValue($('#<%=txtTGM.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtTLab.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val(), seperator)).toFixed(2);
                                var vatTotal = (fnformatDecimalValue($('#<%=txtHPVat.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtGMVat.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val(), seperator)).toFixed(2);
                                var TIncVat = ((fnformatDecimalValue(total, seperator) + fnformatDecimalValue(vatTotal, seperator) - fnformatDecimalValue(discAmount, seperator))).toFixed(2);
                                total = fnreformatDecimal(total, seperator);
                                vatTotal = fnreformatDecimal(vatTotal, seperator);
                                TIncVat = fnreformatDecimal(TIncVat, seperator);
                                discAmount = fnreformatDecimal(discAmount, seperator);

                                $('#<%=txtNet.ClientID%>').val(total);
                                $('#<%=txtVat.ClientID%>').val(vatTotal);
                                $('#<%=txtTotal.ClientID%>').val(TIncVat);
                                $('#<%=txtDisc.ClientID%>').val(discAmount);

                                if (cellname == "Levert" || cellname == "Bestilt") {
                                    if (rowdata.IdJob == "" && rowdata.Text != "" && rowdata.Levert == "") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 0, true);
                                        document.getElementById((parseInt(rowid) + 1) + '_IdJob').select();
                                    } else {
                                        if (rowdata.IdJob == "" && rowdata.Text == "" && rowdata.Diff == "") {
                                            //jQuery('#jobgrid').jqGrid("setCell", rowid, 'Levert', "0");
                                            //jQuery('#jobgrid').jqGrid("setCell", rowid, 'Pris', "0");
                                            //jQuery('#jobgrid').jqGrid("setCell", rowid, 'Belop', "0");
                                        }
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 6, true);
                                        document.getElementById((parseInt(rowid)) + '_Pris').select();
                                    }
                                }
                                if (cellname == "Pris") {

                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                    document.getElementById((parseInt(rowid)) + '_Rab').select();
                                }
                                if (cellname == "Rab") {

                                    var nextrowdata = jQuery("#jobgrid").jqGrid('getRowData', (parseInt(rowid) + 1));
                                    if (nextrowdata.IdJob != undefined && nextrowdata.Text != undefined && nextrowdata.Diff != undefined) {
                                        if (nextrowdata.IdJob != "" && nextrowdata.Text != "" && nextrowdata.Diff == "S") {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 4, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_Bestilt').select();
                                            var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Text');
                                            cm.editable = true;
                                        } else if (nextrowdata.IdJob == "" && nextrowdata.Text != "" && (nextrowdata.Diff == "L" || nextrowdata.Diff == "T")) {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 1, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_Text').select();
                                        } else if (nextrowdata.IdJob.indexOf(":") > -1) {
                                            var nextjobrowdata = jQuery("#jobgrid").jqGrid('getRowData', (parseInt(rowid) + 2));

                                            //if (nextjobrowdata.length > 1) {
                                            if (nextjobrowdata.Text != "" && nextjobrowdata.Diff == "L") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 2, 1, true);
                                                document.getElementById((parseInt(rowid) + 2) + '_Text').select();
                                            } else if (nextjobrowdata.IdJob != "" && nextjobrowdata.Text != "" && nextjobrowdata.Diff == "S") {

                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 2, 4, true);
                                                document.getElementById((parseInt(rowid) + 2) + '_Bestilt').select();
                                            } else if (nextjobrowdata.IdJob == "" && nextjobrowdata.Text == "" && nextjobrowdata.Diff == "") {

                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 2, 0, true);
                                                document.getElementById((parseInt(rowid) + 2) + '_IdJob').select();
                                            } else {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 0, true);
                                                document.getElementById((parseInt(rowid)) + '_IdJob').select();
                                            }                                                        //}

                                        }
                                        else {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 0, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_IdJob').select();
                                            var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Text');
                                            cm.editable = true;
                                        }
                                    }
                                }
                                if (cellname == "Text") {
                                    var nextrowdata = jQuery("#jobgrid").jqGrid('getRowData', (parseInt(rowid) + 1));
                                    if (rowdata.Diff == "S") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                        document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                    } else if (rowdata.Diff == "T") {
                                        if (nextrowdata.Diff == "S") {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 4, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_Bestilt').select();
                                        }
                                        else {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 1, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_Text').select();
                                        }
                                    }
                                    else {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 5, true);
                                        document.getElementById((parseInt(rowid)) + '_Levert').select();
                                    }
                                }

                                if (cellname == "IdJob") {
                                    if (rowdata.ItemDesc == "") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                        document.getElementById((parseInt(rowid)) + '_Text').select();
                                    }
                                    else if (rowdata.IdJob == "") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                        document.getElementById((parseInt(rowid)) + '_Text').select();

                                    }
                                    else {
                                        if (rowdata.IdJob != "" && rowdata.Diff == "S" && rowdata.Levert != "" && rowdata.Bestilt != "") {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                            document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                        } else {
                                            alert("Select a valid spare");
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 0, true);
                                            document.getElementById((parseInt(rowid)) + '_IdJob').select();
                                        }
                                    }
                                }
                                // }
                                return false;
                            }
                            else if (e.keyCode === 9) {
                                var id = rowid;//jQuery("#jobgrid").jqGrid('getGridParam', 'selrow');
                                var rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                                var jobId = rowdata.JobId;
                                var idwodetseq = rowdata.IdWODetailseq;
                                var iddebseq = rowdata.Id_Deb_Seq;
                                var idMechanic = rowdata.IdMech;
                                var makeid = rowdata.Id_Make;
                                var idwoitemseq = rowdata.IdWOItemseq;
                                var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                var isSpare, isLab_OrdText;
                                var isUpdate = "False";
                                var text = "";
                                var foreignJob = "";
                                var mcName = "";
                                var user = $('#<%=hdnDuser.ClientID%>').val();
                                var debtType = rowdata.DebtType;

                                if (cellname == "Ford") {
                                    for (var k = 0; k < rowspareData.length; k++) {
                                        if (rowspareData[k].DebtType == "OHC") {
                                            //rowspareData[k].Ford = rowdata.Ford;
                                            if (rowspareData[k].Diff == "RAOR") {
                                                if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop == "") {
                                                    var raorAmt = "0";
                                                    raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                    raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                    rowspareData[k].Belop = fnformatDecimalValue(raorAmt,seperator); // To be recalculated based on RAOR/RBOR
                                                }
                                            }

                                            if (rowspareData[k].Diff == "RBOR") {
                                                if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop == "") {
                                                    var raorAmt = "0";
                                                    rborAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                    rborAmt = (fnformatDecimalValue(rborAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                    rowspareData[k].Belop = fnformatDecimalValue(rborAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                }
                                            }
                                        }
                                        if (rowspareData[k].DebtType == "INSC" && (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR")) {
                                            rowspareData[k].Ford = 100 - fnformatDecimalValue(rowdata.Ford, seperator);
                                            //rowspareData[k].Diff = "ORARD"
                                        }
                                        if (rowspareData[k].DebtType == "INTC" && (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR")) {
                                            rowspareData[k].Ford = 100 - fnformatDecimalValue(rowdata.Ford, seperator);
                                            //rowspareData[k].Diff = "ORARD"
                                        }
                                        if (rowspareData[k].DebtType == "CLA" && (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR")) {
                                            rowspareData[k].Ford = 100 - fnformatDecimalValue(rowdata.Ford, seperator);
                                            //rowspareData[k].Diff = "ORARD"
                                        }
                                        if (rowspareData[k].DebtType == "MISC" && (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR")) {
                                            rowspareData[k].Ford = 100 - fnformatDecimalValue(rowdata.Ford, seperator);
                                            //rowspareData[k].Diff = "ORARD"
                                        }
                                    }

                                    var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                    jQuery("#jobgrid").jqGrid('clearGridData');
                                    for (var i = 0; i < rowGrddata.length; i++) {
                                        jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                                    }
                                    //add a condition to check if ford% is > 0
                                    if (fnformatDecimalValue(rowdata.Ford, seperator) > 0 && (rowdata.Diff == "RBOR" || rowdata.Diff == "RAOR")) {
                                        saveJobDet(id);
                                    }
                                    else {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 6, true);
                                        document.getElementById((parseInt(rowid)) + '_Pris').select();
                                    }
                                }


                                if (cellname == "Levert" || cellname == "Bestilt" || cellname == "Pris" || cellname == "Rab") {
                                    if (e.target.value != "") {
                                        var val = e.target.value;
                                        val = fnformatDecimalValue(val, seperator);
                                        var val_Length = val.length;

                                        if (isNaN(val) || (val < 0)) {
                                            msg = GetMultiMessage('0090', '', '');
                                            alert(msg);
                                            if (cellname == "Bestilt") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                                document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                            } else if (cellname == "Levert") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 5, true);
                                                document.getElementById((parseInt(rowid)) + '_Levert').select();
                                            } else if (cellname == "Pris") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 6, true);
                                                document.getElementById((parseInt(rowid)) + '_Pris').select();
                                            } else if (cellname == "Rab") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                document.getElementById((parseInt(rowid)) + '_Rab').select();
                                            }

                                            return false;
                                        }
                                        for (i = 0; i < val_Length; i++) {
                                            str = val.charCodeAt(i);
                                            if ((str == 46) || (str == 101) || (str == 32) || (str == 45) || (str == 43)) {
                                                msg = GetMultiMessage('MSGGERR1', '', '');
                                                alert(msg);

                                                if (cellname == "Bestilt") {
                                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                                    document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                                } else if (cellname == "Levert") {
                                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 5, true);
                                                    document.getElementById((parseInt(rowid)) + '_Levert').select();
                                                } else if (cellname == "Pris") {
                                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 6, true);
                                                    document.getElementById((parseInt(rowid)) + '_Pris').select();
                                                } else if (cellname == "Rab") {
                                                    jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                    document.getElementById((parseInt(rowid)) + '_Rab').select();
                                                }

                                                return false;
                                            }
                                        }
                                        if (cellname == "Rab") {
                                            if (!(gfi_ValidNumber(e.target.value))) {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                document.getElementById((parseInt(rowid)) + '_Rab').select();
                                                return false;
                                            }
                                            if (e.target.value < 0) {
                                                var mess = GetMultiMessage('0116', GetMultiMessage('0338', '', ''), '');  //"Disc Percentage cannot be negative";
                                                alert(mess);
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                document.getElementById((parseInt(rowid)) + '_Rab').select();
                                                return false;
                                            }
                                            else if (e.target.value > 100) {
                                                var mess = GetMultiMessage('0116', GetMultiMessage('0338', '', ''), '');  //"Disc Percentage cannot be greater than 100";
                                                alert(mess);
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                                document.getElementById((parseInt(rowid)) + '_Rab').select();
                                                return false;
                                            }
                                        }

                                    }
                                }

                                if (cellname == "IdJob") {
                                    if (rowdata.IdJob != "" && rowdata.Bestilt == "" && rowdata.Pris == "") {
                                        var isSpExists = checkSpareExists(e.target.value, id);
                                        if (isSpExists == "False") {
                                            alert("Select a valid spare");
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 0, true);
                                            document.getElementById((parseInt(rowid)) + '_IdJob').select();
                                            return false;
                                        }
                                    }
                                }
                                rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);

                                if (cellname == "IdJob") {
                                    if (rowdata.IdJob != "" && rowdata.ItemDesc == "") {
                                        var isSpExists = checkSpareExists(e.target.value, id);
                                        if (rowdata.Diff == "S") {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                            document.getElementById((parseInt(rowid)) + '_Text').select();
                                        } else {
                                            alert("Select a valid spare");
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 0, true);
                                            document.getElementById((parseInt(rowid)) + '_IdJob').select();
                                            return false;
                                        }
                                    }
                                    else if (rowdata.IdJob == "") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                        document.getElementById((parseInt(rowid)) + '_Text').select();

                                    } else if (rowdata.IdJob != "" && rowdata.Text == "" && rowdata.Diff == "S") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                        document.getElementById((parseInt(rowid)) + '_Text').select();
                                    }
                                    else {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                        document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                    }
                                }

                                if (cellname == "IdJob") {
                                    //var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowid);
                                    var spareId = [];
                                    var ctr = 0;
                                    var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                    for (var k = 0; k < rowdisdata.length; k++) {
                                        //spareId[k] = rowdisdata[k].IdJob;
                                        if ((rowdisdata[k].JobId === rowdata.JobId) && (rowdisdata[k].Diff == "S")) {
                                            spareId.push(rowdisdata[k].IdJob);
                                            if (rowdisdata[k].IdJob == e.target.value) {
                                                ctr = ctr + 1;
                                            }
                                        }
                                    }

                                    if (ctr > 1) {
                                        alert("SparePart already exists.");
                                        return false;
                                    }

                                    var spmake = rowdata.Id_Make;
                                    $('#<%=hdnIdItem.ClientID%>').val(e.target.value);
                                    $('#<%=hdnIdMake.ClientID%>').val(spmake);
                                    //jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                    //document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                }

                                if (e.target.name == "Bestilt") {
                                    jQuery('#jobgrid').jqGrid("setCell", rowid, 'Bestilt', e.target.value);
                                } else if (e.target.name == "Levert") {
                                    jQuery('#jobgrid').jqGrid("setCell", rowid, 'Levert', e.target.value);
                                }

                                var idItem = $('#<%=hdnIdItem.ClientID%>').val();
                                var idMake = $('#<%=hdnIdMake.ClientID%>').val();
                                var idCust = $('#<%=lblCustName.ClientID%>').text()
                                var vats = LoadGMHPVat(idItem, idMake,idCust);
                                var gmVat = 0.0;
                                var hpVat = 0.0;
                                var spVat = 0.0;
                                var lastsel;
                                var rowSeldata;

                                if (vats.length > 0) {
                                    gmVat = fnformatDecimalValue(vats[0], seperator);
                                    hpVat = fnformatDecimalValue(vats[1], seperator);
                                    spVat = fnformatDecimalValue(vats[2], seperator);
                                }

                                if (cellname == "Levert" || cellname == "Bestilt" || cellname == "Pris" || cellname == "Rab") {
                                    lastsel = jQuery('#jobgrid').jqGrid('getGridParam', 'selrow');
                                    rowSeldata = jQuery("#jobgrid").jqGrid('getRowData', lastsel);
                                    for (var k = 0; k < rowspareData.length; k++) {

                                        //if (rowspareData[k].Text != "") {
                                        if (e.target.value != "0" || e.target.value == "") {
                                            //if ((rowspareData[k].JobId == jobId) && (rowspareData[k].IdJob.indexOf(":") > -1)) {
                                            if ((rowspareData[k].IdMech != "") || (rowspareData[k].IdMech != undefined)) {
                                                if (rowspareData[k].IdJob != undefined) {
                                                    if (rowspareData[k].IdJob.indexOf(":") > -1) {
                                                        text = rowspareData[k].IdMech;
                                                        var mechName = new Array();
                                                        if (rowspareData[k].MechanicName != "" && rowspareData[k].MechanicName != null && rowspareData[k].MechanicName != undefined) {
                                                            mechName = rowspareData[k].MechanicName.split("-");
                                                            var userName = mechName[0] + "-" + mechName[1];
                                                            mcName = userName;
                                                        }
                                                        foreignJob = rowspareData[k].ForeignJob;
                                                        jQuery("#jobgrid").setCell(rowspareData[k].id, "IdJob", "", 'not-editable-cell');
                                                    }
                                                    else {
                                                        if (text == "" || text == undefined) {
                                                            rowspareData[k].IdMech = user;
                                                            text = rowspareData[k].IdMech;
                                                            var mechName = new Array();
                                                            if (rowspareData[k].MechanicName != "" && rowspareData[k].MechanicName != null && rowspareData[k].MechanicName != undefined) {
                                                                mechName = rowspareData[k].MechanicName.split("-");
                                                                var userName = mechName[0] + "-" + mechName[1];
                                                                mcName = userName;
                                                                if (mechName.length > 2) {
                                                                    rowspareData[k].IdMech = mechName[2];
                                                                }
                                                                
                                                            }
                                                        }
                                                    }
                                                }
                                                else {
                                                    rowspareData[k].IdMech = user;
                                                    text = rowspareData[k].IdMech;
                                                }
                                            }
                                            else {

                                                if ((rowspareData[k].id == id)) {
                                                    if (text == "") {
                                                        text = rowspareData[k].IdJob;
                                                    }
                                                }
                                            }
                                        }
                                        //}

                                        if (rowspareData[k].id == id) {
                                            if (text != "" && text != undefined) {
                                                rowspareData[k].IdMech = text;
                                                text = rowspareData[k].IdMech;
                                            } else {
                                                rowspareData[k].IdMech = user;
                                                text = rowspareData[k].IdMech;
                                            }
                                            if (rowspareData[k].IdJob != "" && rowspareData[k].Diff == "S") {
                                                if (rowspareData[k].Item_Avail_Qty != "0") {
                                                    if (e.target.name == "Levert" || e.target.name == "Bestilt") {
                                                        rowspareData[k].Levert = fnreformatDecimal(e.target.value, seperator);

                                                        if (e.target.name == "Bestilt") {
                                                            //Need to calculate back order qty
                                                            //call getspareid - set itemavailqty , levert and back order column based on itemavailqty

                                                            checkSpareExists(rowspareData[k].IdJob, id);
                                                            var chkdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                                                            var backOrdQty = 0;
                                                            var spavailqty = 0;
                                                            var orderQty = 0;
                                                            var delvQty = 0;
                                                            var qtyDeliver = 0;
                                                            var Availa_Qty = 0.0;
                                                            var qtyDeliv = 0.0
                                                            spavailqty = fnformatDecimalValue(chkdata.Item_Avail_Qty, seperator);
                                                            orderQty = fnformatDecimalValue(e.target.value, seperator);
                                                            qtyDeliver = fnformatDecimalValue(chkdata.Levert, seperator) + fnformatDecimalValue(qtyDeliver, seperator);


                                                            if (spavailqty == 0) {
                                                                delvQty = 0;
                                                                backOrdQty = orderQty;
                                                            }
                                                            else if (spavailqty >= orderQty) {
                                                                delvQty = orderQty;
                                                                backOrdQty = orderQty - delvQty;
                                                            }
                                                            else if (spavailqty < orderQty) {
                                                                Availa_Qty = spavailqty + qtyDeliver;
                                                                if ((fnformatDecimalValue(orderQty, seperator) - fnformatDecimalValue(Availa_Qty, seperator)) > 0) {
                                                                    backOrdQty = orderQty - Availa_Qty;

                                                                    if (backOrdQty > 0) {
                                                                        backOrdQty = backOrdQty;
                                                                        qtyDeliv = orderQty - Availa_Qty;
                                                                        delvQty = qtyDeliv;
                                                                    }
                                                                    else {
                                                                        backOrdQty = 0;
                                                                        qtyDeliv = orderQty;
                                                                        delvQty = qtyDeliv;
                                                                    }
                                                                }

                                                                else {
                                                                    backOrdQty = 0;
                                                                    qtyDeliv = orderQty;
                                                                    delvQty = qtyDeliv;
                                                                }

                                                            }

                                                            if (chkdata.Rab == "" || chkdata.Rab == undefined || fnformatDecimalValue(chkdata.Rab, seperator)) {
                                                                if (fnformatDecimalValue($('#<%=hdnOHCSpareDisc.ClientID%>').val(), seperator) > 0) {
                                                                    rowspareData[k].Rab = $('#<%=hdnOHCSpareDisc.ClientID%>').val();
                                                                }
                                                                else if (fnformatDecimalValue($('#<%=hdnOHCGenDisc.ClientID%>').val(), seperator) > 0) {
                                                                    rowspareData[k].Rab = $('#<%=hdnOHCGenDisc.ClientID%>').val();
                                                                }
                                                                else if (fnformatDecimalValue(rowspareData[k].SpareDiscount, seperator) > 0) {
                                                                    rowspareData[k].Rab = rowspareData[k].SpareDiscount;
                                                                }
                                                                else {
                                                                    rowspareData[k].Rab = "";
                                                                }
                                                            }

                                                            jQuery('#jobgrid').jqGrid("setCell", id, 'Bestilt', orderQty);
                                                            jQuery('#jobgrid').jqGrid("setCell", id, 'Levert', delvQty);
                                                            jQuery('#jobgrid').jqGrid("setCell", id, 'Item_Avail_Qty', spavailqty);
                                                            jQuery('#jobgrid').jqGrid("setCell", id, 'Jobi_Bo_Qty', backOrdQty);
                                                            if (backOrdQty > 0) {
                                                                jQuery("#jobgrid").jqGrid('setCell', rowspareData[k].id, "Bestilt", "", {
                                                                    'color': 'rgba(255, 0, 0, 0.8)',
                                                                    'background-image': 'none',
                                                                    'text-align': 'right'
                                                                });
                                                            }

                                                        }
                                                    }
                                                    if (e.target.name == "Pris") {
                                                        rowspareData[k].Pris = fnreformatDecimal(e.target.value, seperator);
                                                        if (rowspareData[k].IdJob == "" && rowspareData[k].Text == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Levert == "") {
                                                            rowspareData[k].Diff = "OR";
                                                        }

                                                        if (rowspareData[k].Diff == "OR") {
                                                            if (fnformatDecimalValue(e.target.value, seperator) > fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val(), seperator)) {
                                                                alert("Own Risk Amount is greater than job total");
                                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(id), 6, true);
                                                                document.getElementById((parseInt(id)) + '_Pris').select();
                                                                return false;
                                                            }
                                                            saveJobDet(id);
                                                            rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                            //return false;
                                                        }
                                                    }

                                                    if (e.target.name == "Pris") {
                                                        if (rowspareData[k].DebtType == "OHC") {
                                                            //rowspareData[k].Ford = rowdata.Ford;
                                                            if ((rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") && (rowspareData[k].JobId == "1")) {
                                                                if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop != "" && fnformatDecimalValue(rowspareData[k].Ford, seperator) > 0) {
                                                                    var raorAmt = e.target.value;
                                                                    raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                                    raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                                    rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                                } else if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris != "" && rowspareData[k].Belop == 0 && rowspareData[k].Ford == "") {
                                                                    var raorAmt = e.target.value;
                                                                    rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                                }
                                                                saveJobDet(id);
                                                                return false;
                                                            }

                                                        }
                                                    }

                                                    if (e.target.name == "Rab") {
                                                        var rebate = fnformatDecimalValue(e.target.value, seperator);
                                                        if (rebate == 0) {
                                                            rowspareData[k].Rab = "";
                                                        }
                                                        else {
                                                            rowspareData[k].Rab = fnreformatDecimal(e.target.value, seperator);
                                                        }

                                                        //if any reduction lines exists the belop amount shd be recalculated
                                                        recalculateRedLines();
                                                        saveJobDet(id);
                                                        //return false;
                                                        rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                    }

                                                    var amt = (fnformatDecimalValue(rowspareData[k].Levert, seperator) * fnformatDecimalValue(rowspareData[k].Pris, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) * 0.01)).toFixed(2);
                                                    var disc = 0.0;
                                                    //rowspareData[k].Belop = fnreformatDecimal(amt, seperator);

                                                    if (rowspareData[k].Rab != undefined && rowspareData[k].Rab != "0") {
                                                        disc = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowspareData[k].Rab, seperator) / 100)).toFixed(2)
                                                        amt = (amt - disc).toFixed(2);
                                                    }
                                                    rowspareData[k].Disc_Amt = fnreformatDecimal(disc, seperator);

                                                    if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                        rowspareData[k].Belop = fnreformatDecimal(amt, seperator);
                                                    }

                                                    if (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") {
                                                        if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Belop != "") {
                                                            var raorAmt = "0";
                                                            raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                            raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                            rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                        }
                                                    }

                                                    if (rowspareData[k].Diff == "S" && rowspareData[k].IdJob != "") {
                                                        rowspareData[k].Diff = "S";
                                                    }
                                                    else if (rowspareData[k].Diff == "L" && rowspareData[k].Text != "") {
                                                        rowspareData[k].Diff = "L";
                                                        if (rowspareData[k].IdMech == $('#<%=hdnDuser.ClientID%>').val()) {
                                                            rowspareData[k].IdJob = "";
                                                        }
                                                        else {
                                                            rowspareData[k].IdJob = mcName;
                                                        }

                                                        rowspareData[k].IdMech = text;
                                                        rowspareData[k].ForeignJob = foreignJob;
                                                    }
                                                    else if (rowspareData[k].Diff == "T" && rowspareData[k].Text != "") {
                                                        rowspareData[k].Diff = "T";
                                                    }
                                                    else {
                                                        if (text != "" && rowspareData[k].Levert != "") {
                                                            rowspareData[k].Diff = "L";
                                                            if (rowspareData[k].Rab == "" || rowspareData[k].Rab == undefined || fnformatDecimalValue(rowspareData[k].Rab, seperator) == 0) {
                                                                if (fnformatDecimalValue($('#<%=hdnOHCLabDisc.ClientID%>').val(), seperator) > 0) {
                                                                    rowspareData[k].Rab = fnreformatDecimal($('#<%=hdnOHCLabDisc.ClientID%>').val(), seperator);
                                                                }
                                                                else if (fnformatDecimalValue($('#<%=hdnOHCGenDisc.ClientID%>').val(), seperator) > 0) {
                                                                    rowspareData[k].Rab = fnreformatDecimal($('#<%=hdnOHCGenDisc.ClientID%>').val(), seperator);
                                                                }
                                                                else {
                                                                    rowspareData[k].Rab = "";
                                                                }
                                                            }
                                                                
                                                            if (rowspareData[k].IdMech == $('#<%=hdnDuser.ClientID%>').val()) {
                                                                rowspareData[k].IdJob = "";
                                                            }
                                                            else {
                                                                rowspareData[k].IdJob = mcName;
                                                            }
                                                            rowspareData[k].IdMech = text;
                                                            rowspareData[k].ForeignJob = foreignJob;
                                                        } else if (text != "" && rowspareData[k].Levert == "" && rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                            if (rowspareData[k].Text != "") {
                                                                rowspareData[k].Diff = "T";
                                                                $('#' + rowspareData[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                                                var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Text');
                                                                cm.editable = true;
                                                            } else {
                                                                if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                                    rowspareData[k].Diff = "";
                                                                }
                                                            }
                                                            //rowspareData[k].IdJob = text;
                                                        } else {
                                                            if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                                rowspareData[k].Diff = "";
                                                            }
                                                        }
                                                    }
                                                }
                                                else {
                                                    //Added when spare had valid qty and edit spare when 0 qty - Need to check
                                                    //if (rowspareData[k].Levert == "0") {
                                                    //    rowspareData[k].Levert = "0";
                                                    //}

                                                    //rowspareData[k].Levert = "0";
                                                    //rowspareData[k].Belop = "0";
                                                    //rowspareData[k].Jobi_Bo_Qty = rowspareData[k].Bestilt;
                                                    //jQuery("#jobgrid").jqGrid('setCell', rowspareData[k].id, "Bestilt", "", {
                                                    //    'color': 'rgba(255, 0, 0, 0.8)',
                                                    //    'background-image': 'none'
                                                    //});

                                                    if (e.target.name == "Bestilt") {
                                                        var chkdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                                                        var backOrdQty = 0;
                                                        var spavailqty = 0;
                                                        var orderQty = 0;
                                                        var delvQty = 0;
                                                        var qtyDeliver = 0;
                                                        var Availa_Qty = 0.0;
                                                        var qtyDeliv = 0.0
                                                        spavailqty = fnformatDecimalValue(chkdata.Item_Avail_Qty, seperator);
                                                        orderQty = fnformatDecimalValue(e.target.value, seperator);
                                                        qtyDeliver = fnformatDecimalValue(chkdata.Levert, seperator) + fnformatDecimalValue(qtyDeliver, seperator);
                                                        Availa_Qty = spavailqty + qtyDeliver;
                                                        if ((fnformatDecimalValue(orderQty, seperator) - fnformatDecimalValue(Availa_Qty, seperator)) > 0) {
                                                            backOrdQty = orderQty - Availa_Qty;

                                                            if (backOrdQty > 0) {
                                                                backOrdQty = backOrdQty;
                                                                qtyDeliv = orderQty - backOrdQty;
                                                                delvQty = qtyDeliv;
                                                            }
                                                            else {
                                                                backOrdQty = 0;
                                                                qtyDeliv = orderQty;
                                                                delvQty = qtyDeliv;
                                                            }
                                                        }

                                                        else {
                                                            backOrdQty = 0;
                                                            qtyDeliv = orderQty;
                                                            delvQty = qtyDeliv;
                                                        }


                                                        rowspareData[k].Bestilt = orderQty;
                                                        rowspareData[k].Levert = delvQty;
                                                        rowspareData[k].Item_Avail_Qty = spavailqty;
                                                        rowspareData[k].Jobi_Bo_Qty = backOrdQty;

                                                        //rowspareData[k].Belop = "2000";

                                                        jQuery("#jobgrid").setCell(rowspareData[k].id, "Belop", "", 'ui-state-disabled');
                                                        jQuery('#jobgrid').jqGrid("setCell", rowspareData[k].id, 'Jobi_Bo_Qty', backOrdQty);
                                                        if (backOrdQty > 0) {
                                                            jQuery("#jobgrid").jqGrid('setCell', rowspareData[k].id, "Bestilt", "", {
                                                                'color': 'rgba(255, 0, 0, 0.8)',
                                                                'background-image': 'none',
                                                                'text-align': 'right'
                                                            });
                                                        }
                                                    }

                                                    if (e.target.name == "Rab") {
                                                        var rebate = fnformatDecimalValue(e.target.value, seperator);
                                                        if (rebate == 0) {
                                                            rowspareData[k].Rab = "";
                                                        }
                                                        else {
                                                            rowspareData[k].Rab = fnreformatDecimal(e.target.value, seperator);
                                                        }
                                                        //if any reduction lines exists the belop amount shd be recalculated
                                                        recalculateRedLines();
                                                        saveJobDet(id);
                                                        //return false;
                                                        rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                    }
                                                }
                                            }
                                            else {
                                                if (e.target.name == "Levert" || e.target.name == "Bestilt") {
                                                    rowspareData[k].Levert = fnreformatDecimal(e.target.value, seperator);
                                                    if (e.target.value == "") {
                                                        rowspareData[k].Pris = "";
                                                        rowspareData[k].Diff = "T";
                                                        //saveJobDet(id);
                                                        //return false;
                                                        //rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                        $('#' + rowspareData[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                                        var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Text');
                                                        cm.editable = true;
                                                    } else {
                                                        if (rowspareData[k].Text != "") {
                                                            rowspareData[k].Diff = "L";
                                                            if (rowspareData[k].Rab == "" || rowspareData[k].Rab == undefined || fnformatDecimalValue(rowspareData[k].Rab, seperator) == 0) {
                                                                if (fnformatDecimalValue($('#<%=hdnOHCLabDisc.ClientID%>').val(), seperator) > 0) {
                                                                    rowspareData[k].Rab = $('#<%=hdnOHCLabDisc.ClientID%>').val();
                                                                }
                                                                else if (fnformatDecimalValue($('#<%=hdnOHCGenDisc.ClientID%>').val(), seperator) > 0) {
                                                                    rowspareData[k].Rab = $('#<%=hdnOHCGenDisc.ClientID%>').val();
                                                                }
                                                                else {
                                                                    rowspareData[k].Rab = "";
                                                                }
                                                            }
                                                        } else {
                                                            rowspareData[k].Diff = "";
                                                            rowspareData[k].Levert = "";
                                                            rowspareData[k].Pris = "";
                                                        }
                                                    }
                                                }
                                                if (e.target.name == "Pris") {
                                                    rowspareData[k].Pris = fnreformatDecimal(e.target.value, seperator);
                                                    if (rowspareData[k].IdJob == "" && rowspareData[k].Text == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Levert == "" && rowspareData[k].Pris != "") {
                                                        rowspareData[k].Diff = "OR";
                                                    }

                                                    if (rowspareData[k].Diff == "OR") {
                                                        if (fnformatDecimalValue(e.target.value, seperator) > fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val(), seperator)) {
                                                            alert("Own Risk Amount is greater than job total");
                                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(id), 6, true);
                                                            document.getElementById((parseInt(id)) + '_Pris').select();
                                                            return false;
                                                        }
                                                        saveJobDet(id);
                                                        rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                        //return false;
                                                    }
                                                }

                                                if (e.target.name == "Pris") {
                                                    if (rowspareData[k].DebtType == "OHC") {
                                                        //rowspareData[k].Ford = rowdata.Ford;
                                                        if ((rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") && (rowspareData[k].JobId == "1")) {
                                                            if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop != "" && fnformatDecimalValue(rowspareData[k].Ford, seperator) > 0) {
                                                                var raorAmt = e.target.value;
                                                                raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                                raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                                rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                            } else if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris != "" && rowspareData[k].Belop == 0 && rowspareData[k].Ford == "") {
                                                                var raorAmt = e.target.value;
                                                                rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                            }
                                                            saveJobDet(id);
                                                            return false;
                                                        }

                                                    }
                                                }

                                                if (e.target.name == "Rab") {
                                                    var rebate = fnformatDecimalValue(e.target.value, seperator)
                                                    if (rebate == 0) {
                                                        rowspareData[k].Rab = "";
                                                    }
                                                    else {
                                                        rowspareData[k].Rab = fnreformatDecimal(e.target.value, seperator);
                                                    }
                                                    //if any reduction lines exists the belop amount shd be recalculated
                                                    recalculateRedLines();
                                                    saveJobDet(id);
                                                    //return false;
                                                    rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                }
                                                var amt = (fnformatDecimalValue(rowspareData[k].Levert, seperator) * fnformatDecimalValue(rowspareData[k].Pris, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) * 0.01)).toFixed(2);
                                                var disc = 0.0;
                                                //rowspareData[k].Belop = fnreformatDecimal(amt, seperator);
                                                if (rowspareData[k].Rab != undefined && rowspareData[k].Rab != "0") {
                                                    disc = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowspareData[k].Rab, seperator) / 100)).toFixed(2);
                                                    amt = (amt - disc).toFixed(2);
                                                }

                                                rowspareData[k].Disc_Amt = fnreformatDecimal(disc, seperator);
                                                if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                    rowspareData[k].Belop = fnreformatDecimal(amt, seperator);
                                                }
                                                if (rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") {
                                                    if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Belop != "") {
                                                        var raorAmt = "0";
                                                        raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                                        raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                                        rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                                                    }
                                                }
                                                
                                                if (rowspareData[k].Diff == "S" && rowspareData[k].IdJob != "") {
                                                    rowspareData[k].Diff = "S";
                                                }
                                                else if (rowspareData[k].Diff == "L" && rowspareData[k].Text != "") {
                                                    rowspareData[k].Diff = "L";
                                                    if (rowspareData[k].IdMech == $('#<%=hdnDuser.ClientID%>').val()) {
                                                        rowspareData[k].IdJob = "";
                                                    }
                                                    else {
                                                        rowspareData[k].IdJob = mcName;
                                                    }
                                                    rowspareData[k].IdMech = text;
                                                    rowspareData[k].ForeignJob = foreignJob;
                                                }
                                                else if (rowspareData[k].Diff == "T" && rowspareData[k].Text != "") {
                                                    rowspareData[k].Diff = "T";
                                                }
                                                else {
                                                    if ((text != "" && text != undefined) && (rowspareData[k].Levert != "")) {
                                                        rowspareData[k].Diff = "L";
                                                        if (rowspareData[k].IdMech == $('#<%=hdnDuser.ClientID%>').val()) {
                                                            rowspareData[k].IdJob = "";
                                                        }
                                                        else {
                                                            rowspareData[k].IdJob = mcName;
                                                        }
                                                        rowspareData[k].IdMech = text;
                                                        rowspareData[k].ForeignJob = foreignJob;
                                                    } else if ((text != "" && text != undefined) && (rowspareData[k].Levert == "") && rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                        if (rowspareData[k].Text != "") {
                                                            rowspareData[k].Diff = "T";
                                                            $('#' + rowspareData[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                                            var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Text');
                                                            cm.editable = true;
                                                        } else {
                                                            if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                                rowspareData[k].Diff = "";
                                                            }
                                                        }
                                                        //rowspareData[k].IdJob = text;
                                                    } else {
                                                        if (rowspareData[k].Diff != "OR" && rowspareData[k].Diff != "RAOR" && rowspareData[k].Diff != "RBOR") {
                                                            rowspareData[k].Diff = "";
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        if (rowspareData[k].JobId == jobId) {
                                            if (rowspareData[k].DebtType == "OHC") {
                                                if ((rowspareData[k].IdJob == "" || rowspareData[k].IdJob == undefined) && rowspareData[k].Text == "") {
                                                    isUpdate = "True";
                                                } else {
                                                    isUpdate = "False";
                                                }
                                            }
                                        }
                                        else {
                                            if (rowspareData[k].id == id) {
                                                isUpdate = "True";
                                            }
                                        }
                                        if (rowspareData[k].Diff == "T") {
                                            if (e.target.name == "Levert") {
                                                if (e.target.value == "") {
                                                    if (rowspareData[k].id == id) {
                                                        saveJobDet(id);
                                                        return false;
                                                    }
                                                }
                                            }
                                        }
                                    }

                                    if (isUpdate == "False") {
                                        //add new line
                                        var spares = {
                                            id: parseInt(id) + 1,
                                            IdJob: "",
                                            Text: "",
                                            Nei: "0",
                                            Ford: "100",
                                            Bestilt: "",
                                            Levert: "",
                                            Pris: "",
                                            Rab: "",
                                            Belop: "",
                                            JobId: jobId.toString(),
                                            Flag: "0",
                                            Diff: "",
                                            Item_Avail_Qty: "",
                                            Disc_Amt: "0",
                                            ForeignJob: "",
                                            ItemDesc: "",
                                            IdWOLabSeq: "",
                                            IdWODetailseq: idwodetseq,
                                            Id_Deb_Seq: iddebseq,
                                            Id_Make: makeid,
                                            IdMech: idMechanic,
                                            IdWOItemseq: idwoitemseq,
                                            DebtType: debtType,
                                            SpareDiscount: 0
                                        }

                                        var newspares = $.extend(true, {}, rowspareData);
                                        var actualsparelength = rowspareData.length;
                                        if (id == rowspareData.length) {
                                            rowspareData[parseInt(id)] = spares;
                                            actualsparelength = rowspareData.length;
                                        } else {
                                            for (var a = 0; a < id; a++) {
                                                newspares[a].IdJob = rowspareData[a].IdJob,
                                                newspares[a].Text = rowspareData[a].Text,
                                                newspares[a].Nei = rowspareData[a].Nei,
                                                newspares[a].Ford = rowspareData[a].Ford,
                                                newspares[a].Bestilt = rowspareData[a].Bestilt,
                                                newspares[a].Levert = rowspareData[a].Levert,
                                                newspares[a].Pris = rowspareData[a].Pris,
                                                newspares[a].Rab = rowspareData[a].Rab,
                                                newspares[a].Belop = rowspareData[a].Belop,
                                                newspares[a].JobId = rowspareData[a].JobId,
                                                newspares[a].Flag = rowspareData[a].Flag,
                                                newspares[a].Diff = rowspareData[a].Diff,
                                                newspares[a].Item_Avail_Qty = rowspareData[a].Item_Avail_Qty,
                                                newspares[a].Disc_Amt = rowspareData[a].Disc_Amt
                                                newspares[a].IdWOLabSeq = rowspareData[a].IdWOLabSeq
                                                newspares[a].IdWODetailseq = rowspareData[a].IdWODetailseq
                                                newspares[a].Id_Deb_Seq = rowspareData[a].Id_Deb_Seq
                                                newspares[a].Id_Make = rowspareData[a].Id_Make
                                                newspares[a].IdMech = rowspareData[a].IdMech
                                                newspares[a].IdWOItemseq = rowspareData[a].IdWOItemseq
                                                newspares[a].DebtType = rowspareData[a].DebtType
                                                newspares[a].SpareDiscount = rowspareData[a].SpareDiscount
                                            }

                                            for (var b = parseInt(id) ; b < rowspareData.length + 1; b++) {
                                                var spares1 = {
                                                    id: b + 1,
                                                    IdJob: "",
                                                    Text: "",
                                                    Nei: "0",
                                                    Ford: "100",
                                                    Bestilt: "",
                                                    Levert: "",
                                                    Pris: "",
                                                    Rab: "",
                                                    Belop: "",
                                                    JobId: jobId.toString(),
                                                    Flag: "0",
                                                    Diff: "",
                                                    Item_Avail_Qty: "",
                                                    Disc_Amt: "0",
                                                    ForeignJob: "",
                                                    ItemDesc: "",
                                                    IdWOLabSeq: "",
                                                    IdWODetailseq: idwodetseq,
                                                    Id_Deb_Seq: iddebseq,
                                                    Id_Make: makeid,
                                                    IdMech: idMechanic,
                                                    IdWOItemseq: idwoitemseq,
                                                    DebtType: debtType,
                                                    SpareDiscount:0
                                                }
                                                newspares[parseInt(b)] = spares1;
                                            }

                                            for (var a = parseInt(id) ; a < rowspareData.length; a++) {
                                                newspares[parseInt(a) + 1].IdJob = rowspareData[parseInt(a)].IdJob,
                                                newspares[parseInt(a) + 1].Text = rowspareData[parseInt(a)].Text,
                                                newspares[parseInt(a) + 1].Nei = rowspareData[parseInt(a)].Nei,
                                                newspares[parseInt(a) + 1].Ford = rowspareData[parseInt(a)].Ford,
                                                newspares[parseInt(a) + 1].Bestilt = rowspareData[parseInt(a)].Bestilt,
                                                newspares[parseInt(a) + 1].Levert = rowspareData[parseInt(a)].Levert,
                                                newspares[parseInt(a) + 1].Pris = rowspareData[parseInt(a)].Pris,
                                                newspares[parseInt(a) + 1].Rab = rowspareData[parseInt(a)].Rab,
                                                newspares[parseInt(a) + 1].Belop = rowspareData[parseInt(a)].Belop,
                                                newspares[parseInt(a) + 1].JobId = rowspareData[parseInt(a)].JobId,
                                                newspares[parseInt(a) + 1].Flag = rowspareData[parseInt(a)].Flag,
                                                newspares[parseInt(a) + 1].Diff = rowspareData[parseInt(a)].Diff,
                                                newspares[parseInt(a) + 1].Item_Avail_Qty = rowspareData[parseInt(a)].Item_Avail_Qty,
                                                newspares[parseInt(a) + 1].Disc_Amt = rowspareData[parseInt(a)].Disc_Amt,
                                                newspares[parseInt(a) + 1].IdWOLabSeq = rowspareData[parseInt(a)].IdWOLabSeq
                                                newspares[parseInt(a) + 1].IdWODetailseq = rowspareData[parseInt(a)].IdWODetailseq
                                                newspares[parseInt(a) + 1].Id_Deb_Seq = rowspareData[parseInt(a)].Id_Deb_Seq
                                                newspares[parseInt(a) + 1].Id_Make = rowspareData[parseInt(a)].Id_Make
                                                newspares[parseInt(a) + 1].IdMech = rowspareData[parseInt(a)].IdMech
                                                newspares[parseInt(a) + 1].IdWOItemseq = rowspareData[parseInt(a)].IdWOItemseq
                                                newspares[parseInt(a) + 1].DebtType = rowspareData[parseInt(a)].DebtType
                                            }
                                            actualsparelength = actualsparelength + 1;
                                            rowspareData = newspares;
                                        }


                                        jQuery("#jobgrid").jqGrid('clearGridData');
                                        for (var j = 0; j < actualsparelength; j++) {
                                            sparedata = rowspareData;
                                            jQuery("#jobgrid").jqGrid('addRowData', j + 1, sparedata[j]);
                                        }
                                        jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                                        $("#jobgrid").jqGrid("hideCol", "subGrid");

                                    } else {

                                        jQuery("#jobgrid").jqGrid('clearGridData');
                                        for (var j = 0; j < rowspareData.length; j++) {
                                            sparedata = rowspareData;
                                            jQuery("#jobgrid").jqGrid('addRowData', j + 1, sparedata[j]);
                                        }
                                        jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                                        $("#jobgrid").jqGrid("hideCol", "subGrid");
                                    }
                                }
                                //end of if
                                var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                var hpVatPer = hpVat;
                                var gmVatPer = gmVat;
                                var spVatPer = spVat;
                                var hpVat = 0.0;
                                var gmVat = 0.0;
                                var amtS = 0.0;
                                var vatAmount = 0.0;
                                var amtL = 0.0;
                                var discAmount = 0.0;
                                var TotalGM = 0.0;
                                var amtG = 0.0;
                                //var jobDisc = 0.0;
                                var labDisc = 0.0;
                                var gmDisc = 0.0;
                                var spareDisc = 0.0;

                                var labVatDisc = 0.0;
                                var gmVatDisc = 0.0;
                                var spareVatDisc = 0.0;
                                var totLabVatDisc = 0.0;
                                var totGmVatDisc = 0.0;
                                var totSpareVatDisc = 0.0;
                                var idCust = $('#<%=lblCustName.ClientID%>').text();
                                for (var k = 0; k < rowdisdata.length; k++) {

                                    vats = LoadGMHPVat(rowdisdata[k].IdJob, rowdisdata[k].Id_Make, idCust);
                                    //gmVat = 0.0;
                                    //hpVat = 0.0;
                                    spVat = 0.0;

                                    if (vats.length > 0) {
                                        // gmVat = fnformatDecimalValue(vats[0], seperator);
                                        // hpVat = fnformatDecimalValue(vats[1], seperator);
                                        spVat = fnformatDecimalValue(vats[2], seperator);
                                    }

                                    spVatPer = spVat;

                                    if (rowdisdata[k].Diff == "S") {
                                        if (rowdisdata[k].Jobi_Bo_Qty != undefined) {
                                            var boQty = fnformatDecimalValue(rowdisdata[k].Jobi_Bo_Qty, seperator);
                                            if (boQty != "0"  ) {
                                                jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                                    'color': 'rgba(255, 0, 0, 0.8)',
                                                    'background-image': 'none'
                                                });
                                            }
                                        }
                                    }
                                  
                                    if (rowdisdata[k].Flag == "1" && (rowdisdata[k].DebtType == "OHC" || rowdisdata[k].DebtType == null || rowdisdata[k].DebtType == undefined || rowdisdata[k].DebtType == "")) {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    }                                   
                                    else if (rowdisdata[k].Flag == "1" &&  rowdisdata[k].DebtType == "INSC") {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "INSC") {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                    }
                                    else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "INTC") {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "INTC") {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(33, 186, 69, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                    }
                                    else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "CLA") {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "CLA") {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                    }
                                    else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "MISC") {
                                        //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'font-weight': 'normal',
                                            'background-image': 'none'
                                        });
                                    } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "MISC") {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(41, 128, 185, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                    }
                                    else {
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                                            'text-align': 'right'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                                            'text-align': 'left'
                                        });
                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                                            'text-align': 'left'
                                        });
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Belop", "", 'ui-state-disabled');

                                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                                            'background-color': 'rgba(255, 255, 153, 1)',
                                            'color': 'rgba(0, 0, 0, 1)',
                                            'background-image': 'none',
                                            'font-weight': 'normal',
                                            'text-align': 'right'
                                        });
                                    }
                                    if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "OR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC") || (rowdisdata[k].DebtType == "INTC") || (rowdisdata[k].DebtType == "CLA") || (rowdisdata[k].DebtType == "MISC")) {
                                        $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                     }
                                    if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "RAOR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "INTC" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "CLA" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "MISC" && rowdisdata[k].Diff == "RAOR")) {
                                         $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                     }
                                    if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "RBOR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "INTC" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "CLA" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "MISC" && rowdisdata[k].Diff == "RBOR")) {
                                         $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                                     }
                                    if (rowdisdata[k].Diff == "T") {
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Bestilt", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Levert", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Pris", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Rab", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');
                                    }
                                    if ((rowdisdata[k].Text != "") && (rowdisdata[k].Diff == "S")) {
                                        if ((rowdisdata[k].ItemDesc != "" && rowdisdata[k].ItemDesc != undefined) && (rowdisdata[k].Diff == "S")) {
                                            jQuery("#jobgrid").setCell(rowdisdata[k].id, "Text", "", 'not-editable-cell');
                                        }
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Nei", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');
                                    }
                                    if (rowdisdata[k].Diff == "L") {
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Bestilt", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');

                                        // var amount = fnformatDecimalValue(rowdisdata[k].Belop, seperator);
                                        var amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                        amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);

                                        var GM = $('#<%=txtGM.ClientID%>').val();

                                        if (rowdisdata[k].ForeignJob != "FJ") {
                                            amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                                            TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                                            //$('#<%=txtTGM.ClientID%>').val(TotalGM);
                                        }

                                        //Lab and GM Discount
                                        if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                                            labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                                            gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                                            labVatDisc = (amount * (hpVatPer / 100)).toFixed(2);
                                            totLabVatDisc = (fnformatDecimalValue(totLabVatDisc, seperator) + (fnformatDecimalValue(labVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);

                                            gmVatDisc = (amtG * (gmVatPer / 100)).toFixed(2);
                                            totGmVatDisc = (fnformatDecimalValue(totGmVatDisc, seperator) + (fnformatDecimalValue(gmVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);
                                        }

                                        hpVat = (amtL * (hpVatPer / 100)).toFixed(2);
                                        gmVat = (TotalGM * (gmVatPer / 100)).toFixed(2);
                                        hpVat = fnreformatDecimal(hpVat, seperator);
                                        gmVat = fnreformatDecimal(gmVat, seperator);
                                        amtL = fnreformatDecimal(amtL, seperator);
                                        TotalGM = fnreformatDecimal(TotalGM, seperator);

                                        $('#<%=txtTGM.ClientID%>').val(TotalGM);
                                        $('#<%=txtHPVat.ClientID%>').val(hpVat);
                                        $('#<%=txtGMVat.ClientID%>').val(gmVat);
                                        $('#<%=txtTLab.ClientID%>').val(amtL);

                                        var discChk = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                                        rowdisdata[k].Disc_Amt = fnreformatDecimal(discChk, seperator);

                                        var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(discChk, seperator)).toFixed(2);
                                        rowdisdata[k].Belop = fnreformatDecimal(perLineDisc, seperator);
                                    }

                                    if (rowdisdata[k].Diff == "S") {
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "Levert", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                                        var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Bestilt');
                                        cm.editable = true;
                                        var amount;
                                        if (rowdisdata[k].Belop != undefined) {
                                            //amount = fnformatDecimalValue(rowdisdata[k].Belop, seperator);
                                            amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                        } else {
                                            amount = fnformatDecimalValue("", seperator) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                        }
                                        amtS = (fnformatDecimalValue(amtS, seperator) + amount).toFixed(2);
                                        //vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVatPer))).toFixed(2);
                                        vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01) * (fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVatPer))).toFixed(2);
                                        amtS = fnreformatDecimal(amtS, seperator);
                                        vatAmount = fnreformatDecimal(vatAmount, seperator);
                                        $('#<%=txtSPVat.ClientID%>').val(vatAmount);
                                        $('#<%=txtTSP.ClientID%>').val(amtS);

                                        if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                                            var amt;
                                            var boQty;
                                            if (rowdisdata[k].Jobi_Bo_Qty != undefined) {
                                                boQty = fnformatDecimalValue(rowdisdata[k].Jobi_Bo_Qty, seperator);
                                            } else {
                                                boQty = 0;
                                            }

                                            if (boQty != "0") {
                                                //discAmount = 0;
                                                spareDisc = (fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(0, seperator)).toFixed(2);
                                            } else {
                                                amt = fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                                //discAmount = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2);
                                                spareDisc = (fnformatDecimalValue(spareDisc, seperator) + (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100))).toFixed(2);
                                            }
                                        }
                                        spareVatDisc = (amount * (spVatPer / 100)).toFixed(2);
                                        totSpareVatDisc = (fnformatDecimalValue(totSpareVatDisc, seperator) + (fnformatDecimalValue(spareVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);

                                        var spchck = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                                        rowdisdata[k].Disc_Amt = fnreformatDecimal(spchck, seperator);

                                        var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(spchck, seperator)).toFixed(2);
                                        rowdisdata[k].Belop = fnreformatDecimal(perLineDisc, seperator);

                                    }

                                    if (rowdisdata[k].Disc_Amt != undefined) {
                                        discAmount = (fnformatDecimalValue(discAmount, seperator) + fnformatDecimalValue(rowdisdata[k].Disc_Amt, seperator)).toFixed(2);
                                    }

                                    discAmount = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(totLabVatDisc, seperator) + fnformatDecimalValue(totGmVatDisc, seperator) + fnformatDecimalValue(totSpareVatDisc, seperator)).toFixed(2);
                                }
                                if ($('#<%=txtTLab.ClientID%>').val() == "") {
                                    $('#<%=txtTLab.ClientID%>').val('0');
                                    $('#<%=txtTGM.ClientID%>').val('0');
                                    $('#<%=txtHPVat.ClientID%>').val('0');
                                    $('#<%=txtGMVat.ClientID%>').val('0');
                                }

                                if ($('#<%=txtSPVat.ClientID%>').val() == "") {
                                    $('#<%=txtSPVat.ClientID%>').val('0');
                                    $('#<%=txtTSP.ClientID%>').val('0');
                                }

                                var total = (fnformatDecimalValue($('#<%=txtTGM.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtTLab.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val(), seperator)).toFixed(2);
                                var vatTotal = (fnformatDecimalValue($('#<%=txtHPVat.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtGMVat.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val(), seperator)).toFixed(2);
                                var TIncVat = ((fnformatDecimalValue(total, seperator) + fnformatDecimalValue(vatTotal, seperator) - fnformatDecimalValue(discAmount, seperator))).toFixed(2);
                                total = fnreformatDecimal(total, seperator);
                                vatTotal = fnreformatDecimal(vatTotal, seperator);
                                TIncVat = fnreformatDecimal(TIncVat, seperator);
                                discAmount = fnreformatDecimal(discAmount, seperator);
                                $('#<%=txtNet.ClientID%>').val(total);
                                $('#<%=txtVat.ClientID%>').val(vatTotal);
                                $('#<%=txtTotal.ClientID%>').val(TIncVat);
                                $('#<%=txtDisc.ClientID%>').val(discAmount);

                                if (cellname == "Levert" || cellname == "Bestilt") {
                                    if (rowdata.IdJob == "" && rowdata.Text != "" && rowdata.Levert == "") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 0, true);
                                        document.getElementById((parseInt(rowid) + 1) + '_IdJob').select();
                                    } else {
                                        if (rowdata.IdJob == "" && rowdata.Text == "" && rowdata.Diff == "") {
                                            //jQuery('#jobgrid').jqGrid("setCell", rowid, 'Levert', "0");
                                            //jQuery('#jobgrid').jqGrid("setCell", rowid, 'Pris', "0");
                                            //jQuery('#jobgrid').jqGrid("setCell", rowid, 'Belop', "0");
                                        }
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 6, true);
                                        document.getElementById((parseInt(rowid)) + '_Pris').select();
                                    }
                                }

                                if (cellname == "Pris") {
                                    if (rowdata.Diff == "OR")
                                    {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 0, true);
                                        document.getElementById((parseInt(rowid) + 1) + '_IdJob').select();
                                    } else
                                    {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 7, true);
                                        document.getElementById((parseInt(rowid)) + '_Rab').select();
                                    }

                                }
                                if (cellname == "Rab") {
                                    var nextrowdata = jQuery("#jobgrid").jqGrid('getRowData', (parseInt(rowid) + 1));
                                    if (nextrowdata.IdJob != undefined && nextrowdata.Text != undefined && nextrowdata.Diff != undefined) {
                                        if (nextrowdata.IdJob != "" && nextrowdata.Text != "" && nextrowdata.Diff == "S") {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 4, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_Bestilt').select();
                                            var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Text');
                                            cm.editable = true;
                                        } else if (nextrowdata.IdJob == "" && nextrowdata.Text != "" && (nextrowdata.Diff == "L" || nextrowdata.Diff == "T")) {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 1, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_Text').select();
                                        } else if (nextrowdata.IdJob.indexOf(":") > -1) {
                                            var nextjobrowdata = jQuery("#jobgrid").jqGrid('getRowData', (parseInt(rowid) + 2));

                                            //if (nextjobrowdata.length > 1) {
                                            if (nextjobrowdata.Text != "" && nextjobrowdata.Diff == "L") {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 2, 1, true);
                                                document.getElementById((parseInt(rowid) + 2) + '_Text').select();
                                            } else if (nextjobrowdata.IdJob != "" && nextjobrowdata.Text != "" && nextjobrowdata.Diff == "S") {

                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 2, 4, true);
                                                document.getElementById((parseInt(rowid) + 2) + '_Bestilt').select();
                                            } else if (nextjobrowdata.IdJob == "" && nextjobrowdata.Text == "" && nextjobrowdata.Diff == "") {

                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 2, 0, true);
                                                document.getElementById((parseInt(rowid) + 2) + '_IdJob').select();
                                            } else {
                                                jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 0, true);
                                                document.getElementById((parseInt(rowid)) + '_IdJob').select();
                                            }
                                        }
                                        else {
                                            //Need to fix
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 0, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_IdJob').select();
                                            var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Text');
                                            cm.editable = true;
                                        }
                                    }
                                }
                                if (cellname == "Text") {
                                    var nextrowdata = jQuery("#jobgrid").jqGrid('getRowData', (parseInt(rowid) + 1));
                                    if (rowdata.Diff == "S") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                        document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                    } else if (rowdata.Diff == "T") {
                                        if (nextrowdata.Diff == "S") {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 4, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_Bestilt').select();
                                        }
                                        else {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid) + 1, 1, true);
                                            document.getElementById((parseInt(rowid) + 1) + '_Text').select();
                                        }
                                    }
                                    else {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 5, true);
                                        document.getElementById((parseInt(rowid)) + '_Levert').select();
                                    }
                                }

                                if (cellname == "IdJob") {
                                    if (rowdata.IdJob != "" && rowdata.ItemDesc == "") {
                                        if (rowdata.Diff == "S") {
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                            document.getElementById((parseInt(rowid)) + '_Text').select();
                                        } else {
                                            alert("Select a valid spare");
                                            jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 0, true);
                                            document.getElementById((parseInt(rowid)) + '_IdJob').select();
                                        }
                                    }
                                    else if (rowdata.IdJob == "") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 1, true);
                                        document.getElementById((parseInt(rowid)) + '_Text').select();

                                    } else if (rowdata.IdJob != "" && rowdata.Diff == "S") {
                                        jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowid), 4, true);
                                        document.getElementById((parseInt(rowid)) + '_Bestilt').select();
                                    }
                                }
                            }
                            // originalKeydown.call(this, e);
                            // we can do something after jqGrid process "keydown" event
                        });
                    }
                }
            });

            $grid = $("#jobgrid");
            var cm = $grid.jqGrid('getGridParam', 'colModel');
            $grid.mouseover(function (e) {
                var $td = $(e.target).closest('td'),
                    $tr = $td.closest('tr.jqgrow'),
                    rowId = $tr.attr('id'),
                    ci;
                var rowId = $(e.target).parents("tr:first").attr('id');
                var rowdata = jQuery('#jobgrid').getRowData(rowId);
                if (rowId) {
                    ci = $.jgrid.getCellIndex($td[0]); // works mostly as $td[0].cellIndex
                    $("#jobgrid").setCell(rowId, 'IdJob', '', '', { 'title': rowdata.MechanicName });
                    if (rowdata.Flag == 1) {
                        $("#jobgrid").setCell(rowId, 'Text', '', '', { 'title': rowdata.MechanicName });
                    }
                    if (console) {
                        console.log('You rolled over the row with id="' + rowId + '" in the column ' + cm[ci].name);
                    }
                }
            });

            //loadJobDetails();

            loadWOJobGrid(idWONO, idWOPrefix);
            //loadInvBasis(idWONO, idWOPrefix);

            function calcReductionAmt(redType) {
                var seperator = '<%= Session("Decimal_Seperator") %>';
                var hpVat = 0.0;
                var gmVat = 0.0;
                var amtS = 0.0;
                var vatAmount = 0.0;
                var amtL = 0.0;
                var discAmount = 0.0;
                var TotalGM = 0.0;
                var amtG = 0.0;
                var labDisc = 0.0;
                var gmDisc = 0.0;
                var spareDisc = 0.0;
                var ownRiskAmt = 0.0;
                var redAfterOR = 0.0;
                var redBeforeOR = 0.0;
                var redAmt = 0.0;

                var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');

                for (var k = 0; k < rowdisdata.length; k++) {

                    if (rowdisdata[k].JobId == "1" && rowdisdata[k].DebtType == "OHC") {
                        var idItem = rowdisdata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                        var idMake = rowdisdata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                        var idCust = $('#<%=lblCustName.ClientID%>').text();
                        //var idItem = $('#<%=hdnIdItem.ClientID%>').val();
                        //var idMake = $('#<%=hdnIdMake.ClientID%>').val();
                        var vats = LoadGMHPVat(idItem, idMake, idCust);
                        gmVat = 0.0;
                        hpVat = 0.0;
                        spVat = 0.0;

                        if (vats.length > 0) {
                            gmVat = fnformatDecimalValue(vats[0], seperator);
                            hpVat = fnformatDecimalValue(vats[1], seperator);
                            spVat = fnformatDecimalValue(vats[2], seperator);
                        }

                        var hpVatPer = hpVat;
                        var gmVatPer = gmVat;
                        var spVatPer = spVat;

                        if (rowdisdata[k].Diff == "L") {
                            var amount = 0.0;
                            //amount = fnformatDecimalValue(rowdisdata[k].Belop, seperator);
                            //amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                            amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator));
                            amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);

                            var GM = fnformatDecimalValue($('#<%=txtGM.ClientID%>').val(), seperator);
                            if (rowdisdata[k].ForeignJob != "FJ") {
                                amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                                TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                                //$('#<%=txtTGM.ClientID%>').val(TotalGM);
                            }

                            //Lab and GM Discount
                            if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                                labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                                gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                            }

                            hpVat = (amtL * (hpVatPer / 100)).toFixed(2);
                            gmVat = (TotalGM * (gmVatPer / 100)).toFixed(2);
                            hpVat = fnreformatDecimal(hpVat, seperator);
                            gmVat = fnreformatDecimal(gmVat, seperator);
                            amtL = fnreformatDecimal(amtL, seperator);  //Total Labour Amt
                            TotalGM = fnreformatDecimal(TotalGM, seperator); // Total GM Amt

                            var discChk = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                            var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(discChk, seperator)).toFixed(2);
                        }

                        if (rowdisdata[k].Diff == "S") {
                            var amount = 0.0;
                            //amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                            amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator));
                            amtS = (fnformatDecimalValue(amtS, seperator) + amount).toFixed(2);
                            //vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01) * (fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVat))).toFixed(2);
                            vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVat))).toFixed(2);
                            amtS = fnreformatDecimal(amtS, seperator); // Total Spare Amt
                            vatAmount = fnreformatDecimal(vatAmount, seperator);

                            if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                                var amt;
                                var boQty;
                                if (rowdisdata[k].Jobi_Bo_Qty != undefined) {
                                    boQty = fnformatDecimalValue(rowdisdata[k].Jobi_Bo_Qty, seperator);
                                } else {
                                    boQty = 0;
                                }

                                if (boQty != "0") {
                                    //discAmount = 0;
                                    spareDisc = (fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(0, seperator)).toFixed(2);
                                } else {
                                    amt = fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator);
                                    spareDisc = (fnformatDecimalValue(spareDisc, seperator) + (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100))).toFixed(2);
                                }
                            }

                            //Spare Discount
                            var spchck = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                            var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(spchck, seperator)).toFixed(2);
                        }

                        //if (rowdisdata[k].Disc_Amt != undefined) {
                        //    discAmount = (fnformatDecimalValue(discAmount, seperator) + fnformatDecimalValue(rowdisdata[k].Disc_Amt, seperator)).toFixed(2);
                        //}

                        //discAmount = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(spareDisc, seperator)).toFixed(2);

                        if (rowdisdata[k].Diff == "OR" && rowdisdata[k].DebtType == "OHC") {
                            ownRiskAmt = fnformatDecimalValue(rowdisdata[k].Pris, seperator);
                        }

                    }

                    var total = (fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtL, seperator) + fnformatDecimalValue(amtS, seperator)).toFixed(2);
                    var vatTotal = (fnformatDecimalValue(hpVat, seperator) + fnformatDecimalValue(gmVat, seperator) + fnformatDecimalValue(vatAmount, seperator)).toFixed(2);
                    // var TIncVat = ((fnformatDecimalValue(total, seperator) + fnformatDecimalValue(vatTotal, seperator) - fnformatDecimalValue(discAmount, seperator))).toFixed(2);
                    var TExclVat = ((fnformatDecimalValue(total, seperator) - fnformatDecimalValue(discAmount, seperator))).toFixed(2);
                    redAfterOR = fnformatDecimalValue(total, seperator) - fnformatDecimalValue(ownRiskAmt, seperator);
                    redBeforeOR = fnformatDecimalValue(total, seperator);

                    total = fnreformatDecimal(total, seperator);
                    vatTotal = fnreformatDecimal(vatTotal, seperator);
                    //TIncVat = fnreformatDecimal(TIncVat, seperator);
                    discAmount = fnreformatDecimal(discAmount, seperator);

                    if (redType == "RAOR") {
                        redAmt = fnformatDecimalValue(redAfterOR, seperator);
                    } else if (redType == "RBOR") {
                        redAmt = fnformatDecimalValue(redBeforeOR, seperator);
                    } else {
                        redAmt = fnformatDecimalValue(total, seperator);
                    }
                }

                return redAmt;
            }

            function recalculateRedLines() {

                var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                for (var k = 0; k < rowspareData.length; k++) {
                    if (rowspareData[k].DebtType == "OHC") {

                        if ((rowspareData[k].Diff == "RAOR" || rowspareData[k].Diff == "RBOR") && (rowspareData[k].JobId == "1")) {
                            if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris == "" && rowspareData[k].Belop != "" && fnformatDecimalValue(rowspareData[k].Ford, seperator) > 0) {
                                var raorAmt = "0";
                                raorAmt = calcReductionAmt(rowspareData[k].Diff.toString());
                                raorAmt = (fnformatDecimalValue(raorAmt, seperator) * (fnformatDecimalValue(rowspareData[k].Ford, seperator) / 100)).toFixed(2);
                                rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                            } else if (rowspareData[k].Levert == "" && rowspareData[k].Bestilt == "" && rowspareData[k].Pris != "" && rowspareData[k].Belop == 0 && rowspareData[k].Ford == "") {
                                var raorAmt = "0";
                                rowspareData[k].Belop = fnformatDecimalValue(raorAmt, seperator); // To be recalculated based on RAOR/RBOR
                            }
                        }
                    }
                }

                var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                jQuery("#jobgrid").jqGrid('clearGridData');
                for (var i = 0; i < rowGrddata.length; i++) {
                    jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                }
            }

            function loadConfig(idWONO, idWOPrefix, userId, idMakeRP, idModelRP) {
                var garageMatPer = "";
                var hpVatPer = "";
                var idJob = "1";
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/LoadConfig",
                    data: "{'idWONO':'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "',userId:'" + userId + "',idMakeRP:'" + idMakeRP + "',idModelRP:'" + idModelRP + "',idJob:'" + idJob + "'}",
                    dataType: "json",
                    async: false,//Very important
                    success: function (Result) {
                        if (Result.d.length > 0) {
                            garageMatPer = Result.d[1][0].WO_Gm_Per;
                            garageMatPer = fnformatDecimalValue(garageMatPer, seperator);
                            $('#<%=txtGM.ClientID%>').val(garageMatPer);
                            $('#<%=hdnDuser.ClientID%>').val(Result.d[5][0].Id_Login);
                            loadMechanics(Result.d[4]);
                        }
                    }
                });
            }


            function checkSpareExists(idItem, id) {
                var idCustomer = $('#<%=lblCustName.ClientID%>').text();
                var vehId = $('#<%=hdnVehId.ClientID%>').val();
                var strResult = "False";
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/GetSpareById",
                    data: "{'spName':'" + idItem + "',idCustomer:'" + idCustomer + "',vehId:'" + vehId + "'}",
                    dataType: "json",
                    async: false,//Very important
                    success: function (Result) {
                        if (Result.d.length > 0) {

                            var rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);
                            var jobId = rowdata.JobId;
                            for (var i = 0; i < Result.d.length; i++) {
                                if (rowdata.Diff == "S") {
                                    if (rowdata.Id_Make == Result.d[i].Id_Make) {
                                        $("#<%=hdnAvail_Qty.ClientID%>").val(Result.d[i].Item_Avail_Qty);

                                        $("#<%=hdnIdItem.ClientID%>").val(Result.d[i].Id_Item);
                                        $("#<%=hdnIdMake.ClientID%>").val(Result.d[i].Id_Make);

                                        jQuery("#jobgrid").setCell(id, "Nei", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(id, "Ford", "", 'not-editable-cell');

                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Nei', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Ford', "100");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Bestilt', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Levert', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Pris', Result.d[i].Sp_Item_Price);
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Text', Result.d[i].Item_Sp_Desc);
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Diff', "S");
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'Item_Avail_Qty', Result.d[i].Item_Avail_Qty);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'IdJob', Result.d[i].Id_Item);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'Id_Make', Result.d[i].Id_Make);
                                        jQuery('#jobgrid').jqGrid("setCell", id, 'ItemDesc', Result.d[i].Item_Sp_Desc);
                                        jQuery("#jobgrid").jqGrid('setCell', id, 'Id_Warehouse', Result.d[i].Id_Wh_Item);

                                        if (Result.d[i].Item_Sp_Desc != "") {
                                            jQuery("#jobgrid").setCell(id, "Text", "", 'not-editable-cell');
                                        }
                                    }
                                } else {
                                    $("#<%=hdnAvail_Qty.ClientID%>").val(Result.d[i].Item_Avail_Qty);

                                    $("#<%=hdnIdItem.ClientID%>").val(Result.d[i].Id_Item);
                                    $("#<%=hdnIdMake.ClientID%>").val(Result.d[i].Id_Make);

                                    jQuery("#jobgrid").setCell(id, "Nei", "", 'not-editable-cell');
                                    jQuery("#jobgrid").setCell(id, "Ford", "", 'not-editable-cell');

                                    jQuery('#jobgrid').jqGrid("setCell", id, 'Nei', "0");
                                    jQuery('#jobgrid').jqGrid("setCell", id, 'Ford', "100");
                                    jQuery('#jobgrid').jqGrid("setCell", id, 'Bestilt', "0");
                                    jQuery('#jobgrid').jqGrid("setCell", id, 'Levert', "0");
                                    jQuery('#jobgrid').jqGrid("setCell", id, 'Pris', Result.d[i].Sp_Item_Price);
                                    jQuery('#jobgrid').jqGrid("setCell", id, 'Text', Result.d[i].Item_Sp_Desc);
                                    jQuery('#jobgrid').jqGrid("setCell", id, 'Diff', "S");
                                    jQuery('#jobgrid').jqGrid("setCell", id, 'Item_Avail_Qty', Result.d[i].Item_Avail_Qty);
                                    jQuery("#jobgrid").jqGrid('setCell', id, 'IdJob', Result.d[i].Id_Item);
                                    jQuery("#jobgrid").jqGrid('setCell', id, 'Id_Make', Result.d[i].Id_Make);
                                    jQuery('#jobgrid').jqGrid("setCell", id, 'ItemDesc', Result.d[i].Item_Sp_Desc);
                                    jQuery("#jobgrid").jqGrid('setCell', id, 'Id_Warehouse', Result.d[i].Id_Wh_Item);

                                    if (Result.d[i].Item_Sp_Desc != "") {
                                        jQuery("#jobgrid").setCell(id, "Text", "", 'not-editable-cell');
                                    }
                                }                                                                
                            }                            

                            var cmn = jQuery("#jobgrid").jqGrid('getColProp', 'Bestilt');
                            cmn.editable = true;
                            jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                            $("#jobgrid").jqGrid("hideCol", "subGrid");
                            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                            strResult = "True";
                        } else {
                            strResult = "False";
                        }
                    }
                });
                return strResult;
            }

            function LoadHourlyPrice(hpMode) {
                var idMakeRP, idRPPCD_Hp, jobPCD_Hp, idCust, userid, vehGrp, Hprice;
                idRPPCD_Hp = "";
                jobPCD_Hp = "";
                idMakeRP = "AM";
                var jobId = ""; //jobId;
                var chkChrgStdTime = "false";
                idCust = $('#<%=lblCustName.ClientID%>').text();
                userid = '<%= Session("UserID")%>';
                vehGrp = $('#<%=hdnVehId.ClientID%>').val();
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/LoadHourlyPrice",
                    data: "{'idCust':'" + idCust + "',userid:'" + userid + "',idMakeRP:'" + idMakeRP + "',idRPPCD_Hp:'" + idRPPCD_Hp + "',jobPCD_Hp:'" + jobPCD_Hp + "',vehGrp:'" + vehGrp + "',jobId:'" + jobId + "',chkChrgStdTime:'" + chkChrgStdTime + "',hpmode:'" + hpMode + "'}",
                    //data: {},
                    dataType: "json",
                    async: false,//Very important
                    success: function (Result) {
                        if (Result.d.length > 0) {
                            if (hpMode == "New") {
                                Hprice = Result.d[0].HP_Price;
                            }
                        }
                    }
                });
                return Hprice;
            }

            function loadDefaultMake() {
                var loadAllMakes = "";
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWoJobDetails.aspx/Fetch_Sp_Make",
                    data: "{'q':'" + loadAllMakes + "'}",
                    dataType: "json",
                    async: false,//Very important
                    success: function (data) {
                        $('#<%=selMake.ClientID%>').empty();
                       // $('#<%=selMake.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                        data = data.d;
                        $.each(data, function (key, value) {
                            $('#<%=selMake.ClientID%>').append($("<option></option>").val(value.Sp_Make).html(value.Sp_Make));
                           // $('#<%=selMake.ClientID%>')[0].selectedIndex = 3;
                        });
                    },
                    error: function (xhr, status, error) {
                        alert("Error" + error);
                        var err = eval("(" + xhr.responseText + ")");
                        alert('Error: ' + err.Message);
                    }
                });
            }

            function loadDefaultSpSupplier() {
                var loadAllSupp = "";
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWoJobDetails.aspx/Fetch_Sp_Supplier",
                    data: "{'q':'" + loadAllSupp + "'}",
                    dataType: "json",
                    async: false,//Very important
                    success: function (Result) {

                        $('#<%=selSupp.ClientID%>').empty();
                        //$('#<%=selSupp.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");

                        Result = Result.d;
                        $.each(Result, function (key, value) {
                            $('#<%=selSupp.ClientID%>').append($("<option></option>").val(value.SP_SupplierID).html(value.SP_SupplierName));
                            // $('#<%=selSupp.ClientID%>')[0].selectedIndex = 3;
                        });
                    },
                    error: function (xhr, status, error) {
                        alert("Error" + error);
                        var err = eval("(" + xhr.responseText + ")");
                        alert('Error: ' + err.Message);
                    }
                });
            }

            function loadDefaultLocation() {
                var loadAllLoc = "";
                var spMake = new Array();
                var spSupp = new Array();
                var spLoc = new Array();

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWoJobDetails.aspx/Fetch_Sp_Location",
                    data: "{'q':'" + loadAllLoc + "'}",
                    dataType: "json",
                    async: false,//Very important
                    success: function (Result) {

                        $('#<%=selLoc.ClientID%>').empty();
                        //$('#<%=selLoc.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");

                        Result = Result.d;
                        $.each(Result, function (key, value) {
                            $('#<%=selLoc.ClientID%>').append($("<option></option>").val(value.Sp_Location).html(value.Sp_Location));
                            // $('#<%=selLoc.ClientID%>')[0].selectedIndex = 3;
                        });

                        //Load default value
                        if (Result.length > 0) {
                            if (Result[0].Id_Make != null) {
                                spMake = Result[0].Id_Make.split(',');
                                if (spMake.length > 1) {
                                    for (var k = 0; k < spMake.length; k++) {
                                        //spMake[k] = "'" + spMake[k] + "'";
                                        $('.ui.fluid.dropdown').dropdown('set selected', spMake[k]);
                                    }
                                }
                            }
                            
                            if (Result[0].SP_SupplierID != null) {
                                spSupp = Result[0].SP_SupplierID.split(',');
                                if (spSupp.length > 1) {
                                    for (var k = 0; k < spSupp.length; k++) {
                                        $('.ui.fluid.dropdown').dropdown('set selected', spSupp[k]);
                                    }
                                }
                            }

                            if (Result[0].Item_Sp_Desc != null) {
                                spLoc = Result[0].Item_Sp_Desc.split(',');
                                if (spLoc.length > 1) {
                                    for (var k = 0; k < spLoc.length; k++) {
                                        $('.ui.fluid.dropdown').dropdown('set selected', spLoc[k]);
                                    }
                                }
                            }

                            if (Result[0].Sp_FlgStockItem == 1) {
                                $("#<%=chkSPStkQty.ClientID%>").prop('checked', true);
                            } else {
                                $("#<%=chkSPStkQty.ClientID%>").prop('checked', false);
                            }
                            if (Result[0].SP_FlgStockItemStatus == 1) {
                                $("#<%=chkFlgStockItem.ClientID%>").prop('checked', true);
                            } else {
                                $("#<%=chkFlgStockItem.ClientID%>").prop('checked', false);
                            }
                            if (Result[0].SP_FlgNonStockItemStatus == 1) {
                                $("#<%=chkFlgNonStockItem.ClientID%>").prop('checked', true);
                            } else {
                                $("#<%=chkFlgNonStockItem.ClientID%>").prop('checked', false);
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        alert("Error" + error);
                        var err = eval("(" + xhr.responseText + ")");
                        alert('Error: ' + err.Message);
                    }
                });
            }

            function overlay(state, mod) {
                $('body').focus();
                if (mod == "") {
                    $('.modal').addClass('hidden');
                }
                else {
                    $('#' + mod).removeClass('hidden');
                }
                if (state == "") {
                    $('.overlayHide').toggleClass('ohActive');
                } else if (state == "on") {
                    $('.overlayHide').addClass('ohActive');
                } else {
                    $('.overlayHide').removeClass('ohActive');
                }
            }



            $(".modClose").on('click', function (e) {
                overlay('off', '');
            });


            $(function () {
                $.contextMenu({
                    selector: '#dgdSelectedSPGrid tr',
                    callback: function (key, options) {
                        var m = "clicked: " + key;
                        window.console && console.log(m) || alert(m);
                    },
                    items: {
                        "DeleteLine": {
                            name: "DeleteLine",
                            callback: function (key, opt) {
                                var rowId = opt.$trigger[0].id;
                                var grdBasket = $("#dgdSelectedSPGrid");
                                grdBasket.delRowData(rowId);

                            }
                        }
                    }
                });
            });

            $(function () {
                $.contextMenu({
                    selector: '#jobgrid tr',
                    //$trigger = $('#jobgrid tr'),
                    //$trigger[$this[0].id].className ='context-menu-disabled',
                    build: function ($trigger, e) {
                        // this callback is executed every time the menu is to be shown
                        // its results are destroyed every time the menu is hidden
                        // e is the original contextmenu event, containing e.pageX and e.pageY (amongst other data)
                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', $trigger[0].id);

                        var currJobId = rowdata.JobId;
                        var rowjobData = $('#jobgrid').jqGrid('getGridParam', 'data');
                        var totalLength = rowjobData.length;
                        var selectedId = parseInt($trigger[0].id);
                        var cType = "DEL";//DEL - Delete Line/Job ;ADD=Add job;EDIT= Edit job; Default DEL
                        var lastOHCrow;
                        var spId = rowdata.IdJob;
                        var textDesc = rowdata.Text;
                        var ownRiskExists = false;

                        for (var k = 0; k < rowjobData.length; k++) {
                            if (rowjobData[k].Flag != "1" && rowjobData[k].DebtType == "OHC") {
                                if (rowjobData[k].IdJob == "" && rowjobData[k].Text == "" && (rowjobData[k].Diff == "" || rowjobData[k].Diff == undefined || rowjobData[k].Diff == null)) {
                                    lastOHCrow = rowjobData[k].id;
                                }
                            }

                            if (rowjobData[k].JobId == "1" && rowjobData[k].DebtType == "OHC" && rowjobData[k].Diff == "OR" && rowjobData[k].Bestilt == "" && rowjobData[k].Levert == "" && rowjobData[k].Pris != "") {
                                ownRiskExists = true;
                            }
                        }

                        if (spId != "") {
                            spId = spId.toString().indexOf("<input");
                            if (spId != -1) {
                                spId = "";
                            }
                        }
                        if (textDesc != "") {
                            textDesc = spId.toString().indexOf("<input");
                            if (textDesc != -1) {
                                textDesc = "";
                            }
                        }

                        if (selectedId == totalLength && rowdata.DebtType != "INSC" && rowdata.DebtType != "INTC" && rowdata.DebtType != "CLA" && rowdata.DebtType != "MISC") {
                            cType = "ADD"; //Add and spares search for jobs without insurance customer
                        } else if (rowdata.Flag == "1" && (rowdata.DebtType != "INSC" && rowdata.DebtType != "INTC" && rowdata.DebtType != "CLA" && rowdata.DebtType != "MISC")) {
                            cType = "EDIT";
                        } else if (rowdata.Diff == "" && spId == "" && textDesc == "" && (rowdata.DebtType != "INSC" && rowdata.DebtType != "INTC" && rowdata.DebtType != "CLA" && rowdata.DebtType != "MISC")) {
                            if (selectedId == lastOHCrow && rowdata.JobId == "1") {
                                if (ownRiskExists == false) {
                                    cType = "ADDJOBSPSRCHOR"; // When Insurance customer exists - Addjob,sp search,ownrisk if not exists for job1
                                } else {
                                    cType = "ADDJOB"; //Add job,spares search for jobs with insurance customer
                                }
                            } else if (rowdata.JobId != "1") {
                                if (selectedId == lastOHCrow) {
                                    cType = "ADDJOB"; //Add job,spares search for jobs with insurance customer
                                } else {
                                    cType = "SRCHSPARE"; //Add spares search only
                                }

                            } else {
                                if (ownRiskExists == false && $('#<%=hdnInsCustId.ClientID%>').val() != "") {
                                    cType = "SRCH"; //Add spares search,own risk for job1 if not exists for job1 with insurance customer
                                } else {
                                    cType = "SRCHSPARE"; //Add spares search only
                                }
                            }
                        } else if (rowdata.DebtType == "INSC" || rowdata.DebtType == "INTC" || rowdata.DebtType == "CLA" || rowdata.DebtType == "MISC") {
                            cType = "DEL";
                        }
                        return {
                            callback: function (key, options) {
                                var m = "clicked: " + key;
                                window.console && console.log(m) || alert(m);
                            },
                            items: {
                                "AddJob": {
                                    name: "AddJob",
                                    visible: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        if (cType == "ADDJOB" || cType == "ADD" || cType == "ADDJOBSPSRCHOR") {
                                            return true;
                                        }
                                        else {
                                            return false;
                                        }
                                    },
                                    callback: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var idMech = parseInt(rowId) + 1;
                                        $('#<%=hdnRowId.ClientID%>').val(idMech);
                                        $('#<%=ddlMechanic.ClientID%>')[0].selectedIndex = 0;
                                        $("#<%=txtJobId.ClientID%>").removeAttr("disabled");
                                        var idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
                                        var idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;
                                        var jobNo = fetchJobs();
                                        $('#<%=txtJobId.ClientID%>').val(jobNo);
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        var mydata2;
                                        var arrAddJob = new Array();


                                        $('#modWashCustomer').modal({
                                            onDeny: function () {
                                            },
                                            onApprove: function () {
                                                //debugger;
                                                var mechId = $('#<%=ddlMechanic.ClientID%>').val();
                                                if ($('#<%=txtJobId.ClientID%>').val() != "") {
                                                    var jobIds = [];
                                                    var distjobIds = [];
                                                    var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                    for (var k = 0; k < rowdisdata.length; k++) {
                                                        jobIds[k] = rowdisdata[k].JobId;
                                                    }

                                                    var distinct_axes2 = [];

                                                    for (var a = 0; a < jobIds.length; a++) {
                                                        var str = jobIds[a];
                                                        if (distinct_axes2.indexOf(str) == -1) {
                                                            distinct_axes2.push(str);
                                                        }
                                                    }
                                                    distjobIds = distinct_axes2;

                                                    var jobExist = isInArray($('#<%=txtJobId.ClientID%>').val(), distjobIds);
                                                    if (jobExist == true) {
                                                        alert("Job Number already exists.");
                                                        return false;
                                                    }
                                                }

                                                $.ajax({
                                                    type: "POST",
                                                    contentType: "application/json; charset=utf-8",
                                                    url: "frmWOJobDetails.aspx/AddSpareLine",
                                                    //data: "{}",
                                                    data: "{'idWONO':'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "'}",
                                                    dataType: "json",
                                                    async: false,//Very important
                                                    success: function (data) {
                                                        mydata2 = data;
                                                        mydata2.IdJob = "Job: " + jobNo + "";
                                                        mydata2.Nei = "0";
                                                        mydata2.Ford = "100";
                                                        mydata2.Text = "";
                                                        mydata2.JobId = jobNo.toString();
                                                        mydata2.Flag = "1";
                                                        mydata2.Belop = "";
                                                        mydata2.ForeignJob = "";
                                                        mydata2.ItemDesc = "";
                                                        mydata2.Levert = "";
                                                        mydata2.IdWODetailseq = "";
                                                        mydata2.IdWOItemseq = "";
                                                        mydata2.IdWOLabSeq = "";
                                                        mydata2.Id_Deb_Seq = ""
                                                        mydata2.Item_Avail_Qty = "0";
                                                        mydata2.Jobi_Bo_Qty = "";
                                                        mydata2.Sp_Cost_Price = "0";
                                                        mydata2.DebtType = "OHC";
                                                        mydata2.SpareDiscount = 0;
                                                        //jQuery("#jobgrid").jqGrid('addRowData', (parseInt(rowId) + 1), mydata2);
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "IdJob", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "Text", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "Nei", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "Ford", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "Bestilt", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "Levert", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "Pris", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "Rab", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });
                                                        jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId) + 1), "Belop", "", {
                                                            'background-color': 'rgba(255, 255, 153, 1)',
                                                            'color': 'rgba(0, 0, 0, 1)',
                                                            'background-image': 'none'
                                                        });

                                                        arrAddJob.push({
                                                            IdJob: mydata2.IdJob,
                                                            Text: mydata2.Text,
                                                            Nei: mydata2.Nei,
                                                            Ford: mydata2.Ford,
                                                            Bestilt: mydata2.Bestilt,
                                                            Levert: mydata2.Levert,
                                                            Pris: mydata2.Pris,
                                                            Rab: mydata2.Rab,
                                                            Belop: mydata2.Belop,
                                                            JobId: mydata2.JobId,
                                                            Flag: mydata2.Flag,
                                                            ForeignJob: mydata2.ForeignJob,
                                                            ItemDesc: mydata2.ItemDesc,
                                                            IdWODetailseq: mydata2.IdWODetailseq,
                                                            IdWOItemseq: mydata2.IdWOItemseq,
                                                            IdWOLabSeq: mydata2.IdWOLabSeq,
                                                            Id_Deb_Seq: mydata2.Id_Deb_Seq,
                                                            Jobi_Bo_Qty: mydata2.Jobi_Bo_Qty,
                                                            Id_Make: mydata2.Id_Make,
                                                            Sp_Cost_Price: mydata2.Sp_Cost_Price,
                                                            Diff: mydata2.Diff,
                                                            Item_Avail_Qty: mydata2.Item_Avail_Qty,
                                                            Id_Warehouse: mydata2.Id_Warehouse,
                                                            IdMech: mydata2.IdMech,
                                                            MechanicName: mydata2.MechanicName,
                                                            DebtType: mydata2.DebtType,
                                                            SpareDiscount:mydata2.SpareDiscount
                                                        });

                                                    }

                                                });

                                                var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                for (var j = 0; j < arrAddJob.length; j++) {
                                                    arrayInsertAt(rowdisdata, parseInt(rowId), arrAddJob[j]);
                                                }

                                                var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                jQuery("#jobgrid").jqGrid('clearGridData');
                                                for (var i = 0; i < rowGrddata.length; i++) {
                                                    jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                                                }

                                                var rowData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                //$('#' + rowData[rowId].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                                                $('#' + rowData[rowId].id, $("#jobgrid")).addClass("ui-state-disabled");


                                                //New Line for Job2
                                                arrAddJob = new Array();
                                                var mydata3;
                                                $.ajax({
                                                    type: "POST",
                                                    contentType: "application/json; charset=utf-8",
                                                    url: "frmWOJobDetails.aspx/AddSpareLine",
                                                    data: "{'idWONO':'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "'}",
                                                    dataType: "json",
                                                    async: false,//Very important
                                                    success: function (data) {
                                                        mydata3 = data;
                                                        mydata3.JobId = jobNo.toString();
                                                        mydata3.Nei = "0";
                                                        mydata3.Ford = "100";
                                                        mydata3.ForeignJob = "";
                                                        mydata3.Flag = "0";
                                                        mydata3.Belop = "";
                                                        mydata3.ItemDesc = "";
                                                        mydata3.IdWODetailseq = "";
                                                        mydata3.IdWOItemseq = "";
                                                        mydata3.IdWOLabSeq = "";
                                                        mydata3.Item_Avail_Qty = "0";
                                                        mydata3.Jobi_Bo_Qty = "";
                                                        mydata3.Id_Deb_Seq = ""
                                                        mydata3.Sp_Cost_Price = "0";
                                                        mydata3.Levert = "";
                                                        mydata3.DebtType = "OHC";
                                                        mydata3.SpareDiscount = 0;
                                                        //jQuery("#jobgrid").jqGrid('addRowData', (parseInt(rowId) + 2), mydata3);
                                                        // jQuery("#jobgrid").jqGrid("nextCell", parseInt(rowId) + 2, 0, true);
                                                        // document.getElementById((parseInt(rowId) + 2) + '_IdJob').select();
                                                        arrAddJob.push({
                                                            IdJob: mydata3.IdJob,
                                                            Text: mydata3.Text,
                                                            Nei: mydata3.Nei,
                                                            Ford: mydata3.Ford,
                                                            Bestilt: mydata3.Bestilt,
                                                            Levert: mydata3.Levert,
                                                            Pris: mydata3.Pris,
                                                            Rab: mydata3.Rab,
                                                            Belop: mydata3.Belop,
                                                            JobId: mydata3.JobId,
                                                            Flag: mydata3.Flag,
                                                            ForeignJob: mydata3.ForeignJob,
                                                            ItemDesc: mydata3.ItemDesc,
                                                            IdWODetailseq: mydata3.IdWODetailseq,
                                                            IdWOItemseq: mydata3.IdWOItemseq,
                                                            IdWOLabSeq: mydata3.IdWOLabSeq,
                                                            Id_Deb_Seq: mydata3.Id_Deb_Seq,
                                                            Jobi_Bo_Qty: mydata3.Jobi_Bo_Qty,
                                                            Id_Make: mydata3.Id_Make,
                                                            Sp_Cost_Price: mydata3.Sp_Cost_Price,
                                                            Diff: mydata3.Diff,
                                                            Item_Avail_Qty: mydata3.Item_Avail_Qty,
                                                            Id_Warehouse: mydata3.Id_Warehouse,
                                                            IdMech: mydata3.IdMech,
                                                            MechanicName: mydata3.MechanicName,
                                                            DebtType: mydata3.DebtType,
                                                            SpareDiscount: mydata3.SpareDiscount

                                                        });
                                                    }
                                                });


                                                var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                for (var j = 0; j < arrAddJob.length; j++) {
                                                    arrayInsertAt(rowdisdata, parseInt(rowId) + 1, arrAddJob[j]);
                                                }

                                                var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                jQuery("#jobgrid").jqGrid('clearGridData');
                                                for (var i = 0; i < rowGrddata.length; i++) {
                                                    jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                                                }

                                                setGridLinesColour();

                                                $('#<%=hdnJobId.ClientID%>').val($('#<%=txtJobId.ClientID%>').val());
                                                //$('#<%=txtJobId.ClientID%>').val('');
                                                $('#jobgrid').jqGrid("setCell", parseInt(rowId) + 1, 'IdJob', "Job:" + $('#<%=hdnJobId.ClientID%>').val());
                                                $('#jobgrid').jqGrid("setCell", parseInt(rowId) + 1, 'JobId', $('#<%=hdnJobId.ClientID%>').val());
                                                $('#jobgrid').jqGrid("setCell", parseInt(rowId) + 2, 'JobId', $('#<%=hdnJobId.ClientID%>').val());

                                                $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 1), 'WC', $('#<%=ddlWorkCode.ClientID%>').val());
                                                $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 1), 'RC', $('#<%=ddlRepairCode.ClientID%>').val());

                                                if (mechId != "0") {
                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 1), 'IdMech', $('#<%=ddlMechanic.ClientID%>').val());
                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 2), 'IdMech', $('#<%=ddlMechanic.ClientID%>').val());
                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 1), 'MechanicName', $("#<%=ddlMechanic.ClientID%> option:selected").text() + "-" + $('#<%=ddlMechanic.ClientID%>').val());
                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 2), 'MechanicName', $("#<%=ddlMechanic.ClientID%> option:selected").text() + "-" + $('#<%=ddlMechanic.ClientID%>').val());

                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 1), 'Text', $("#<%=ddlMechanic.ClientID%> option:selected").text());
                                                } else {
                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 1), 'IdMech', "");
                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId) + 2), 'IdMech', "");
                                                }

                                                var isJobNumber = parseInt($('#<%=txtJobId.ClientID%>').val());
                                                if (isJobNumber >= 90 && isJobNumber <= 99) {
                                                    $('#jobgrid').jqGrid("setCell", parseInt(rowId) + 1, 'ForeignJob', "FJ");
                                                } else {
                                                    $('#jobgrid').jqGrid("setCell", parseInt(rowId) + 1, 'ForeignJob', "");
                                                }

                                                //jQuery("#jobgrid").jqGrid("nextCell", (parseInt(rowId) + 2), 0).focus();
                                                //document.getElementById((parseInt(rowId) + 2) + '_IdJob').select();


                                                jQuery("#jobgrid").jqGrid("nextCell", (parseInt(rowId) + 2), 0, true);
                                                document.getElementById(((parseInt(rowId) + 2)) + '_IdJob').select();

                                            }
                                        }).modal('show');
                                    }
                                },
                                "SearchSpare": {
                                    name: "SearchSpare",
                                    visible: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        if (cType == "SRCH" || cType == "SRCHSPARE" || cType == "ADDJOBSPSRCHOR" || cType == "ADDJOB" || cType == "ADD") {
                                            return true;
                                        }
                                        else {
                                            return false;
                                        }
                                    },
                                    callback: function (key, opt) {
                                        //debugger;
                                        $('#txtSPSearch').val("");
                                        //$("#txtSrchSuppler").val(null);
                                        jQuery("#dgdSelectedSPGrid").jqGrid('clearGridData');
                                        jQuery("#dgdSpareGrid").jqGrid('clearGridData');
                                        <%--$("#<%=chkFlgStockItem.ClientID%>").prop('checked', false);
                                            $("#<%=chkFlgNonStockItem.ClientID%>").prop('checked', false);
                                            $("#<%=chkSPStkQty.ClientID%>").prop('checked', false);--%>
                                        var rowId = opt.$trigger[0].id;
                                        var idMech = parseInt(rowId) + 1;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        var idWodetSeq = rowdata.IdWODetailseq;
                                        var idDebSeq = rowdata.Id_Deb_Seq;
                                        var jobNo = rowdata.JobId;
                                        $('#<%=hdnGridId.ClientID%>').val(rowId);
                                        $('#txtSPSearch').focus();
                                        var arrayID = new Array();

                                        //Load Location and default spr settings data
                                        loadDefaultLocation();

                                        $('#modSpare').modal({
                                            onDeny: function () {
                                            },
                                            onApprove: function () {
                                                //debugger;
                                                var rows = jQuery("#dgdSelectedSPGrid").getDataIDs();
                                                for (a = 0; a < rows.length; a++) {
                                                    var name = $(this).attr('id');
                                                    row = jQuery("#dgdSelectedSPGrid").getRowData(rows[a]);
                                                    var id = $('#' + name).closest('tr.jqgrow').attr(rows[a]);
                                                    var idItem = row.Id_Item;
                                                    var desc = row.Item_Sp_Desc;
                                                    var Id_Make = row.Id_Make;
                                                    var deliver_qty = 1;
                                                    var Price = row.Sp_Item_Price;
                                                    var amt = fnformatDecimalValue(Price, seperator).toFixed(2);
                                                    var itemAvailQty = fnreformatDecimal(row.Sp_StockQty, seperator);
                                                    var jobi_bo_qty;
                                                    var jobi_ord_qty;
                                                    if (fnformatDecimalValue(itemAvailQty, seperator) > 0) {
                                                        jobi_bo_qty = 0;
                                                        deliver_qty = 1;
                                                    }
                                                    else {
                                                        jobi_bo_qty = 1;
                                                        deliver_qty = 0;
                                                    }
                                                    jobi_ord_qty = fnformatDecimalValue(row.Jobi_Order_Qty, seperator);
                                                    var IdWh = row.Id_Wh_Item;
                                                    //alert(firstName);
                                                    arrayID.push({
                                                        id: rows[a],
                                                        IdJob: idItem,
                                                        Text: desc,
                                                        Nei: "0",
                                                        Ford: "100",
                                                        Bestilt: fnreformatDecimal(jobi_ord_qty, seperator),
                                                        Levert: deliver_qty,
                                                        Pris: Price,
                                                        Rab: "0",
                                                        Belop: fnreformatDecimal(amt, seperator),
                                                        JobId: jobNo,
                                                        Flag: "0",
                                                        ForeignJob: "",
                                                        ItemDesc: "",
                                                        IdWODetailseq: idWodetSeq,
                                                        IdWOItemseq: "",
                                                        IdWOLabSeq: "",
                                                        Id_Deb_Seq: idDebSeq,
                                                        Jobi_Bo_Qty: jobi_bo_qty,
                                                        Id_Make: "",
                                                        Sp_Cost_Price: "0",
                                                        Diff: "S",
                                                        Id_Make: Id_Make,
                                                        Item_Avail_Qty: itemAvailQty,
                                                        Id_Warehouse: IdWh,
                                                        DebtType: "OHC",
                                                        SpareDiscount:0
                                                    });
                                                }
                                                loadjobGrid(rowId, jobNo, arrayID);
                                            }
                                        }).modal('show');
                                    }
                                },
                                "AddOwnRisk": {
                                    name: "AddOwnRisk",
                                    visible: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {
                                            if (cType == "SRCH" || cType == "SRCHSPARE" || cType == "ADDJOBSPSRCHOR" || cType == "ADDJOB" || cType == "ADD") {
                                                return true;
                                            }
                                            else {
                                                return false;
                                            }
                                        }
                                        else {
                                            return false;
                                        }
                                    },
                                    callback: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);

                                        jQuery("#jobgrid").setCell(rowId, "Nei", "", 'not-editable-cell');
                                        jQuery("#jobgrid").setCell(rowId, "Ford", "", 'not-editable-cell');
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'IdJob', rowdata.IdJob);
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Text', "Own Risk");
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Nei', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Ford', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Bestilt', "");
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Levert', "");
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Pris', "0");
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Rab', "");
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Belop', "");
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'JobId', rowdata.JobId);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'Flag', "0");
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'ForeignJob', "");
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'ItemDesc', "");
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'IdWODetailseq', rowdata.IdWODetailseq);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'IdWOItemseq', rowdata.IdWOItemseq);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'IdWOLabSeq', rowdata.IdWOLabSeq);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'Id_Deb_Seq', rowdata.Id_Deb_Seq);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'Jobi_Bo_Qty', rowdata.Jobi_Bo_Qty);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'Id_Make', rowdata.Id_Make);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'Sp_Cost_Price', rowdata.Sp_Cost_Price);
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Diff', "OR");
                                        jQuery('#jobgrid').jqGrid("setCell", rowId, 'Item_Avail_Qty', rowdata.Item_Avail_Qty);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'Id_Warehouse', rowdata.Id_Warehouse);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'IdMech', rowdata.IdMech);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'MechanicName', rowdata.MechanicName);
                                        jQuery("#jobgrid").jqGrid('setCell', rowId, 'DebtType', "OHC");

                                        jQuery("#jobgrid").jqGrid("nextCell", (parseInt(rowId)), 6, true);
                                        document.getElementById(((parseInt(rowId))) + '_Pris').select();
                                    }
                                },
                                "EditJob": {
                                    name: "EditJob",
                                    visible: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        if (cType == "EDIT") {
                                            return true;
                                        }
                                        else {
                                            return false;
                                        }
                                    },
                                    callback: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var idMech = parseInt(rowId) + 1;
                                        $('#<%=hdnRowId.ClientID%>').val(idMech);
                                        $('#<%=ddlMechanic.ClientID%>')[0].selectedIndex = 0;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        $("#<%=txtJobId.ClientID%>").val(rowdata.JobId);
                                        $("#<%=txtJobId.ClientID%>").attr("disabled", "disabled");
                                        var jobNo = rowdata.JobId;
                                        var focusrowNo = 0;
                                        var mydata2;
                                        var idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
                                        var idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;

                                        $('#modWashCustomer').modal({
                                            onDeny: function () {
                                            },
                                            onApprove: function () {
                                                var mechId = $('#<%=ddlMechanic.ClientID%>').val();

                                                $.ajax({
                                                    type: "POST",
                                                    contentType: "application/json; charset=utf-8",
                                                    url: "frmWOJobDetails.aspx/AddSpareLine",
                                                    //data: "{}",
                                                    data: "{'idWONO':'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "'}",
                                                    dataType: "json",
                                                    async: false,//Very important
                                                    success: function (data) {

                                                        var rowData1 = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                        if (rowData1[rowId].Flag == "1" && (rowData1[rowId].DebtType == "OHC" || rowData1[rowId].DebtType == null || rowData1[rowId].DebtType == undefined)) {
                                                            $('#' + rowData1[rowId].id, $("#jobgrid")).addClass("ui-state-disabled");


                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "IdJob", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "Text", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "Nei", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "Ford", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "Bestilt", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "Levert", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "Pris", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "Rab", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                            jQuery("#jobgrid").jqGrid('setCell', (parseInt(rowId)), "Belop", "", {
                                                                'background-color': 'rgba(255, 255, 153, 1)',
                                                                'color': 'rgba(0, 0, 0, 1)',
                                                                'background-image': 'none'
                                                            });
                                                        }
                                                    }

                                                });

                                                $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'WC', $('#<%=ddlWorkCode.ClientID%>').val());
                                                $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'RC', $('#<%=ddlRepairCode.ClientID%>').val());
                                                $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'IdMech', $('#<%=ddlMechanic.ClientID%>').val());
                                                $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'MechanicName', $("#<%=ddlMechanic.ClientID%> option:selected").text() + "-" + $('#<%=ddlMechanic.ClientID%>').val());
                                                // if (mechId != "0" && (rowdata.Text == "")) {
                                                if (mechId != "0") {
                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Text', $("#<%=ddlMechanic.ClientID%> option:selected").text());
                                                }

                                                //else {
                                                //    $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'IdJob', "");
                                                //}

                                                if (mechId == "0" && (rowdata.Text == "")) {
                                                    $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'IdJob', "");
                                                }


                                                var rowchkdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                for (var k = 0; k < rowchkdata.length; k++) {
                                                    if (rowchkdata[k].JobId == jobNo && rowchkdata[k].Flag != "1") {
                                                        if (rowchkdata[k].Diff == "" || rowchkdata[k].Diff == undefined) {
                                                            focusrowNo = k;
                                                        }
                                                    }
                                                }

                                                jQuery("#jobgrid").jqGrid("nextCell", (parseInt(focusrowNo) + 1), 1).focus();
                                                document.getElementById((parseInt(focusrowNo) + 1) + '_Text').select();
                                            }
                                        }).modal('show');
                                    }
                                },
                                "DeleteLine": {
                                    name: "DeleteLine",
                                    visible: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        if (cType == "DEL" && (rowdata.DebtType == "OHC")) {
                                            return true;
                                        }
                                        else {
                                            return false;
                                        }
                                    },
                                    callback: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var isSpare = $(this)[0].cells['12'].title;
                                        var grid = $("#jobgrid");
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        var gridrecords = $('#jobgrid').jqGrid('getGridParam', 'data');
                                        var deleteCount = gridrecords.length;
                                        var noOfLines = 0;
                                        var jobNo = $(this)[0].cells['10'].title;
                                        var ownRiskAmt = 0;
                                        var jobtotal = 0;

                                        if (rowdata.Diff == "RAOR" || rowdata.Diff == "RBOR") {
                                            $('#<%=radInsNoReduction.ClientID%>').attr('checked', true);
                                            $('#<%=radInsReductioAfter.ClientID%>').attr('checked', false);
                                            $('#<%=radInsReductionBefore.ClientID%>').attr('checked', false);

                                        }

                                        //To find the number of jobs. If there are more than one job then we shd be able to delete job1 else no
                                        for (var a = 0; a < gridrecords.length; a++) {
                                            if (((gridrecords[a].IdJob == "" || gridrecords[a].IdJob == undefined) && (gridrecords[a].Text == "" || gridrecords[a].Text == undefined))) {
                                                noOfLines += 1;
                                            }

                                            if (gridrecords[a].Diff == "OR" && gridrecords[a].DebtType == "OHC") {
                                                ownRiskAmt = fnformatDecimalValue(gridrecords[a].Pris, seperator);
                                            }
                                        }

                                        if (fnformatDecimalValue(ownRiskAmt, seperator) > 0) {
                                            jobtotal = fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val(), seperator);
                                            jobtotal = (fnformatDecimalValue(jobtotal, seperator) - fnformatDecimalValue(ownRiskAmt, seperator));
                                        }

                                        if (deleteCount == 2 && noOfLines == 1) {
                                            alert("Cannot delete the line");
                                        } else if (((rowdata.IdJob == "" || rowdata.IdJob == undefined) && (rowdata.Text == "" || rowdata.Text == undefined))) {
                                            alert("Cannot delete the a blank line");
                                        } else if ((((rowdata.IdJob != "") && (rowdata.Pris == "") && (rowdata.Text == "")))) {
                                            alert("Cannot delete the a blank line");
                                        } else if (fnformatDecimalValue(jobtotal, seperator) < fnformatDecimalValue(ownRiskAmt, seperator)) {
                                            alert("Cannot delete the line as the own risk amt is greater than job total");
                                            //return false;
                                        }
                                        else {
                                            grid.delRowData(rowId);

                                            //if any reduction lines exists the belop amount shd be recalculated
                                            recalculateRedLines();

                                            var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                            jQuery("#jobgrid").jqGrid('clearGridData');
                                            for (var j = 0; j < rowspareData.length; j++) {
                                                sparedata = rowspareData;
                                                jQuery("#jobgrid").jqGrid('addRowData', j + 1, sparedata[j]);
                                            }
                                            jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                                            $("#jobgrid").jqGrid("hideCol", "subGrid");
                                            setGridLinesColour();
                                            updateJobAfterDelete(jobNo);
                                            setGridLinesColour();
                                            recalculateTotals();
                                        }
                                    }
                                },
                                "DeleteJob": {
                                    name: "DeleteJob",
                                    visible: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        if (cType == "DEL") {
                                            return true;
                                        }
                                        else {
                                            return false;
                                        }
                                    },
                                    callback: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        var jobId = $(this)[0].cells['10'].title;
                                        var idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
                                        var idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;
                                        var grid = $("#jobgrid");
                                        var jobIdXml;
                                        var gridrecords = $('#jobgrid').jqGrid('getGridParam', 'data');
                                        var deleteCount = gridrecords.length;
                                        var jobNo = 0;
                                        var debtTypeJobNo = 0;
                                        var debtType = rowdata.DebtType;
                                        var iddebSeq = rowdata.Id_Deb_Seq;
                                        $('#<%=hdnJobNum.ClientID%>').val(jobId);
                                        if (debtType == "INSC") {
                                            $('#<%=hdnIdDebtor.ClientID%>').val($('#<%=hdnInsCustId.ClientID%>').val());

                                        }

                                        //var msg = "Do you want to delete the job ?";//GetMultiMessage('0016', '', '');
                                        //var r = confirm(msg);
                                        //if (r == true)
                                        //{

                                        $('#modCustomerLock').modal({
                                            onDeny: function () {

                                            },
                                            onApprove: function () {
                                                //To find the number of jobs. If there are more than one job then we shd be able to delete job1 else no
                                                for (var a = 0; a < gridrecords.length; a++) {
                                                    if (((gridrecords[a].IdJob == "" || gridrecords[a].IdJob == undefined) && (gridrecords[a].Text == "" || gridrecords[a].Text == undefined))) {
                                                        jobNo += 1;
                                                    }
                                                }

                                                for (var b = 0; b < gridrecords.length; b++) {
                                                    if (((gridrecords[b].IdJob == "" || gridrecords[b].IdJob == undefined) && (gridrecords[b].Text == "" || gridrecords[b].Text == undefined) && (gridrecords[b].DebtType == debtType))) {
                                                        debtTypeJobNo += 1;
                                                    }
                                                }

                                                if (debtTypeJobNo == 1) {
                                                    // alert("Cannot delete the job");
                                                    $('#modContact').modal({
                                                        onApprove: function () {
                                                        }
                                                    }).modal('show');
                                                }

                                                //1st Job and only 1blank line
                                                if (deleteCount == 2) {
                                                    //  alert("Cannot delete the job");

                                                    $('#modContact').modal({
                                                        onApprove: function () {

                                                        }
                                                    }).modal('show');
                                                } else {

                                                    if (jobNo > 1 && debtTypeJobNo != 1) {
                                                        jobIdXml = "<JOB><ID_JOBS>" + jobId + "</ID_JOBS><ID_PR>" + idWOPrefix + "</ID_PR> <ID_WO>" + idWONO + "</ID_WO><DEBT_TYPE>" + debtType + "</DEBT_TYPE><ID_DEB_SEQ>" + iddebSeq + "</ID_DEB_SEQ></JOB>";
                                                        jobIdXml = "<ROOT>" + jobIdXml + "</ROOT>";

                                                        deleteJob(jobIdXml);
                                                        var rowspareDataTese = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                        for (var k = rowspareDataTese.length - 1; k >= 0; k--) {
                                                            if (rowspareDataTese[k].JobId == jobId && rowspareDataTese[k].DebtType == debtType) {
                                                                grid.delRowData(rowspareDataTese[k].id);
                                                            }
                                                        }

                                                        var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                        jQuery("#jobgrid").jqGrid('clearGridData');
                                                        for (var j = 0; j < rowspareData.length; j++) {
                                                            sparedata = rowspareData;
                                                            jQuery("#jobgrid").jqGrid('addRowData', j + 1, sparedata[j]);
                                                        }
                                                        jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                                                        $("#jobgrid").jqGrid("hideCol", "subGrid");
                                                        //loadWOJobGrid(idWONO, idWOPrefix);
                                                        saveJobDet(1);
                                                        setGridLinesColour();
                                                        recalculateTotals();
                                                    } else if (jobNo == 1) {
                                                        // alert("Cannot delete the job");
                                                        $('#modContact').modal({
                                                            onApprove: function () {
                                                            }
                                                        }).modal('show');
                                                    }

                                                }
                                            }
                                        }).modal('show');
                                    }
                                },
                                "OpenLine": {
                                    name: "OpenLine",
                                    visible: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        if (cType == "DEL" && (rowdata.DebtType == "OHC")) {
                                            return true;
                                        }
                                        else {
                                            return false;
                                        }
                                    },
                                    callback: function (key, opt) {
                                        var rowId = opt.$trigger[0].id;
                                        var jobId = $(this)[0].cells['10'].title;
                                        var idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
                                        var idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        jQuery("#dgdLabLine").jqGrid('clearGridData');
                                        if (rowdata.Diff == "L") {
                                            // Always single record will be selected and displayed
                                            for (var i = 0; i < 1; i++) {
                                                jQuery("#dgdLabLine").jqGrid('addRowData', i + 1, rowdata);
                                            }
                                            $('#dgdLabLine').jqGrid("setCell", '1', 'Diff', 'Verksted arbied');
                                            $('#<%=txtLabDesc.ClientID%>').val(rowdata.Text);
                                            $('#<%=txtLabFord.ClientID%>').val(rowdata.Ford);
                                            $('#<%=txtStdTime.ClientID%>').val(rowdata.Levert);
                                            $('#<%=txtLabSalesPr.ClientID%>').val(rowdata.Pris);
                                            $('#<%=txtLabDiscPer.ClientID%>').val(rowdata.Rab);
                                            $('#<%=txtLabTotalAmt.ClientID%>').val(rowdata.Belop);
                                            if (rowdata.IdJob != "" || rowdata.IdJob != undefined) {
                                                if (rowdata.IdMech != $('#<%=hdnDuser.ClientID%>').val()) {
                                                    $('#<%=ddlmechList.ClientID%>').val(rowdata.IdMech);
                                                    $('#<%=txtMId.ClientID%>').val(rowdata.IdMech);
                                                    $('#<%=LblMName.ClientID%>').text(rowdata.IdJob);
                                                } else {
                                                    $('#<%=ddlmechList.ClientID%>')[0].selectedIndex = 0;
                                                    $('#<%=txtMId.ClientID%>').val("");
                                                    $('#<%=LblMName.ClientID%>').text("");
                                                }
                                            }
                                            $('#modLabPopup').modal({
                                                onDeny: function () {
                                                },
                                                onApprove: function () {
                                                    var arrLab = new Array();
                                                    var labText = $('#<%=txtLabDesc.ClientID%>').val();
                                                    var idMec = $('#<%=txtMId.ClientID%>').val();
                                                    var mecName = $('#<%=LblMName.ClientID%>').text();
                                                    var ford = $('#<%=txtLabFord.ClientID%>').val();
                                                    var lev = $('#<%=txtStdTime.ClientID%>').val();
                                                    var pris = $('#<%=txtLabSalesPr.ClientID%>').val();
                                                    var rab = $('#<%=txtLabDiscPer.ClientID%>').val();
                                                    var belop = $('#<%=txtLabTotalAmt.ClientID%>').val();
                                                    var mid = $('#<%=txtMId.ClientID%>').val();
                                                    var mname = $('#<%=LblMName.ClientID%>').text();
                                                    if (mid == "") {
                                                        mid = $('#<%=hdnDuser.ClientID%>').val();
                                                        mname = "";
                                                    }
                                                    if (rab == "") { rab = "0"; }
                                                    var discAmt = $('#<%=txtDiscAmt.ClientID%>').val();
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'Text', labText);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'Levert', lev);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'Pris', pris);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'Rab', rab);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'Belop', belop);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'IdMech', mid);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'IdJob', mname);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'MechanicName', $("#<%=ddlmechList.ClientID%> option:selected").text());
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'IdWODetailseq', rowdata.IdWODetailseq);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'IdWOItemseq', rowdata.IdWOItemseq);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'IdWOLabSeq', rowdata.IdWOLabSeq);
                                                    $('#jobgrid').jqGrid("setCell", rowId, 'Id_Deb_Seq', rowdata.Id_Deb_Seq);
                                                    recalculateTotals();
                                                    saveJobDet(1);
                                                }

                                            }).modal('show');
                                        }
                                        else if (rowdata.Diff == "T") {
                                            $('#<%=txtOrdTextLine.ClientID%>').val(rowdata.Text);
                                            $("#<%=chkTextToLab.ClientID%>").prop('checked', false);
                                            $('#modEditTextLine').modal({
                                                onDeny: function () {
                                                },
                                                onApprove: function () {
                                                    //only valid text line
                                                    if (rowdata.IdJob == "" && rowdata.Text == "") {
                                                        $('#modContact').modal({
                                                            onApprove: function () {
                                                            }
                                                        }).modal('show');
                                                    } else {
                                                        var textline = "";
                                                        textline = $('#<%=txtOrdTextLine.ClientID%>').val();
                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Text', textline);
                                                        saveJobDet(1);
                                                    }

                                                    jQuery("#dgdLabLine").jqGrid('clearGridData');
                                                    $('#<%=txtLabDesc.ClientID%>').val(rowdata.Text);
                                                    $('#<%=txtLabFord.ClientID%>').val(rowdata.Ford);
                                                    $('#<%=txtStdTime.ClientID%>').val('1,00');
                                                    $('#<%=txtLabSalesPr.ClientID%>').val($('#<%=hdnHP.ClientID%>').val());
                                                    $('#<%=txtLabDiscPer.ClientID%>').val(rowdata.Rab);
                                                    var stdTime = fnformatDecimalValue($('#<%=txtStdTime.ClientID%>').val(), seperator);
                                                    var price = fnformatDecimalValue($('#<%=txtLabSalesPr.ClientID%>').val(), seperator);
                                                    var disc = fnformatDecimalValue($('#<%=txtLabDiscPer.ClientID%>').val(), seperator);
                                                    var discAmt = (stdTime * price) * (disc * 0.01);
                                                    totLabAmt = (stdTime * price) - ((stdTime * price) * (disc * 0.01));
                                                    totLabAmt = fnreformatDecimal(totLabAmt);
                                                    $('#<%=txtLabTotalAmt.ClientID%>').val(totLabAmt);
                                                    if (rowdata.IdJob != "" || rowdata.IdJob != undefined) {
                                                        $('#<%=ddlmechList.ClientID%>').val(rowdata.IdMech);
                                                        $('#<%=txtMId.ClientID%>').val(rowdata.IdMech);
                                                        $('#<%=LblMName.ClientID%>').text(rowdata.IdJob);

                                                    }

                                                    if ($('#<%=chkTextToLab.ClientID%>').is(':checked')) {
                                                        for (var i = 0; i < 1; i++) {
                                                            jQuery("#dgdLabLine").jqGrid('addRowData', i + 1, rowdata);
                                                        }
                                                        $('#dgdLabLine').jqGrid("setCell", '1', 'Diff', 'Verksted arbied');
                                                        $('#modLabPopup').modal({
                                                            onApprove: function () {
                                                                var arrLab = new Array();
                                                                var labText = $('#<%=txtLabDesc.ClientID%>').val();
                                                                var ford = $('#<%=txtLabFord.ClientID%>').val();
                                                                var lev = $('#<%=txtStdTime.ClientID%>').val();
                                                                var pris = $('#<%=txtLabSalesPr.ClientID%>').val();
                                                                var rab = $('#<%=txtLabDiscPer.ClientID%>').val();
                                                                var belop = $('#<%=txtLabTotalAmt.ClientID%>').val();
                                                                var mid = $('#<%=txtMId.ClientID%>').val();
                                                                var mname = $('#<%=LblMName.ClientID%>').text();
                                                                if (mid == "") {
                                                                    //To check if mechanic exists for this job when there is no mechanic selected on pop-up
                                                                    var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                                                                    for (var k = 0; k < rowspareData.length; k++) {
                                                                        if (rowspareData[k].JobId == jobId) {
                                                                            if (rowspareData[k].IdJob.indexOf(":") > -1) {
                                                                                if (rowspareData[k].MechanicName != "" && rowspareData[k].MechanicName != null && rowspareData[k].MechanicName != undefined) {
                                                                                    mname = rowspareData[k].MechanicName.split("-");
                                                                                    mname = mname[0] + "-" + mname[1];
                                                                                    if (mname.length > 2) {
                                                                                        mid = mname[2];
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }

                                                                    if (mid == "") {
                                                                        mid = $('#<%=hdnDuser.ClientID%>').val();
                                                                        mname = "";
                                                                    }
                                                                }

                                                                var discAmt = $('#<%=txtDiscAmt.ClientID%>').val();
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'Levert', lev);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'Pris', pris);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'Rab', rab);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'Belop', belop);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'IdMech', mid);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'IdJob', mname);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'MechanicName', $("#<%=ddlmechList.ClientID%> option:selected").text());
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'IdWODetailseq', rowdata.IdWODetailseq);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'IdWOItemseq', rowdata.IdWOItemseq);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'IdWOLabSeq', rowdata.IdWOLabSeq);
                                                                $('#jobgrid').jqGrid("setCell", rowId, 'Id_Deb_Seq', rowdata.Id_Deb_Seq);

                                                                var WoNo = $('#<%=hdnWoNo.ClientID%>').val();
                                                                var WoPr = $('#<%=hdnWoPr.ClientID%>').val();
                                                                DeleteTextLine(rowdata.IdWOItemseq, WoNo, WoPr);
                                                                arrLab.push({
                                                                    id: 1,
                                                                    IdJob: rowdata.IdJob,
                                                                    Text: labText,
                                                                    Nei: fnreformatDecimal(rowdata.Nei, seperator),
                                                                    Ford: fnreformatDecimal(rowdata.Ford, seperator),
                                                                    Bestilt: fnreformatDecimal(rowdata.Bestilt, seperator),
                                                                    Levert: fnreformatDecimal(lev, seperator),
                                                                    Pris: fnreformatDecimal(pris, seperator),
                                                                    Rab: fnreformatDecimal(rab, seperator),
                                                                    Belop: fnreformatDecimal(belop, seperator),
                                                                    JobId: rowdata.JobId,
                                                                    Flag: "0",
                                                                    ForeignJob: "",
                                                                    ItemDesc: "",
                                                                    IdWODetailseq: rowdata.IdWODetailseq,
                                                                    IdWOItemseq: rowdata.IdWOItemseq,
                                                                    IdWOLabSeq: rowdata.IdWOLabSeq,
                                                                    Id_Deb_Seq: rowdata.Id_Deb_Seq,
                                                                    Jobi_Bo_Qty: rowdata.Jobi_Bo_Qty,
                                                                    Id_Make: rowdata.Id_Make,
                                                                    Sp_Cost_Price: "0",
                                                                    Diff: "L",
                                                                    Item_Avail_Qty: rowdata.Item_Avail_Qty,
                                                                    Id_Warehouse: rowdata.Id_Warehouse,
                                                                    IdMech: mid,
                                                                    MechanicName: mname

                                                                });
                                                                var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                                                for (var j = 0; j < arrLab.length; j++) {
                                                                    arrayInsertAt(rowdisdata, parseInt(rowId) - 1, arrLab[j]);
                                                                }

                                                                var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                                                jQuery("#jobgrid").jqGrid('clearGridData');
                                                                for (var i = 0; i < rowGrddata.length; i++) {
                                                                    //rowGrddata[i].LineNo = rowGrddata[i].id;
                                                                    jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                                                                }

                                                                recalculateTotals();
                                                                saveJobDet(1);
                                                            }
                                                        }).modal('show');
                                                    }

                                                }
                                            }).modal('show');

                                        }//end of text line
                                        else if (rowdata.Diff == "S") {
                                            // Always single record will be selected and displayed
                                            jQuery("#dgdSpareLine").jqGrid('clearGridData');
                                            for (var i = 0; i < 1; i++) {
                                                rowdata.Diff = 'Varelinje';
                                                jQuery("#dgdSpareLine").jqGrid('addRowData', i + 1, rowdata);
                                            }
                                            var spareOrdQty = rowdata.Bestilt;//check ord qty or del qty
                                            var spareKostPris = rowdata.Sp_Cost_Price;
                                            var spareSellgPris = rowdata.Pris; //check
                                            var spareRab = rowdata.Rab;
                                            var spareBelop = rowdata.Belop;

                                            $('#<%=txtSpareId.ClientID%>').val(rowdata.IdJob);
                                            $('#<%=txtSpareDesc.ClientID%>').val(rowdata.Text);
                                            $('#<%=txtSpareFord.ClientID%>').val(rowdata.Ford);
                                            $('#<%=txtSpareOrdQty.ClientID%>').val(spareOrdQty);
                                            $('#<%=txtSpareCP.ClientID%>').val(spareKostPris);
                                            $('#<%=txtSpareSP.ClientID%>').val(spareSellgPris);
                                            $('#<%=txtSpareDisc.ClientID%>').val(spareRab);
                                            $('#<%=txtSpareAmount.ClientID%>').val(spareBelop);

                                            $('#modEditSpareLine').modal({
                                                onDeny: function () {
                                                },
                                                onApprove: function () {
                                                    //only valid text line
                                                    if (rowdata.IdJob == "" && rowdata.Text == "") {
                                                        $('#modContact').modal({
                                                            onApprove: function () {

                                                            }
                                                        }).modal('show');
                                                    } else {
                                                        // textline = $('#<%=txtOrdTextLine.ClientID%>').val();
                                                        // $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Text', textline);
                                                        // saveJobDet(1);

                                                        var rowspdata = jQuery("#dgdSpareLine").jqGrid('getRowData', 1);

                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Bestilt', rowspdata.Bestilt);
                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Levert', rowspdata.Levert);
                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Jobi_Bo_Qty', rowspdata.Jobi_Bo_Qty);
                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Sp_Cost_Price', rowspdata.Sp_Cost_Price);
                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Pris', rowspdata.Pris);
                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Rab', rowspdata.Rab);
                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Belop', rowspdata.Belop);
                                                        $('#jobgrid').jqGrid("setCell", (parseInt(rowId)), 'Disc_Amt', rowspdata.Disc_Amt);

                                                        recalculateTotals();
                                                        saveJobDet(1);
                                                    }
                                                }
                                            }).modal('show');
                                        }
                                    }
                                }
                            }
                        }//end of return
                    }//end of build
                });
            });


            function deleteJob(jobIdXml) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOHead.aspx/DeleteJob",
                    data: "{jobIdXmls: '" + jobIdXml + "'}",
                    dataType: "json",
                    success: function (data) {


                        if (data.d[0] == "DEL") {
                            if (data.d[2].toString() != "") {
                                alert(data.d[2].toString());
                                $('#<%=RTlblError.ClientID%>').text(data.d[1].toString());
                                $('#<%=RTlblError.ClientID%>').removeClass();
                                $('#<%=RTlblError.ClientID%>').addClass("lblMessage");

                            }
                            else {
                                $('#<%=RTlblError.ClientID%>').text(data.d[1].toString());
                                $('#<%=RTlblError.ClientID%>').removeClass();
                                $('#<%=RTlblError.ClientID%>').addClass("lblMessage");
                            }
                        }
                        else if (data.d[0] == "NDEL") {
                            $('#<%=RTlblError.ClientID%>').removeClass();
                            $('#<%=RTlblError.ClientID%>').addClass("lblErr");
                        }
                    },
                    error: function (result) {
                        alert("Error");
                    }
                });
            }
           

            function deleteJobDebitor(jobIdXml) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/DeleteJobDebitor",
                    data: "{jobIdXmls: '" + jobIdXml + "'}",
                    dataType: "json",
                    async: false,
                    success: function (data) {


                        if (data.d[0] == "DEL") {
                            if (data.d[2].toString() != "") {
                                alert(data.d[2].toString());
                                $('#<%=RTlblError.ClientID%>').text(data.d[1].toString());
                                $('#<%=RTlblError.ClientID%>').removeClass();
                                $('#<%=RTlblError.ClientID%>').addClass("lblMessage");

                            }
                            else {
                                $('#<%=RTlblError.ClientID%>').text(data.d[1].toString());
                                $('#<%=RTlblError.ClientID%>').removeClass();
                                $('#<%=RTlblError.ClientID%>').addClass("lblMessage");
                            }
                        }
                        else if (data.d[0] == "NDEL") {
                            $('#<%=RTlblError.ClientID%>').removeClass();
                            $('#<%=RTlblError.ClientID%>').addClass("lblErr");
                        }
                    },
                    error: function (result) {
                        alert("Error");
                    }
                });
            }

            function DeleteTextLine(idWoItemSeq, idWONO, idWOPrefix) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/DeleteTextline",
                    //data: "{'idWoItemSeq: '" + idWoItemSeq + "',idWONO: '" + idWONO + "',idWOPrefix: '" + idWOPrefix + "'}",
                    data: "{'idWoItemSeq':'" + idWoItemSeq + "',idWONO:'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "'}",
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        var d = data;
                        loadWOJobGrid(idWONO, idWOPrefix);
                    },
                    error: function (result) {
                        alert("Error");
                    }
                });
            }

            function isInArray(value, array) {
                return array.indexOf(value) > -1;
            }

            function fetchJobs() {
                var idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
                var idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;
                var nextJobId;

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/AddSpareLine",
                    data: "{'idWONO':'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "'}",
                    dataType: "json",
                    async: false,//Very important
                    success: function (data) {
                        nextJobId = data.d[0].JobId;
                    }
                });

                return nextJobId;
            }


            function Fetch_JobNo(idWONO, idWOPrefix) {
                var jobNo;
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/FetchJoBNo",
                    data: "{'idWONO':'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "',userId:'" + userId + "'}",
                    //data: {},
                    dataType: "json",
                    async: false,//Very important
                    success: function (Result) {
                        jobNo = Result.d;

                    }
                });
                return jobNo;
            }

            function setTab(cTab) {
                var tabID = "";
                var WoNo = $('#<%=hdnWoNo.ClientID%>')[0].value;
                var WoPr = $('#<%=hdnWoPr.ClientID%>')[0].value;
                var OrderNo = $('#<%=lblOrderNo.ClientID%>').text();
                tabID = $(cTab).data('tab') || cTab; // Checks if click or function call
                var tab;
                (tabID == "") ? tab = cTab : tab = tabID;
                if (tabID == "Head") {
                    if (WoNo != "") {
                        var Flag = getUrlParameter('Flag');
                        PopulateWODetails(WoNo, WoPr, Flag);
                    }
                }
                if (tabID == "OrderDetails") {

                    //var Hprice = LoadHourlyPrice("New");
                    //$('#<%=hdnHP.ClientID%>').val(Hprice);
                    if (OrderNo != "") {
                        UpdateOrder();
                        loadConfig($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value, userId, idMakeRP, idModelRP);
                        var Hprice = LoadHourlyPrice("New");
                        $('#<%=hdnHP.ClientID%>').val(Hprice);
                        //loadWOJobGrid($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value);
                        loadRepairCode();
                        loadWorkCode();
                        loadWOJobGrid($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value);
                        var rowChkdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                        if (rowChkdata[0].IdWODetailseq != "" || rowChkdata[0].IdWODetailseq != undefined) {
                            if ($('#<%=hdnDbtSeq.ClientID%>').val() == "" && $('#<%=hdnInsCustId.ClientID%>').val() != "") {
                                var totalGm;
                                var totalLab;
                                var totalAmt;
                                var totalVat;
                                var totGmDisc;
                                var totLabDisc;
                                var spVat;
                                var spAmt;
                                var arrInsId = new Array();
                                var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                var diff="";

                                //rgba(255, 255, 153, 1)Line
                                for (i = 0; i < rowdisdata.length; i++) {
                                    $('#jobgrid').jqGrid("setCell", i, 'Nei', "0");
                                    $('#jobgrid').jqGrid("setCell", i, 'Ford', "0");

                                }

                                //To save the insurance customer first
                                saveJobDet(1);

                                if ($("#<%=radInsReductioAfter.ClientID%>").is(':checked')) {
                                    var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                    var rowId;
                                    var arrORisk = new Array();
                                    var redExists = false;

                                    for (var i = 0; i < rowdisdata.length; i++) {
                                        if (rowdisdata[i].DebtType == "OHC" && rowdisdata[i].JobId == "1") {
                                            rowId = rowdisdata[i].id;
                                        }

                                        if (rowdisdata[i].DebtType == "OHC" && rowdisdata[i].JobId == "1" && rowdisdata[i].Diff == "RAOR") {
                                            redExists = true;
                                        }
                                    }

                                    if (redExists == false) {
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        arrORisk.push({
                                            id: 1,
                                            IdJob: rowdata.IdJob,
                                            Text: "Reduction After Own Risk",
                                            Nei: "0",
                                            Ford: "",
                                            Bestilt: "",
                                            Levert: "",
                                            Pris: "",
                                            Rab: "",
                                            Belop: "",
                                            JobId: rowdata.JobId,
                                            Flag: "0",
                                            ForeignJob: "",
                                            ItemDesc: "",
                                            IdWODetailseq: rowdata.IdWODetailseq,
                                            IdWOItemseq: rowdata.IdWOItemseq,
                                            IdWOLabSeq: rowdata.IdWOLabSeq,
                                            Id_Deb_Seq: rowdata.Id_Deb_Seq,
                                            Jobi_Bo_Qty: rowdata.Jobi_Bo_Qty,
                                            Id_Make: rowdata.Id_Make,
                                            Sp_Cost_Price: "0",
                                            Diff: "RAOR",
                                            Item_Avail_Qty: rowdata.Item_Avail_Qty,
                                            Id_Warehouse: rowdata.Id_Warehouse,
                                            IdMech: rowdata.IdMech,
                                            MechanicName: rowdata.MechanicName,
                                            DebtType: "OHC",
                                            SpareDiscount:0
                                        });

                                        var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                        for (var j = 0; j < arrORisk.length; j++) {
                                            arrayInsertAt(rowdisdata, parseInt(rowId) - 1, arrORisk[j]);
                                        }

                                        var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                        jQuery("#jobgrid").jqGrid('clearGridData');
                                        for (var i = 0; i < rowGrddata.length; i++) {
                                            //rowGrddata[i].LineNo = rowGrddata[i].id;
                                            jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                                        }
                                    }
                                    //saveJobDet(1);
                                }


                                if ($("#<%=radInsReductionBefore.ClientID%>").is(':checked')) {
                                    var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                                    var rowId;
                                    var arrORisk = new Array();
                                    var redExists = false;

                                    for (var i = 0; i < rowdisdata.length; i++) {
                                        if (rowdisdata[i].DebtType == "OHC" && rowdisdata[i].JobId == "1") {
                                            rowId = rowdisdata[i].id;
                                        }

                                        if (rowdisdata[i].DebtType == "OHC" && rowdisdata[i].JobId == "1" && rowdisdata[i].Diff == "RBOR") {
                                            redExists = true;
                                        }
                                    }

                                    if (redExists == false) {
                                        var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                                        arrORisk.push({
                                            id: 1,
                                            IdJob: rowdata.IdJob,
                                            Text: "Reduction Before Own Risk",
                                            Nei: "0",
                                            Ford: "",
                                            Bestilt: "",
                                            Levert: "",
                                            Pris: "",
                                            Rab: "",
                                            Belop: "",
                                            JobId: rowdata.JobId,
                                            Flag: "0",
                                            ForeignJob: "",
                                            ItemDesc: "",
                                            IdWODetailseq: rowdata.IdWODetailseq,
                                            IdWOItemseq: rowdata.IdWOItemseq,
                                            IdWOLabSeq: rowdata.IdWOLabSeq,
                                            Id_Deb_Seq: rowdata.Id_Deb_Seq,
                                            Jobi_Bo_Qty: rowdata.Jobi_Bo_Qty,
                                            Id_Make: rowdata.Id_Make,
                                            Sp_Cost_Price: "0",
                                            Diff: "RBOR",
                                            Item_Avail_Qty: rowdata.Item_Avail_Qty,
                                            Id_Warehouse: rowdata.Id_Warehouse,
                                            IdMech: rowdata.IdMech,
                                            MechanicName: rowdata.MechanicName,
                                            DebtType: "OHC",
                                            SpareDiscount: 0
                                        });

                                        var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                        for (var j = 0; j < arrORisk.length; j++) {
                                            arrayInsertAt(rowdisdata, parseInt(rowId) - 1, arrORisk[j]);
                                        }

                                        var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                        jQuery("#jobgrid").jqGrid('clearGridData');
                                        for (var i = 0; i < rowGrddata.length; i++) {
                                            jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                                        }
                                    }
                                    //saveJobDet(1);
                                }
                                recalculateTotals();
                                setGridLinesColour();
                            }
                        }

                        //Internal Customer                        
                        if ($('#<%=hdnIntDbtSeq.ClientID%>').val() == "" && $('#<%=hdnIntCustId.ClientID%>').val() != "") {                          
                            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                            
                            //rgba(255, 255, 153, 1)Line
                            for (i = 0; i < rowdisdata.length; i++) {
                                $('#jobgrid').jqGrid("setCell", i, 'Nei', "0");
                                $('#jobgrid').jqGrid("setCell", i, 'Ford', "0");
                            }
                            saveJobDet(1);
                            recalculateTotals();
                            setGridLinesColour();
                        }                        

                        //Claim Customer
                        if ($('#<%=hdnClaimDbtSeq.ClientID%>').val() == "" && $('#<%=hdnClaimCustId.ClientID%>').val() != "") {                           
                            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');                           

                            //rgba(255, 255, 153, 1)Line
                            for (i = 0; i < rowdisdata.length; i++) {
                                $('#jobgrid').jqGrid("setCell", i, 'Nei', "0");
                                $('#jobgrid').jqGrid("setCell", i, 'Ford', "0");
                            }
                            saveJobDet(1);
                            recalculateTotals();
                            setGridLinesColour();
                        }
                        
                        //Misc
                        if ($('#<%=hdnMiscDbtSeq.ClientID%>').val() == "" && $('#<%=hdnMiscCustId.ClientID%>').val() != "") {                          
                            saveJobDet(1);
                            recalculateTotals();
                            setGridLinesColour();
                        }
                    }
                    else {
                        SaveOrder();
                        loadConfig($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value, userId, idMakeRP, idModelRP);
                        var Hprice = LoadHourlyPrice("New");
                        $('#<%=hdnHP.ClientID%>').val(Hprice);
                        //loadWOJobGrid($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value);
                        loadRepairCode();
                        loadWorkCode();
                        loadWOJobGrid($('#<%=hdnWoNo.ClientID%>')[0].value, $('#<%=hdnWoPr.ClientID%>')[0].value);
                    }
                }
                else if (tabID == "Insurance") {
                    var redType = $('#<%=hdnReductionType.ClientID%>').val();
                    var ownPayVAT = $('#<%=hdnOwnPayVAT.ClientID%>').val();
                    <%--if ($('#<%=hdnIntCustId.ClientID%>').val() != "") {
                        if ($('#<%=hdnClaimCustId.ClientID%>').val() == "") {
                            $("#tabInsurance").removeClass("ui-menu-disabled");
                        }
                        else {
                            $("#tabInsurance").addClass("ui-menu-disabled");
                        }
                    }
                    else if ($('#<%=hdnClaimCustId.ClientID%>').val() != "") {
                        if ($('#<%=hdnIntCustId.ClientID%>').val() == "") {
                            $("#tabInsurance").removeClass("ui-menu-disabled");
                        }
                        else {
                            $("#tabInsurance").addClass("ui-menu-disabled");
                        }
                    }
                    else if ($('#<%=hdnIntCustId.ClientID%>').val() != "") {
                        if ($('#<%=hdnClaimCustId.ClientID%>').val() != "") {
                            $("#tabInsurance").addClass("ui-menu-disabled");
                        }
                    }
                    else if ($('#<%=hdnMiscCustId.ClientID%>').val() != "" ) {
                        $("#tabInsurance").removeClass("ui-menu-disabled");
                    }
                    else {
                        $("#tabInsurance").addClass("ui-menu-disabled");
                    }--%>

                    if ($('#<%=hdnIntCustId.ClientID%>').val() != "") {
                        $("#tabInsurance").addClass("ui-menu-disabled");
                    }
                    else if ($('#<%=hdnClaimCustId.ClientID%>').val() != "") {
                        $("#tabInsurance").addClass("ui-menu-disabled");
                    }
                    else {
                        $("#tabInsurance").removeClass("ui-menu-disabled");
                    }

                    if ($('#<%=txtInsCustID.ClientID%>').val() != "") {
                        if (redType == "RAOR") {
                            $('#<%=radInsReductioAfter.ClientID%>').attr('checked', true);
                            $('#<%=radInsReductioAfter.ClientID%>').prop("disabled", false);
                            $('#<%=radInsReductionBefore.ClientID%>').prop("disabled", true);
                        } else if (redType == "RBOR") {
                            $('#<%=radInsReductionBefore.ClientID%>').prop("disabled", false);
                            $('#<%=radInsReductionBefore.ClientID%>').attr('checked', true);
                            $('#<%=radInsReductioAfter.ClientID%>').prop("disabled", true);
                        } else {
                            $('#<%=radInsNoReduction.ClientID%>').attr('checked', true);
                            $('#<%=radInsReductioAfter.ClientID%>').prop("disabled", false);
                            $('#<%=radInsReductionBefore.ClientID%>').prop("disabled", false);
                        }
                        if (ownPayVAT.toString() == "true") {
                            $("#<%=chkInsMoveVat.ClientID%>").prop('checked', true);
                        } else {
                            $("#<%=chkInsMoveVat.ClientID%>").prop('checked', false);
                        }
                    }
                }
                else if (tabID == "InternalDepartment") {
                    if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {
                        if ($('#<%=hdnClaimCustId.ClientID%>').val() == "") {
                            $("#tabInternalDepartment").addClass("ui-menu-disabled");
                            if ($('#<%=hdnClaimCustId.ClientID%>').val() == "") {
                                $('#<%=txtClaimSplit.ClientID%>').val('0');

                            }
                        }
                        else {
                            $("#tabInternalDepartment").removeClass("ui-menu-disabled");
                        }
                    }
                    else if ($('#<%=hdnClaimCustId.ClientID%>').val() != "") {
                        if ($('#<%=hdnInsCustId.ClientID%>').val() == "") {
                            $("#tabInternalDepartment").removeClass("ui-menu-disabled");

                            if ($('#<%=hdnIntCustId.ClientID%>').val() == "") {
                                $('#<%=txtIntSplit.ClientID%>').val('0');
                            }
                        }
                        else {
                            $("#tabInternalDepartment").removeClass("ui-menu-disabled");
                        }
                    }
                    else if ($('#<%=hdnMiscCustId.ClientID%>').val() != "") {
                        $("#tabInternalDepartment").addClass("ui-menu-disabled");
                    }
                    else {
                        $("#tabInternalDepartment").removeClass("ui-menu-disabled");
                    }
                }
                else if (tabID == "Claim") {
                    if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {
                        if ($('#<%=hdnIntCustId.ClientID%>').val() == "") {
                            $("#tabClaim").addClass("ui-menu-disabled");
                        }
                        else {
                            $("#tabClaim").removeClass("ui-menu-disabled");
                        }
                    }
                    else if ($('#<%=hdnIntCustId.ClientID%>').val() != "") {
                        if ($('#<%=hdnInsCustId.ClientID%>').val() == "") {
                            $("#tabClaim").removeClass("ui-menu-disabled");
                            if ($('#<%=hdnClaimCustId.ClientID%>').val() == "") {
                                $('#<%=txtClaimSplit.ClientID%>').val('0');
                            }
                        }
                        else {
                            $("#tabClaim").removeClass("ui-menu-disabled");
                        }
                    }
                    else if ($('#<%=hdnMiscCustId.ClientID%>').val() != "") {
                        $("#tabClaim").addClass("ui-menu-disabled");
                    }
                    else {
                        $("#tabClaim").removeClass("ui-menu-disabled");
                    }
                }
                else if (tabID == "Miscellaneous") {
                    if ($('#<%=hdnIntCustId.ClientID%>').val() != "") {
                        $("#tabMiscellaneous").addClass("ui-menu-disabled");
                    }
                    else if ($('#<%=hdnClaimCustId.ClientID%>').val() != "") {
                        $("#tabMiscellaneous").addClass("ui-menu-disabled");
                    }
                    else {
                        $("#tabMiscellaneous").removeClass("ui-menu-disabled");
                    }
                }

                $('.tTab').addClass('hidden'); // Hides all tabs
                $('#tab' + tabID).removeClass('hidden'); // Shows target tab and sets active class
                $('.cTab').removeClass('tabActive'); // Removes the tabActive class for all 
                $("#btn" + tabID).addClass('tabActive'); // Sets tabActive to clicked or active tab
            }

            $('.cTab').on('click', function (e) {
                setTab($(this));
            });

            //Open Spare Line
            $("#dgdSpareLine").jqGrid({
                datatype: "local",
                height: 50,
                colNames: ['JobId', 'LineNo', 'LineType', 'Ford Nivå', 'Ford %', 'SpId','SpDesc','SpMake','SpOrdQty','SpDelQty','SpBOQty','SpItemAvailQty','SpCostPrice','SpSellngPrice','SpRab','SpTotAmt','IdWareHouse','Disc_Amt'],
                colModel: [
                    { name: 'JobId', index: 'JobId', width: 120 },
                    { name: 'LineNo', index: 'LineNo', width: 200 },
                    { name: 'Diff', index: 'Diff', width: 150 },
                    { name: 'Nei', index: 'Nei', width: 120 },
                    { name: 'Ford', index: 'Ford', width: 120 },
                    { name: 'IdJob', index: 'IdJob', width: 80,hidden:true },
                    { name: 'Text', index: 'Text', width: 80, hidden: true },
                    { name: 'Id_Make', index: 'Id_Make', width: 80, hidden: true },
                    { name: 'Bestilt', index: 'Bestilt', width: 80, hidden: false },
                    { name: 'Levert', index: 'Levert', width: 80, hidden: false },
                    { name: 'Jobi_Bo_Qty', index: 'Jobi_Bo_Qty', width: 80, hidden: false },
                    { name: 'Item_Avail_Qty', index: 'Item_Avail_Qty', width: 80, hidden: false },
                    { name: 'Sp_Cost_Price', index: 'Sp_Cost_Price', width: 80, hidden: false },
                    { name: 'Pris', index: 'Pris', width: 80, hidden: false },
                    { name: 'Rab', index: 'Rab', width: 80, hidden: false },
                    { name: 'Belop', index: 'Belop', width: 80, hidden: false },
                    { name: 'Id_Warehouse', index: 'Id_Warehouse', width: 80, hidden: true },
                    { name: 'Disc_Amt', index: 'Disc_Amt', width: 80, hidden: false },
                ],
                subGrid: false
            });

            $('#<%=txtSpareOrdQty.ClientID%>').change(function (e) {
                if ($('#<%=txtSpareOrdQty.ClientID%>').val() != "") {
                    var spOrdQty = fnreformatDecimal($('#<%=txtSpareOrdQty.ClientID%>').val(), seperator);
                    $('#<%=txtSpareOrdQty.ClientID%>').val(spOrdQty);
                    fnCalcSpareTotal();
                } else {
                    alert("Enter valid quantity");
                }

            });

            $('#<%=txtSpareSP.ClientID%>').change(function (e) {
                if ($('#<%=txtSpareSP.ClientID%>').val() != "") {
                    var sp = fnreformatDecimal($('#<%=txtSpareSP.ClientID%>').val(), seperator);
                    $('#<%=txtSpareSP.ClientID%>').val(sp);
                    fnCalcSpareTotal();
                } else {
                    alert("Enter valid selling price");
                }
            });

            $('#<%=txtSpareDisc.ClientID%>').change(function (e) {
                if ($('#<%=txtSpareDisc.ClientID%>').val() != "") {
                    var sp = fnreformatDecimal($('#<%=txtSpareDisc.ClientID%>').val(), seperator);
                    $('#<%=txtSpareDisc.ClientID%>').val(sp);
                    fnCalcSpareTotal();
                } else {
                    alert("Enter valid discount price");
                }
            });

            $('#<%=txtSpareCP.ClientID%>').change(function (e) {
                if ($('#<%=txtSpareCP.ClientID%>').val() != "") {
                    var cp = fnreformatDecimal($('#<%=txtSpareCP.ClientID%>').val(), seperator);
                    $('#<%=txtSpareCP.ClientID%>').val(cp);
                    fnCalcSpareTotal();
                } 
            });

            $("#dgdLabLine").jqGrid({
                datatype: "local",
                height: 50,
                colNames: ['JobId', 'LineNo', 'LineType', 'Ford NivÃ¥', 'Ford %'],
                colModel: [
                    { name: 'JobId', index: 'JobId', width: 60 },
                    { name: 'LineNo', index: 'LineNo', width: 90 },
                    { name: 'Diff', index: 'Diff', width: 150 },
                    { name: 'Nei', index: 'Nei', width: 80 },
                    { name: 'Ford', index: 'Ford', width: 80 }
                ],
                subGrid: false
            });

            $('#<%=txtStdTime.ClientID%>').change(function (e) {
                var stdTime = fnreformatDecimal($('#<%=txtStdTime.ClientID%>').val(), seperator);
                $('#<%=txtStdTime.ClientID%>').val(stdTime);
                fnCalcLabTotal();
            });

            $('#<%=txtLabSalesPr.ClientID%>').change(function (e) {
                var price = fnreformatDecimal($('#<%=txtLabSalesPr.ClientID%>').val(), seperator);
                $('#<%=txtLabSalesPr.ClientID%>').val(price);
                fnCalcLabTotal();
            });

            $('#<%=txtLabDiscPer.ClientID%>').change(function (e) {
                var discPer = fnreformatDecimal($('#<%=txtLabDiscPer.ClientID%>').val(), seperator);
                $('#<%=txtLabDiscPer.ClientID%>').val(discPer);
                fnCalcLabTotal();
            });

            $('#<%=ddlmechList.ClientID%>').change(function (e) {
                var mechName = new Array();
                var Mname;
                Mname = $("#<%=ddlmechList.ClientID%> option:selected").text();
                mechName = Mname.split("-");
                var userName = mechName[0] + "-" + mechName[1];
                var mechId = mechName[2];
                $('#<%=txtMId.ClientID%>').val(mechId);
                $('#<%=LblMName.ClientID%>').text(userName);
            });

            $(document).on('click', '#<%=chkInsMoveVat.ClientID%>', function () {
                $('#<%=chkInsMoveVat.ClientID%>').attr("checked", function () {
                    saveJobDet(1);
                    //setTab('OrderDetails');
                });
            });

            $('#<%=txtIntSplit.ClientID%>').change(function (e) {
                saveJobDet(1);
            });

            $('#<%=txtClaimSplit.ClientID%>').change(function (e) {
                saveJobDet(1);
            });

            $('#<%=txtMiscSplit.ClientID%>').change(function (e) {
                saveJobDet(1);
            });

            $(document).on('click', '#<%=chkMiscMoveOwnRisk.ClientID%>', function () {
                $('#<%=chkMiscMoveOwnRisk.ClientID%>').attr("checked", function () {
                    saveJobDet(1);
                });
            });

            $(document).on('click', '#<%=radInsReductioAfter.ClientID%>', function () {
                setTab('OrderDetails');
            });

            $(document).on('click', '#<%=radInsReductionBefore.ClientID%>', function () {
                setTab('OrderDetails');
            });

            $(document).on('click', '#<%=radInsNoReduction.ClientID%>', function () {
               // setTab('OrderDetails');
            });

            $('#<%=txtInsDiscount.ClientID%>').change(function (e) {
                saveJobDet(1);
            });

            $('#<%=txtIntDiscount.ClientID%>').change(function (e) {
                saveJobDet(1);
            });

            $('#<%=txtClaimDiscount.ClientID%>').change(function (e) {
                saveJobDet(1);
            });

            $('#<%=txtMiscDiscount.ClientID%>').change(function (e) {
                saveJobDet(1);
            });
           
            $('#<%=btnRINV.ClientID%>').on('click', function () {
                RINVRecs();
            });

        });//end of ready

        function IntCustMoreInfo() {
            if ($('#<%=txtIntCustID.ClientID%>').val().length > 0) {
                var custId = $('#<%=txtIntCustID.ClientID%>').val();
                window.open("../Master/frmCustomerDetail.aspx?cust=" + custId, "info6", "resizable=no,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
            }
            else {
                alert('No customer is selected. Please choose a customer first!');
            }
        }

        function InscCustMoreInfo() {
            if ($('#<%=txtInsCustID.ClientID%>').val().length > 0) {
                var custId = $('#<%=txtInsCustID.ClientID%>').val();
                window.open("../Master/frmCustomerDetail.aspx?cust=" + custId, "info6", "resizable=no,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
            }
            else {
                alert('No customer is selected. Please choose a customer first!');
            }
        }

        function ClaCustMoreInfo() {
            if ($('#<%=txtClaimCustID.ClientID%>').val().length > 0) {
                var custId = $('#<%=txtClaimCustID.ClientID%>').val();
                window.open("../Master/frmCustomerDetail.aspx?cust=" + custId, "info6", "resizable=no,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
            }
            else {
                alert('No customer is selected. Please choose a customer first!');
            }
        }

        function MiscCustMoreInfo() {
            if ($('#<%=txtMiscCustID.ClientID%>').val().length > 0) {
                var custId = $('#<%=txtMiscCustID.ClientID%>').val();
                window.open("../Master/frmCustomerDetail.aspx?cust=" + custId, "info6", "resizable=no,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
            }
            else {
                alert('No customer is selected. Please choose a customer first!');
            }
        }

        function fnCalcSpareTotal() {
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var totSpareAmt = 0.0;
            var chkdata = jQuery("#jobgrid").jqGrid('getRowData', id);
            var backOrdQty = 0;
            var spavailqty = 0;
            var orderQty = 0;
            var delvQty = 0;
            var qtyDeliver = 0;
            var Availa_Qty = 0.0;
            var qtyDeliv = 0.0
            spavailqty = fnformatDecimalValue(chkdata.Item_Avail_Qty, seperator);
            orderQty = fnformatDecimalValue(e.target.value, seperator);
            qtyDeliver = fnformatDecimalValue(chkdata.Levert, seperator) + fnformatDecimalValue(qtyDeliver, seperator);


            if (spavailqty == 0) {
                delvQty = 0;
                backOrdQty = orderQty;
            }
            else if (spavailqty >= orderQty) {
                delvQty = orderQty;
                backOrdQty = orderQty - delvQty;
            }
            else if (spavailqty < orderQty) {
                Availa_Qty = spavailqty + qtyDeliver;
                if ((fnformatDecimalValue(orderQty, seperator) - fnformatDecimalValue(Availa_Qty, seperator)) > 0) {
                    backOrdQty = orderQty - Availa_Qty;

                    if (backOrdQty > 0) {
                        backOrdQty = backOrdQty;
                        qtyDeliv = orderQty - Availa_Qty;
                        delvQty = qtyDeliv;
                    }
                    else {
                        backOrdQty = 0;
                        qtyDeliv = orderQty;
                        delvQty = qtyDeliv;
                    }
                }

                else {
                    backOrdQty = 0;
                    qtyDeliv = orderQty;
                    delvQty = qtyDeliv;
                }

            }

            orderQty = fnreformatDecimal(orderQty, seperator);
            delvQty = fnreformatDecimal(delvQty, seperator);
            backOrdQty = fnreformatDecimal(backOrdQty, seperator);

            var amt = (fnformatDecimalValue(delvQty, seperator) * fnformatDecimalValue($('#<%=txtSpareSP.ClientID%>').val(), seperator)).toFixed(2);
            var disc = 0.0;
            //rowspareData[k].Belop = fnreformatDecimal(amt, seperator);

            if ($('#<%=txtSpareDisc.ClientID%>').val() != undefined && $('#<%=txtSpareDisc.ClientID%>').val() != "0") {
                disc = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue($('#<%=txtSpareDisc.ClientID%>').val(), seperator) / 100)).toFixed(2)
                amt = (amt - disc).toFixed(2);
            }
            disc = fnreformatDecimal(disc, seperator);
            amt = fnreformatDecimal(amt, seperator);

            $('#<%=txtSpareAmount.ClientID%>').val(amt);

            jQuery('#dgdSpareLine').jqGrid("setCell", 1, 'Bestilt', orderQty);
            jQuery('#dgdSpareLine').jqGrid("setCell", 1, 'Levert', delvQty);
            jQuery('#dgdSpareLine').jqGrid("setCell", 1, 'Jobi_Bo_Qty', backOrdQty);
            jQuery('#dgdSpareLine').jqGrid("setCell", 1, 'Rab', $('#<%=txtSpareDisc.ClientID%>').val());
            jQuery('#dgdSpareLine').jqGrid("setCell", 1, 'Disc_Amt', disc);
            jQuery('#dgdSpareLine').jqGrid("setCell", 1, 'Pris', $('#<%=txtSpareSP.ClientID%>').val());
            jQuery('#dgdSpareLine').jqGrid("setCell", 1, 'Belop', amt);
            if ($('#<%=txtSpareCP.ClientID%>').val() != "") {
                jQuery('#dgdSpareLine').jqGrid("setCell", 1, 'Sp_Cost_Price', $('#<%=txtSpareCP.ClientID%>').val());
            }
            
        }

        //Head
        function validateVeh(VehicleId) {
            var strRetVal;
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOHead.aspx/ValidateVehicle",
                data: "{IdVehicle: '" + VehicleId + "'}",
                dataType: "json",
                async: false,
                success: function (data) {
                    strRetVal = data.d.toString()

                },
                error: function (result) {
                    alert("Error");
                }
            });
            return strRetVal;
        }


       
        function validateCust(CustomerId) {
            var strRetVal;
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOHead.aspx/ValidateCustomer",
                data: "{IdCustomer: '" + CustomerId + "'}",
                dataType: "json",
                async: false,
                success: function (data) {
                    strRetVal = data.d.toString()

                },
                error: function (result) {
                    alert("Error");
                }
            });
            return strRetVal;
        }


        function LoadAllModel() {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadAllModel",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    $('#<%=ddlModel.ClientID%>').empty();
                    $('#<%=ddlModel.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        $('#<%=ddlModel.ClientID%>').append($("<option></option>").val(value.Model_Desc).html(value.Id_Model));
                    });
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillPayDet(IdCustGrp) {

            var IdCustomer = $('#<%=txtSrchCust.ClientID%>').val();

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOHead.aspx/FillPaymentDet",
                data: "{IdCustGrp: '" + IdCustGrp + "'}",
                dataType: "json",
                success: function (data) {
                    if (data.d.length > 0) {
                        var cashPayType = data.d[0].Pay_Type.toString();
                        if (cashPayType == "Cash") {
                            var msg = GetMultiMessage('WOCASH_PAY', '', '');
                            alert(msg);
                            FillCustDet(IdCustomer);
                        }
                        if (data.d[0].ErrorMessage != "") {
                            alert(data.d[0].ErrorMessage);
                            FillCustDet(IdCustomer);
                        }
                        else {
                            if (data.d[0].Pay_Type == 0) {
                                $('#<%=ddlPayType.ClientID%>')[0].selectedIndex = 0;
                            }
                            else {
                                //$('#<%=ddlPayType.ClientID%>').val(data.d[0].Pay_Type);
                                $('#<%=ddlPayType.ClientID%> option:contains("' + data.d[0].Pay_Type + '")').attr('selected', 'selected');
                                $("#<%=ddlPayType.ClientID%>").attr('disabled', 'disabled');
                            }

                            if (data.d[0].Pay_Term == 0) {
                                $('#<%=ddlPayTerms.ClientID%>')[0].selectedIndex = 0;
                            }
                            else {
                                //$('#<%=ddlPayTerms.ClientID%>').val(data.d[0].Pay_Term);
                                $('#<%=ddlPayTerms.ClientID%> option:contains("' + data.d[0].Pay_Term + '")').attr('selected', 'selected');
                                $("#<%=ddlPayTerms.ClientID%>").attr('disabled', 'disabled');
                            }
                        }
                    }
                },
                error: function (result) {
                    alert("Error");
                }
            });
        }


        function FillVehDrpDwn(CustID) {
            <%-- $('#<%=ddlVeh.ClientID%>').show();--%>
            $('#<%=lst_veh.ClientID%>').show();
            $('#<%=txtSrchVeh.ClientID%>').hide();
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadVehDrpdwn",
                data: "{'IdCustomer':'" + CustID + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    Result = Result.d;
                    if (Result.length != 0) {
                        $('#<%=lst_veh.ClientID%>').empty();
                        if (Result[0].ErrorMessage != "" && $('#<%=txtRegNo.ClientID%>').val() != "") {
                            var con = confirm(Result[0].ErrorMessage);
                            if (con == true) {
                                $('#<%=lst_veh.ClientID%>').show();
                                $('#<%=txtSrchVeh.ClientID%>').hide();
                                $.each(Result, function (key, value) {
                                    $('#<%=lst_veh.ClientID%>').append($("<option></option>").val(value.Id_Veh_Seq_WO).html(value.Veh_Det));
                                });
                            }
                            else {
                                $('#<%=lst_veh.ClientID%>').hide();
                                $('#<%=txtSrchVeh.ClientID%>').show();
                            }
                        }
                        else {
                            $('#ctl00_cntMainPanel_lst_veh').show();
                            $.each(Result, function (key, value) {
                                $('#ctl00_cntMainPanel_lst_veh').append($("<option></option>").val(value.Id_Veh_Seq_WO).html(value.Veh_Det));
                            });
                        }
                    }
                    else {
                        $('#<%=lst_veh.ClientID%>').hide();
                        $('#<%=txtSrchVeh.ClientID%>').show();
                    }
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillType() {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadOrdTypes",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    $('#<%=ddlType.ClientID%>').empty();
                    $('#<%=ddlType.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");

                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        $('#<%=ddlType.ClientID%>').append($("<option></option>").val(value.Id_Settings).html(value.Description));
                        $('#<%=ddlType.ClientID%>')[0].selectedIndex = 3;
                    });
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillStatus() {
            //debugger;
            var ordType = $('#<%=ddlType.ClientID%>').val();
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/FillOrdStatus",
                data: "{'ordType':'" + ordType + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    //debugger;
                    $('#<%=ddlStatus.ClientID%>').empty();
                    $('#<%=ddlStatus.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        var ordType = $('#<%=ddlType.ClientID%>').val();
                        if (ordType == "ORD") {
                            if ((value.Id_Settings == "CSA") || (value.Id_Settings == "JST") || (value.Id_Settings == "RES")) {
                                $('#<%=ddlStatus.ClientID%>').append($("<option></option>").val(value.Id_Settings).html(value.Description));
                            }
                        }
                        if (ordType == "CRSL") {
                            if ((value.Id_Settings == "STR")) {
                                $('#<%=ddlStatus.ClientID%>').append($("<option></option>").val(value.Id_Settings).html(value.Description));
                            }
                        }
                    });

                    if (Result[0].Tmp_Id_Settings != "") {
                        $('#<%=ddlStatus.ClientID%>').val(Result[0].Tmp_Id_Settings);
                    }
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillOrderStatus(ordType) {

            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadOrdStatus",
                data: "{'OrderType':'" + ordType + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    $('#<%=ddlStatus.ClientID%>').empty();
                    $('#<%=ddlStatus.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        $('#<%=ddlStatus.ClientID%>').append($("<option></option>").val(value.Id_Settings).html(value.Description));
                    });
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillPayType() {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadPayTypes",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    $('#<%=ddlPayType.ClientID%>').empty();
                    $('#<%=ddlPayType.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        $('#<%=ddlPayType.ClientID%>').append($("<option></option>").val(value.Id_Settings).html(value.Description));
                        $("#<%=ddlPayType.ClientID%>").attr('disabled', 'disabled');
                    });

                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillPayTerms() {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadPayTerms",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    $('#<%=ddlPayTerms.ClientID%>').empty();
                    $('#<%=ddlPayTerms.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        $('#<%=ddlPayTerms.ClientID%>').append($("<option></option>").val(value.Id_Settings).html(value.Description));
                        $("#<%=ddlPayTerms.ClientID%>").attr('disabled', 'disabled');
                    });

                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillCustGroup() {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadCustGroup",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    Result = Result.d;
                    $('#<%=ddlCusGroup.ClientID%>').empty();
                    $('#<%=ddlCusGroup.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    $.each(Result, function (key, value) {
                        $('#<%=ddlCusGroup.ClientID%>').append($("<option></option>").val(value.Id_Cust_Group_Seq).html(value.Cust_Group));

                    });

                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillMake() {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadVehMake",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    Result = Result.d;
                    $('#<%=ddlMake.ClientID%>').empty();
                    $('#<%=ddlMake.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    $.each(Result, function (key, value) {
                        $('#<%=ddlMake.ClientID%>').append($("<option></option>").val(value.Id_Make).html(value.Veh_Make));
                    });
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillNewModel() {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadModel",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    Result = Result.d;
                    $('#<%=ddlModel.ClientID%>').empty();
                    $('#<%=ddlModel.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    $.each(Result, function (key, value) {
                        $('#<%=ddlModel.ClientID%>').append($("<option></option>").val(value.Id_Model).html(value.Model_Desc));
                    });
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }


        function FillModel(IdMake) {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadVehModel",
                data: "{'IdMake':'" + IdMake + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (Result) {
                    $('#<%=ddlModel.ClientID%>').empty();
                    $('#<%=ddlModel.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        $('#<%=ddlModel.ClientID%>').append($("<option></option>").val(value.Model_Desc).html(value.Id_Model));
                    });
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function LoadNonInvoiceOrderDet(custId) {
            var userId = '<%= Session("UserID")%>';
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "NonInvoiceOrder.aspx/LoadNonInvoiceOrderDet",
                data: "{'idCust':'" + custId + "',idUser:'" + userId + "'}",
                //data: {},
                dataType: "json",
                async: false,//Very important
                success: function (data) {
                    if (data.d.length != 0) {
                        window.open("NonInvoiceOrder.aspx", 'info6', "resizable=no,scrollbars=1,status=yes,width=500px,height=300px,menubar=0,toolbar=0");
                    }
                }
            });
        }

        function PopulateWODetails(WoNo, WoPr, Flag) {
            //debugger;
            if (Flag != "update") {
                $('#<%=RTlblError.ClientID%>').text("");
            }
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/FetchWODetails",
                data: "{'WoNo':'" + WoNo + "','WoPr':'" + WoPr + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (data) {
                    FillOrderStatus(data.d[0].WO_Type);
                    if (data.d[0].WO_Type == 0) {
                        $('#<%=ddlType.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlType.ClientID%>').val(data.d[0].WO_Type);
                    }

                    if (data.d[0].WO_Status == 0) {
                        $('#<%=ddlStatus.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlStatus.ClientID%>').val(data.d[0].WO_Status);
                    }
                    $("#<%=ddlStatus.ClientID%>").attr('disabled', 'disabled');

                    if (data.d[0].Veh_Make == 0) {
                        $('#<%=ddlMake.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlMake.ClientID%> option:contains("' + data.d[0].Veh_Make + '")').attr('selected', 'selected');
                        <%--  $('#<%=ddlMake.ClientID%>').val(data.d[0].Veh_Make);--%>
                    }

                    //FillModel(data.d[0].Veh_Make);

                    if (data.d[0].Id_Model == "") {
                        $('#<%=ddlModel.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        //$('#<%=ddlModel.ClientID%> option:contains("' + data.d[0].Id_Model + '")').attr('selected', 'selected');
                        $('#<%=ddlModel.ClientID%>').val(data.d[0].Id_Model);
                    }
                    $('#<%=txtSrchCust.ClientID%>').val(data.d[0].Id_Cust_Wo);
                    $('#<%=lblCustName.ClientID%>').text(data.d[0].Id_Cust_Wo);

                    $('#<%=txtName.ClientID%>').val(data.d[0].WO_Cust_Name);
                    $('#<%=txtAddress1.ClientID%>').val(data.d[0].WO_Cust_Add1);
                    $('#<%=txtAddress2.ClientID%>').val(data.d[0].Cust_Perm_Add2);
                    $('#<%=txtZipCode.ClientID%>').val(data.d[0].Id_Zipcode_WO);
                    $('#<%=txtState.ClientID%>').val(data.d[0].City);
                    $('#<%=txtCountry.ClientID%>').val(data.d[0].Country_WO);
                    $('#<%=txtHPhoneNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Off);
                    $('#<%=txtOPhoneNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Home);
                    $('#<%=txtMobNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Mobile);
                    $('#<%=txtDeliveryTime.ClientID%>').val(data.d[0].WO_Tm_Deliv);
                    $('#<%=txtFinishDate.ClientID%>').val(data.d[0].Dt_Finish);
                    $('#<%=txtDeliveryDate.ClientID%>').val(data.d[0].Dt_Delivery);

                    $('#<%=txtSrchVeh.ClientID%>').val(data.d[0].Id_Veh_Seq_WO);
                    $('#<%=hdnVehId.ClientID%>').val(data.d[0].Id_Veh_Seq_WO);
                    $('#<%=txtRegNo.ClientID%>').val(data.d[0].WO_Veh_Reg_NO);
                    $('#<%=txtInternalNo.ClientID%>').val(data.d[0].Veh_Int_No);
                    $('#<%=txtVIN.ClientID%>').val(data.d[0].WO_Veh_Vin);
                    $('#<%=txtMileage.ClientID%>').val(data.d[0].WO_Veh_Mileage);
                    $('#<%=txtHours.ClientID%>').val(data.d[0].WO_Veh_Hrs);
                    $('#<%=txtCostPrice.ClientID%>').val(data.d[0].VA_Cost_Price);
                    $('#<%=txtSellPrice.ClientID%>').val(data.d[0].VA_Sell_Price);
                    $('#<%=txtVANum.ClientID%>').val(data.d[0].Van_Num)
                    $('#<%=txtDeptAccntNum.ClientID%>').val(data.d[0].La_Dept_Account_No);
                    $('#<%=TxtAnnotation.ClientID%>').val(data.d[0].WO_Annot);

                    if (data.d[0].Id_Pay_Type_WO == 0) {
                        $('#<%=ddlPayType.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlPayType.ClientID%>').val(data.d[0].Id_Pay_Type_WO);
                        $("#<%=ddlPayType.ClientID%>").attr('disabled', 'disabled');
                    }

                    if (data.d[0].Id_Pay_Terms_WO == 0) {
                        $('#<%=ddlPayTerms.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlPayTerms.ClientID%>').val(data.d[0].Id_Pay_Terms_WO);
                        $("#<%=ddlPayTerms.ClientID%>").attr('disabled', 'disabled');
                    }
                    if (data.d[0].Id_Cust_Group_Seq == 0) {
                        $('#<%=ddlCusGroup.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        //$('#<%=ddlCusGroup.ClientID%>')[0].val("5");
                        //$('#<%=ddlCusGroup.ClientID%> option:contains("' + data.d[0].Id_Cust_Group_Seq + '")').attr('selected', 'selected');
                        $('#<%=ddlCusGroup.ClientID%>').val(data.d[0].Id_Cust_Group_Seq);
                    }
                    <%--if ((data.d[0].WO_Status == "INV") || (data.d[0].WO_Status == "RINV")) {
                        $('#<%=btnUpdate.ClientID%>').attr("disabled", "disabled");
                        $('#<%=btnAddJob.ClientID%>').attr("disabled", "disabled");
                    }--%>

                    <%-- $('#<%=lbl_h_ordno.ClientID%>').text(WoNo);
                    $('#<%=lbl_h_prefix.ClientID%>').text(WoPr);--%>
                    $('#<%=RTlbl_OrderNo.ClientID%>').text(WoPr + WoNo);
                    $('#<%=RTlblOrderDate.ClientID%>').text(data.d[0].Dt_Order);
                    FetchDefectNote(data.d[0].Id_Veh_Seq_WO);
                    loadMechanicGrid(WoNo, WoPr);
                    if ($('#<%=ddlStatus.ClientID%>').val() == "INV") {
                        $("#<%=btnInvoice.ClientID%>").attr('disabled', 'disabled');
                    } else {
                        $('#<%=btnInvoice.ClientID%>').removeAttr("disabled");
                    }

                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillCustDet(IdCustomer) {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadCustDet",
                data: "{IdCustomer: '" + IdCustomer + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (data) {
                    $('#<%=txtSrchCust.ClientID%>').val(data.d[0].Cust_ID);
                    $('#<%=txtName.ClientID%>').val(data.d[0].WO_Cust_Name);
                    $('#<%=txtAddress1.ClientID%>').val(data.d[0].WO_Cust_Add1);
                    $('#<%=txtAddress2.ClientID%>').val(data.d[0].Cust_Perm_Add2);
                    $('#<%=txtState.ClientID%>').val(data.d[0].PState);
                    $('#<%=txtZipCode.ClientID%>').val(data.d[0].PZipcode);
                    $('#<%=txtCountry.ClientID%>').val(data.d[0].PCountry);
                    $('#<%=txtHPhoneNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Off);
                    $('#<%=txtOPhoneNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Home);
                    $('#<%=txtMobNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Mobile);
                    if (data.d[0].Id_Pay_Type_WO == 0) {
                        $('#<%=ddlPayType.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlPayType.ClientID%>').val(data.d[0].Id_Pay_Type_WO);
                    }

                    if (data.d[0].Id_Pay_Terms_WO == 0) {
                        $('#<%=ddlPayTerms.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlPayTerms.ClientID%>').val(data.d[0].Id_Pay_Terms_WO);
                    }
                    if (data.d[0].Cust_Group == 0) {
                        $('#<%=ddlCusGroup.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlCusGroup.ClientID%> option:contains("' + data.d[0].Cust_Group + '")').attr('selected', 'selected');
                    }
                    $('#<%=hdnOHCGenDisc.ClientID%>').val(data.d[0].Cust_Disc_General);
                    $('#<%=hdnOHCLabDisc.ClientID%>').val(data.d[0].Cust_Disc_Labour);
                    $('#<%=hdnOHCSpareDisc.ClientID%>').val(data.d[0].Cust_Disc_Spares);
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function clearInsCust() {
            $('#<%=txtInsCustID.ClientID%>').val("");
            $('#<%=txtInsPostalAddress.ClientID%>').val("");
            $('#<%=txtInsVisitAddress.ClientID%>').val("");
            $('#<%=txtInsZip.ClientID%>').val("");
            $('#<%=txtZipCity.ClientID%>').val("");
            $('#<%=txtInsPhonePrivate.ClientID%>').val("");
            $('#<%=txtInsPhoneSwitch.ClientID%>').val("");
            $('#<%=txtInsPhoneMobile.ClientID%>').val("");


            $('#<%=txtInsSalesGroup.ClientID%>').val("");//check 
            $('#<%=txtInsPhoneFax.ClientID%>').val("");
            $('#<%=txtInsPaymentTerms.ClientID%>').val("");
            $('#<%=txtInsGM.ClientID%>').val("");
            $('#<%=txtInsEnvFee.ClientID%>').val("");
            $('#<%=txtInsInvFee.ClientID%>').val("");
            $('#<%=hdnInsCustId.ClientID%>').val("");
            $('#<%=txtInsCompanyName.ClientID%>').val("");
            $('#<%=radInsNoReduction.ClientID%>').attr('checked', true);
            $('#<%=radInsReductioAfter.ClientID%>').prop("disabled", false);
            $('#<%=radInsReductionBefore.ClientID%>').prop("disabled", false);
            
        }

        function clearIntCust() {
            $('#<%=txtIntCustID.ClientID%>').val("");
            $('#<%=txtIntPostalAddress.ClientID%>').val("");
            $('#<%=txtIntVisitAddress.ClientID%>').val("");
            $('#<%=txtIntZip.ClientID%>').val("");
            $('#<%=txtIntZipCity.ClientID%>').val("");
            $('#<%=txtIntPhonePrivate.ClientID%>').val("");
            $('#<%=txtIntPhoneSwitch.ClientID%>').val("");
            $('#<%=txtIntPhoneMobile.ClientID%>').val("");


            $('#<%=txtIntSalesGroup.ClientID%>').val("");//check 
            $('#<%=txtIntPhoneFax.ClientID%>').val("");
            $('#<%=txtIntPaymentTerms.ClientID%>').val("");
            $('#<%=txtIntGM.ClientID%>').val("");
            $('#<%=txtIntEnvFee.ClientID%>').val("");
            $('#<%=txtIntInvFee.ClientID%>').val("");
            $('#<%=hdnIntCustId.ClientID%>').val("");
            $('#<%=hdnIntDbtSeq.ClientID%>').val("");
            $('#<%=txtIntCompanyName.ClientID%>').val("");
            $('#<%=txtIntSplit.ClientID%>').val("");
        }

        function clearClaCust() {
            $('#<%=txtClaimCustID.ClientID%>').val("");
            $('#<%=txtClaimPostalAddress.ClientID%>').val("");
            $('#<%=txtClaimVisitAddress.ClientID%>').val("");
            $('#<%=txtClaimZip.ClientID%>').val("");
            $('#<%=txtClaimZipCity.ClientID%>').val("");
            $('#<%=txtClaimPhonePrivate.ClientID%>').val("");
            $('#<%=txtClaimPhoneSwitch.ClientID%>').val("");
            $('#<%=txtClaimPhoneMobile.ClientID%>').val("");


            $('#<%=txtClaimSalesGroup.ClientID%>').val("");//check 
            $('#<%=txtClaimPhoneFax.ClientID%>').val("");
            $('#<%=txtClaimPaymentTerms.ClientID%>').val("");
            $('#<%=txtClaimGM.ClientID%>').val("");
            $('#<%=txtClaimEnvFee.ClientID%>').val("");
            $('#<%=txtClaimInvFee.ClientID%>').val("");
            $('#<%=hdnClaimCustId.ClientID%>').val("");
            $('#<%=hdnClaimDbtSeq.ClientID%>').val("");
            $('#<%=txtClaimCompanyName.ClientID%>').val("");
            $('#<%=txtClaimSplit.ClientID%>').val("");
        }

        function clearMiscCust() {
            $('#<%=txtMiscCustID.ClientID%>').val("");
            $('#<%=txtMiscPostalAddress.ClientID%>').val("");
            $('#<%=txtMiscVisitAddress.ClientID%>').val("");
            $('#<%=txtMiscZip.ClientID%>').val("");
            $('#<%=txtMiscZipCity.ClientID%>').val("");
            $('#<%=txtMiscPhonePrivate.ClientID%>').val("");
            $('#<%=txtMiscPhoneSwitch.ClientID%>').val("");
            $('#<%=txtMiscPhoneMobile.ClientID%>').val("");
            $('#<%=txtMiscSalesGroup.ClientID%>').val("");//check 
            $('#<%=txtMiscPhoneFax.ClientID%>').val("");
            $('#<%=txtMiscPaymentTerms.ClientID%>').val("");
            $('#<%=txtMiscGM.ClientID%>').val("");
            $('#<%=txtMiscEnvFee.ClientID%>').val("");
            $('#<%=txtMiscInvFee.ClientID%>').val("");
            $('#<%=hdnMiscCustId.ClientID%>').val("");
            $('#<%=hdnMiscDbtSeq.ClientID%>').val("");
            $('#<%=txtMiscCompanyName.ClientID%>').val("");
            $('#<%=txtMiscSplit.ClientID%>').val("");
        }

        function FillInsCustDet(IdCustomer,mode) {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadCustDet",
                data: "{IdCustomer: '" + IdCustomer + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (data) {
                    //either billing addr or perm address
                    var address = data.d[0].WO_Cust_Add1 + " " + data.d[0].Cust_Perm_Add2;

                    $('#<%=txtInsCustID.ClientID%>').val(data.d[0].Cust_ID);
                    $('#<%=txtInsPostalAddress.ClientID%>').val(address);
                    $('#<%=txtInsVisitAddress.ClientID%>').val(address);
                    $('#<%=txtInsZip.ClientID%>').val(data.d[0].PZipcode);
                    $('#<%=txtZipCity.ClientID%>').val(data.d[0].PState);
                    $('#<%=txtInsPhonePrivate.ClientID%>').val(data.d[0].WO_Cust_Phone_Home);
                    $('#<%=txtInsPhoneSwitch.ClientID%>').val(data.d[0].WO_Cust_Phone_Off);
                    $('#<%=txtInsPhoneMobile.ClientID%>').val(data.d[0].WO_Cust_Phone_Mobile);

                    //contact person need to load dd and then select 
                    if (data.d[0].Cust_Contactperson != "") {
                        $('#<%=ddlInsContactPerson.ClientID%>').val('0');// need to change
                    }
                    $('#<%=txtInsSalesGroup.ClientID%>').val(data.d[0].Cust_Group);//check 
                    $('#<%=txtInsPhoneFax.ClientID%>').val(data.d[0].Cust_Fax); 
                    $('#<%=txtInsPaymentTerms.ClientID%>').val(data.d[0].Pay_Term);
                    $('#<%=txtInsGM.ClientID%>').val($('#<%=txtTGM.ClientID%>').val());
                    $('#<%=txtInsEnvFee.ClientID%>').val("");//Todo
                    $('#<%=txtInsInvFee.ClientID%>').val("");//Todo
                    $('#<%=hdnInsCustId.ClientID%>').val(data.d[0].Cust_ID);

                    if (data.d[0].Flg_Private_Comp == true) {
                        $('#<%=txtInsCompanyName.ClientID%>').val(data.d[0].Cust_Last_Name);
                    } else {
                        $('#<%=txtInsCompanyName.ClientID%>').val("");
                    }

                    if (mode == "add") {
                        $('#<%=hdnInsGenDisc.ClientID%>').val(data.d[0].Cust_Disc_General);
                        $('#<%=hdnInsLabDisc.ClientID%>').val(data.d[0].Cust_Disc_Labour);
                        $('#<%=hdnInsSpareDisc.ClientID%>').val(data.d[0].Cust_Disc_Spares);
                    }                    
                    
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }


        function FillIntCustDet(IdCustomer,mode) {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadCustDet",
                data: "{IdCustomer: '" + IdCustomer + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (data) {
                    //either billing addr or perm address
                    var address = data.d[0].WO_Cust_Add1 + " " + data.d[0].Cust_Perm_Add2;

                    $('#<%=txtIntCustID.ClientID%>').val(data.d[0].Cust_ID);
                    $('#<%=txtIntPostalAddress.ClientID%>').val(address);
                    $('#<%=txtIntVisitAddress.ClientID%>').val(address);
                    $('#<%=txtIntZip.ClientID%>').val(data.d[0].PZipcode);
                    $('#<%=txtIntZipCity.ClientID%>').val(data.d[0].PState);
                    $('#<%=txtIntPhonePrivate.ClientID%>').val(data.d[0].WO_Cust_Phone_Home);
                    $('#<%=txtIntPhoneSwitch.ClientID%>').val(data.d[0].WO_Cust_Phone_Off);
                    $('#<%=txtIntPhoneMobile.ClientID%>').val(data.d[0].WO_Cust_Phone_Mobile);

                    //contact person need to load dd and then select 
                    if (data.d[0].Cust_Contactperson != "") {
                        $('#<%=ddlIntContactPerson.ClientID%>').val('0');// need to change
                    }
                    $('#<%=txtIntSalesGroup.ClientID%>').val(data.d[0].Cust_Group);//check 
                    $('#<%=txtIntPhoneFax.ClientID%>').val(data.d[0].Cust_Fax);
                    $('#<%=txtIntPaymentTerms.ClientID%>').val(data.d[0].Pay_Term);
                    $('#<%=txtIntGM.ClientID%>').val($('#<%=txtTGM.ClientID%>').val());
                    $('#<%=txtIntEnvFee.ClientID%>').val("");//Todo
                    $('#<%=txtIntInvFee.ClientID%>').val("");//Todo
                    $('#<%=hdnIntCustId.ClientID%>').val(data.d[0].Cust_ID);

                    if (data.d[0].Flg_Private_Comp == true) {
                        $('#<%=txtIntCompanyName.ClientID%>').val(data.d[0].Cust_Last_Name);
                    } else {
                        $('#<%=txtIntCompanyName.ClientID%>').val("");
                    }

                    if (mode == "add") {
                        $('#<%=hdnIntGenDisc.ClientID%>').val(data.d[0].Cust_Disc_General);
                        $('#<%=hdnIntLabDisc.ClientID%>').val(data.d[0].Cust_Disc_Labour);
                        $('#<%=hdnIntSpareDisc.ClientID%>').val(data.d[0].Cust_Disc_Spares);
                    }                   
                    
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }


        function FillClaimCustDet(IdCustomer,mode) {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadCustDet",
                data: "{IdCustomer: '" + IdCustomer + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (data) {
                    //either billing addr or perm address
                    //debugger;
                    var address = data.d[0].WO_Cust_Add1 + " " + data.d[0].Cust_Perm_Add2;

                    $('#<%=txtClaimCustID.ClientID%>').val(data.d[0].Cust_ID);
                    $('#<%=txtClaimPostalAddress.ClientID%>').val(address);
                    $('#<%=txtClaimVisitAddress.ClientID%>').val(address);
                    $('#<%=txtClaimZip.ClientID%>').val(data.d[0].PZipcode);
                    $('#<%=txtClaimZipCity.ClientID%>').val(data.d[0].PState);
                    $('#<%=txtClaimPhonePrivate.ClientID%>').val(data.d[0].WO_Cust_Phone_Home);
                    $('#<%=txtClaimPhoneSwitch.ClientID%>').val(data.d[0].WO_Cust_Phone_Off);
                    $('#<%=txtClaimPhoneMobile.ClientID%>').val(data.d[0].WO_Cust_Phone_Mobile);

                    //contact person need to load dd and then select 
                    if (data.d[0].Cust_Contactperson != "") {
                        $('#<%=ddlClaimContactPerson.ClientID%>').val('0');// need to change
                    }
                    $('#<%=txtClaimSalesGroup.ClientID%>').val(data.d[0].Cust_Group);//check 
                    $('#<%=txtClaimPhoneFax.ClientID%>').val(data.d[0].Cust_Fax);
                    $('#<%=txtClaimPaymentTerms.ClientID%>').val(data.d[0].Pay_Term);
                    $('#<%=txtClaimGM.ClientID%>').val($('#<%=txtTGM.ClientID%>').val());
                    $('#<%=txtClaimEnvFee.ClientID%>').val("");//Todo
                    $('#<%=txtClaimInvFee.ClientID%>').val("");//Todo
                    $('#<%=hdnClaimCustId.ClientID%>').val(data.d[0].Cust_ID);

                    if (data.d[0].Flg_Private_Comp == true) {
                        $('#<%=txtClaimCompanyName.ClientID%>').val(data.d[0].Cust_Last_Name);
                    } else {
                        $('#<%=txtClaimCompanyName.ClientID%>').val("");
                    }

                    if (mode == "add") {
                        $('#<%=hdnClaGenDisc.ClientID%>').val(data.d[0].Cust_Disc_General);
                        $('#<%=hdnClaLabDisc.ClientID%>').val(data.d[0].Cust_Disc_Labour);
                        $('#<%=hdnClaSpareDisc.ClientID%>').val(data.d[0].Cust_Disc_Spares);
                    }                   
                    
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FillMiscCustDet(IdCustomer,mode) {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadCustDet",
                data: "{IdCustomer: '" + IdCustomer + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (data) {
                    //either billing addr or perm address
                    //debugger;
                    var address = data.d[0].WO_Cust_Add1 + " " + data.d[0].Cust_Perm_Add2;

                    $('#<%=txtMiscCustID.ClientID%>').val(data.d[0].Cust_ID);
                    $('#<%=txtMiscPostalAddress.ClientID%>').val(address);
                    $('#<%=txtMiscVisitAddress.ClientID%>').val(address);
                    $('#<%=txtMiscZip.ClientID%>').val(data.d[0].PZipcode);
                    $('#<%=txtMiscZipCity.ClientID%>').val(data.d[0].PState);
                    $('#<%=txtMiscPhonePrivate.ClientID%>').val(data.d[0].WO_Cust_Phone_Home);
                    $('#<%=txtMiscPhoneSwitch.ClientID%>').val(data.d[0].WO_Cust_Phone_Off);
                    $('#<%=txtMiscPhoneMobile.ClientID%>').val(data.d[0].WO_Cust_Phone_Mobile);

                    //contact person need to load dd and then select 
                    if (data.d[0].Cust_Contactperson != "") {
                        $('#<%=ddlMiscContactPerson.ClientID%>').val('0');// need to change
                    }
                    $('#<%=txtMiscSalesGroup.ClientID%>').val(data.d[0].Cust_Group);//check 
                    $('#<%=txtMiscPhoneFax.ClientID%>').val(data.d[0].Cust_Fax);
                    $('#<%=txtMiscPaymentTerms.ClientID%>').val(data.d[0].Pay_Term);
                    $('#<%=txtMiscGM.ClientID%>').val($('#<%=txtTGM.ClientID%>').val());
                    $('#<%=txtMiscEnvFee.ClientID%>').val("");//Todo
                    $('#<%=txtMiscInvFee.ClientID%>').val("");//Todo
                    $('#<%=hdnMiscCustId.ClientID%>').val(data.d[0].Cust_ID);

                    if (data.d[0].Flg_Private_Comp == true) {
                        $('#<%=txtMiscCompanyName.ClientID%>').val(data.d[0].Cust_Last_Name);
                    } else {
                        $('#<%=txtMiscCompanyName.ClientID%>').val("");
                    }
                    var rowjobData = $('#jobgrid').jqGrid('getGridParam', 'data');
                    var ownRiskExists = false;

                    for (var k = 0; k < rowjobData.length; k++) {
                        if (rowjobData[k].JobId == "1" && rowjobData[k].DebtType == "OHC" && rowjobData[k].Diff == "OR" && rowjobData[k].Bestilt == "" && rowjobData[k].Levert == "" && rowjobData[k].Pris != "") {
                            ownRiskExists = true;
                        }
                    }

                    if (ownRiskExists == true) {
                        $('#<%=chkMiscMoveOwnRisk.ClientID%>').prop("disabled", false);
                    }
                    else {
                        $('#<%=chkMiscMoveOwnRisk.ClientID%>').prop("disabled", true);
                    }

                    if (mode == "add") {
                        $('#<%=hdnMiscGenDisc.ClientID%>').val(data.d[0].Cust_Disc_General);
                        $('#<%=hdnMiscLabDisc.ClientID%>').val(data.d[0].Cust_Disc_Labour);
                        $('#<%=hdnMiscSpareDisc.ClientID%>').val(data.d[0].Cust_Disc_Spares);
                    }                    
                    
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }



        function FillVehDet(VehicleId) {
            $.ajax({
                type: "POST",
                url: "frmWOHead.aspx/LoadVehDet",
                data: "{VehicleId: '" + VehicleId + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (data) {
                    //debugger;
                    $('#<%=txtRegNo.ClientID%>').val(data.d[0].WO_Veh_Reg_NO);
                    $('#<%=txtInternalNo.ClientID%>').val(data.d[0].Veh_Int_No);
                    $('#<%=txtVIN.ClientID%>').val(data.d[0].WO_Veh_Vin);
                    $('#<%=txtMileage.ClientID%>').val(data.d[0].WO_Veh_Mileage);
                    $('#<%=txtHours.ClientID%>').val(data.d[0].WO_Veh_Hrs);
                    $('#<%=txtCostPrice.ClientID%>').val(data.d[0].VA_Cost_Price);
                    $('#<%=txtSellPrice.ClientID%>').val(data.d[0].VA_Sell_Price);
                    $('#<%=txtVANum.ClientID%>').val(data.d[0].Van_Num)
                    if (data.d[0].Id_Make == 0) {
                        $('#<%=ddlMake.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        $('#<%=ddlMake.ClientID%> option:contains("' + data.d[0].Id_Make + '")').attr('selected', 'selected');
                    }

                    //FillModel(data.d[0].Id_Make);

                    if (data.d[0].Id_Model == 0) {
                        $('#<%=ddlModel.ClientID%>')[0].selectedIndex = 0;
                    }
                    else {
                        //$('#<%=ddlModel.ClientID%> option:contains("' + data.d[0].Id_Model + '")').attr('selected', 'selected');
                        $('#<%=ddlModel.ClientID%>').val(data.d[0].Id_Model);
                    }
                    $(document.getElementById('<%=hdnVehGrpDesc.ClientID%>')).val(data.d[0].Veh_Grpdesc);

                    if ($('#<%=txtName.ClientID%>').val() == "") {
                        $('#<%=txtSrchCust.ClientID%>').val(data.d[0].Cust_ID);
                        $('#<%=txtName.ClientID%>').val(data.d[0].WO_Cust_Name);
                        $('#<%=txtAddress1.ClientID%>').val(data.d[0].WO_Cust_Add1);
                        $('#<%=txtAddress2.ClientID%>').val(data.d[0].Cust_Perm_Add2);
                        $('#<%=txtState.ClientID%>').val(data.d[0].PState);
                        $('#<%=txtZipCode.ClientID%>').val(data.d[0].PZipcode);
                        $('#<%=txtCountry.ClientID%>').val(data.d[0].PCountry);
                        $('#<%=txtHPhoneNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Off);
                        $('#<%=txtOPhoneNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Home);
                        $('#<%=txtMobNo.ClientID%>').val(data.d[0].WO_Cust_Phone_Mobile);
                        if (data.d[0].Id_Pay_Type_WO == 0) {
                            $('#<%=ddlPayType.ClientID%>')[0].selectedIndex = 0;
                        }
                        else {
                            $('#<%=ddlPayType.ClientID%>').val(data.d[0].Id_Pay_Type_WO);
                        }

                        if (data.d[0].Id_Pay_Terms_WO == 0) {
                            $('#<%=ddlPayTerms.ClientID%>')[0].selectedIndex = 0;
                        }
                        else {
                            $('#<%=ddlPayTerms.ClientID%>').val(data.d[0].Id_Pay_Terms_WO);
                        }
                        if (data.d[0].Id_Cust_Group_Seq == 0) {
                            $('#<%=ddlCusGroup.ClientID%>')[0].selectedIndex = 0;
                        }
                        else {
                            $('#<%=ddlCusGroup.ClientID%> option:contains("' + data.d[0].Id_Cust_Group_Seq + '")').attr('selected', 'selected');
                        }
                    }
                    FetchDefectNote(VehicleId);

                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }

        function FetchDefectNote(vehicleId) {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOHead.aspx/Fetch_DefectNote",
                data: "{'idVeh':'" + vehicleId + "'}",
                //data: {},
                dataType: "json",
                async: false,//Very important
                success: function (data) {
                    strValue = data.d.toString();
                    if (strValue == "True") {
                        $('#<%=lnkDefect.ClientID%>').show();
                    }
                    else {
                        $('#<%=lnkDefect.ClientID%>').hide();
                    }
                }

            });
        }

        function openDefect() {
            var vid = $('#<%=txtSrchVeh.ClientID%>').val();
            var vRegNo = $('#<%=txtRegNo.ClientID%>').val();
            var vVIN = $('#<%=txtVIN.ClientID%>').val();
            var vInternNo = $('#<%=txtInternalNo.ClientID%>').val();
            var url = "frmWODefectNotes.aspx?FLG=1&VID=" + vid + "&RegNo=" + vRegNo + "&InternalNo=" + vInternNo + "&VIN=" + vVIN;
            var win = window.open(url, 'info3', 'resizable=no,scrollbars=1,status=yes,width=600px,height=400px,menubar=0,toolbar=0');
            win.focus();
        }

        function SaveOrder() {
            var dtord = $('#<%=RTlblOrderDate.ClientID%>').val();
            var model = $("#<%=ddlModel.ClientID%> option:selected").text();
            var make = $("#<%=ddlMake.ClientID%> option:selected").text();
            var result = fnClientValidate();
            var bool = chkCreditLimit_Customer();
            if ((result == true) && (bool == true)) {
                $.ajax({
                    type: "POST",
                    url: "frmWOHead.aspx/SaveOrderDetails",
                    data: "{custID: '" + $('#<%=txtSrchCust.ClientID%>').val() + "',Id_Wo_No: '', ordDt:'" + $('#<%=RTlblOrderDate.ClientID%>')[0].innerHTML + "', woType:'" + $('#<%=ddlType.ClientID%>').val() + "', woStatus:'" + $('#<%=ddlStatus.ClientID%>').val() + "', Wo_Tm_Deliv:'" + $('#<%=txtDeliveryTime.ClientID%>').val() + "', delivDate:'" + $('#<%=txtDeliveryDate.ClientID%>').val() + "', finishDate:'" + $('#<%=txtFinishDate.ClientID%>').val() + "',payType:'" + $('#<%=ddlPayType.ClientID%>').val() + "',payTerms:'" + $('#<%=ddlPayTerms.ClientID%>').val() + "',custPermAddr1:'" + $('#<%=txtAddress1.ClientID%>').val() + "',custPermAddr2:'" + $('#<%=txtAddress2.ClientID%>').val() + "',zipCode:'" + $('#<%=txtZipCode.ClientID%>').val() + "',custOffPh:'" + $('#<%=txtOPhoneNo.ClientID%>').val() + "',custHmPh:'" + $('#<%=txtHPhoneNo.ClientID%>').val() + "',idVehSeq:'" + $('#<%=txtSrchVeh.ClientID%>').val() + "',vehRegNo:'" + $('#<%=txtRegNo.ClientID%>').val() + "',annotation:'" + $('#<%=TxtAnnotation.ClientID%>').val() + "',custName:'" + $('#<%=txtName.ClientID%>').val() + "',custMob:'" + $('#<%=txtMobNo.ClientID%>').val() + "',vehInterNo:'" + $('#<%=txtInternalNo.ClientID%>').val() + "',vehVin:'" + $('#<%=txtVIN.ClientID%>').val() + "',updVehFlag:'0" +
                       "',vehMileage: '" + $('#<%=txtMileage.ClientID%>').val() + "', vehHrs:'" + $('#<%=txtHours.ClientID%>').val() + "', country:'" + $('#<%=txtCountry.ClientID%>').val() + "', state:'" + $('#<%=txtState.ClientID%>').val() + "', vehMake:'" + make + "', vehModel:'" + $('#<%=ddlModel.ClientID%>').val() + "', custGrp:'" + $('#<%=ddlCusGroup.ClientID%>').val() + "', vehGrpDesc:'" + $(document.getElementById('<%=hdnVehGrpDesc.ClientID%>')).val() + "', deptAccntNum:'" + $('#<%=txtDeptAccntNum.ClientID%>').val() + "', VACostPrice:'" + $('#<%=txtCostPrice.ClientID%>').val() + "', VASellPrice:'" + $('#<%=txtSellPrice.ClientID%>').val() + "', VANum:'" + $('#<%=txtVANum.ClientID%>').val() + "', IntNote:'',DeptAccNum:'" + $('#<%=txtDeptAccntNum.ClientID%>').val() + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: false,
                    success: function (Result) {
                        Result = Result.d[0];
                        if (Result.SuccessMessage == "INSFLG") {
                            var OrdNo = Result.Id_WO_Prefix + Result.Id_WO_NO;
                            $('#<%=RTlblError.ClientID%>').text(GetMultiMessage('MSG126', '', ''));
                            $('#<%=RTlblError.ClientID%>').removeClass();
                            $('#<%=RTlblError.ClientID%>').addClass("lblMessage");
                            $('#<%=RTlbl_OrderNo.ClientID%>').text(OrdNo);
                            $('#<%=lblOrderNo.ClientID%>').text(OrdNo);
                            $('#<%=lblCustName.ClientID%>').text(Result.Id_Cust_Wo);
                            $('#<%=hdnWoNo.ClientID%>').val(Result.Id_WO_NO);
                            $('#<%=hdnWoPr.ClientID%>').val(Result.Id_WO_Prefix);
                            $('#<%=hdnVehId.ClientID%>').val(Result.Id_Veh_Seq_WO);
                        }
                        else {
                            $('#<%=RTlblError.ClientID%>').text(Result.ErrorMessage);
                            $('#<%=RTlblError.ClientID%>').removeClass();
                            $('#<%=RTlblError.ClientID%>').addClass("lblErr");
                        }
                    },
                    failure: function () {
                        alert("Failed!");
                    }
                });
            }
        }

        function chkCreditLimit_Customer() {
            var custId = $('#<%=txtSrchCust.ClientID%>').val();
            var strValue;
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOHead.aspx/CreditLimit_Customer",
                data: "{'idCust':'" + custId + "'}",
                //data: {},
                dataType: "json",
                async: false,//Very important
                success: function (data) {
                    strValue = data.d.toString();
                }

            });
            if (strValue != "True") {
                return confirm(strValue);
            }
            else {
                return true;
            }
        }

        function UpdateOrder() {
            var dtord = $('#<%=RTlblOrderDate.ClientID%>').val();
            var model = $("#<%=ddlModel.ClientID%> option:selected").text();
            var make = $("#<%=ddlMake.ClientID%> option:selected").text();
            var bool = chkCreditLimit_Customer();
            if ((bool == true)) {
                $.ajax({
                    type: "POST",
                    url: "frmWOHead.aspx/UpdateOrderDetails",
                    data: "{custID: '" + $('#<%=txtSrchCust.ClientID%>').val() + "',Id_Wo_No: '', ordDt:'" + $('#<%=RTlblOrderDate.ClientID%>')[0].innerHTML + "', woType:'" + $('#<%=ddlType.ClientID%>').val() + "', woStatus:'" + $('#<%=ddlStatus.ClientID%>').val() + "', Wo_Tm_Deliv:'" + $('#<%=txtDeliveryTime.ClientID%>').val() + "', delivDate:'" + $('#<%=txtDeliveryDate.ClientID%>').val() + "', finishDate:'" + $('#<%=txtFinishDate.ClientID%>').val() + "',payType:'" + $('#<%=ddlPayType.ClientID%>').val() + "',payTerms:'" + $('#<%=ddlPayTerms.ClientID%>').val() + "',custPermAddr1:'" + $('#<%=txtAddress1.ClientID%>').val() + "',custPermAddr2:'" + $('#<%=txtAddress2.ClientID%>').val() + "',zipCode:'" + $('#<%=txtZipCode.ClientID%>').val() + "',custOffPh:'" + $('#<%=txtOPhoneNo.ClientID%>').val() + "',custHmPh:'" + $('#<%=txtHPhoneNo.ClientID%>').val() + "',idVehSeq:'" + $('#<%=txtSrchVeh.ClientID%>').val() + "',vehRegNo:'" + $('#<%=txtRegNo.ClientID%>').val() + "',annotation:'" + $('#<%=TxtAnnotation.ClientID%>').val() + "',custName:'" + $('#<%=txtName.ClientID%>').val() + "',custMob:'" + $('#<%=txtMobNo.ClientID%>').val() + "',vehInterNo:'" + $('#<%=txtInternalNo.ClientID%>').val() + "',vehVin:'" + $('#<%=txtVIN.ClientID%>').val() + "',updVehFlag:'0" +
                        "',vehMileage: '" + $('#<%=txtMileage.ClientID%>').val() + "', vehHrs:'" + $('#<%=txtHours.ClientID%>').val() + "', country:'" + $('#<%=txtCountry.ClientID%>').val() + "', state:'" + $('#<%=txtState.ClientID%>').val() + "', vehMake:'" + make + "', vehModel:'" + $('#<%=ddlModel.ClientID%>').val() + "', custGrp:'" + $('#<%=ddlCusGroup.ClientID%>').val() + "', vehGrpDesc:'" + $(document.getElementById('<%=hdnVehGrpDesc.ClientID%>')).val() + "', deptAccntNum:'" + $('#<%=txtDeptAccntNum.ClientID%>').val() + "', VACostPrice:'" + $('#<%=txtCostPrice.ClientID%>').val() + "', VASellPrice:'" + $('#<%=txtSellPrice.ClientID%>').val() + "', VANum:'" + $('#<%=txtVANum.ClientID%>').val() + "', IntNote:'',DeptAccNum:'" + $('#<%=txtDeptAccntNum.ClientID%>').val() + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: false,
                    success: function (Result) {
                        Result = Result.d[0];
                        if (Result.SuccessMessage != "") {
                            var OrdNo = ($('#<%=hdnWoPr.ClientID%>')[0].value) + ($('#<%=hdnWoNo.ClientID%>')[0].value);
                            $('#<%=RTlblError.ClientID%>').text(Result.SuccessMessage);
                            $('#<%=RTlblError.ClientID%>').removeClass();
                            $('#<%=RTlblError.ClientID%>').addClass("lblMessage");
                            $('#<%=RTlbl_OrderNo.ClientID%>').text(OrdNo);
                        }
                        else {
                            $('#<%=RTlblError.ClientID%>').text(Result.ErrorMessage);
                            $('#<%=RTlblError.ClientID%>').removeClass();
                            $('#<%=RTlblError.ClientID%>').addClass("lblErr");
                        }
                    },
                    failure: function () {
                        alert("Failed!");
                    }
                });
            }
        }

        function fnClientValidate() {
            if ($('#<%=ddlType.ClientID%>')[0].selectedIndex == "0") {
                alert(GetMultiMessage('0007', GetMultiMessage('0324', '', ''), ''));
                $('#<%=ddlType.ClientID%>')[0].focus();
                return false;
            }
            if ($('#<%=ddlStatus.ClientID%>')[0].selectedIndex == "0") {
                alert(GetMultiMessage('0007', GetMultiMessage('0325', '', ''), ''));
                $('#<%=ddlStatus.ClientID%>')[0].focus();
                return false;
            }

            if (($('#<%=txtFinishDate.ClientID%>')[0].value != "") && ($('#<%=txtDeliveryDate.ClientID%>')[0].value != "")) {
                var DeliveryDate = fnValidateDate($('#<%=txtDeliveryDate.ClientID%>').val(), $('#<%=hdnDateFormat.ClientID%>').val());
                var finishDate = fnValidateDate($('#<%=txtFinishDate.ClientID%>').val(), $('#<%=hdnDateFormat.ClientID%>').val());

                if (finishDate < DeliveryDate) {
                    alert(GetMultiMessage('0328', '', ''))
                    return false;
                }
            }


            if ($('#<%=txtSrchVeh.ClientID%>').val() == "") {
                if (($('#<%=txtRegNo.ClientID%>').val() != "") || ($('#<%=txtInternalNo.ClientID%>').val() != "") || ($('#<%=txtVIN.ClientID%>').val() != "")) {
                    if ($('#<%=ddlMake.ClientID%>')[0].selectedIndex == "0") {
                        alert(GetMultiMessage('0606', '', ''));
                        $('#<%=ddlMake.ClientID%>')[0].focus();
                        return false;
                    }
                    if ($('#<%=ddlModel.ClientID%>')[0].selectedIndex == "0") {
                        alert(GetMultiMessage('0607', '', ''));
                        $('#<%=ddlModel.ClientID%>')[0].focus();
                        return false;
                    }
                }
            }
            else {
                if (($('#<%=txtRegNo.ClientID%>').val() != "") || ($('#<%=txtInternalNo.ClientID%>').val() != "") || ($('#<%=txtVIN.ClientID%>').val() != "")) {
                    if ($('#<%=ddlMake.ClientID%>')[0].selectedIndex == "0") {
                        alert(GetMultiMessage('0606', '', ''));
                        $('#<%=ddlMake.ClientID%>')[0].focus();
                        return false;
                    }
                    if ($('#<%=ddlMake.ClientID%>')[0].selectedIndex == "0") {
                        alert(GetMultiMessage('0607', '', ''));
                        $('#<%=ddlModel.ClientID%>')[0].focus();
                        return false;
                    }
                }
            }

            if (!(gfi_ValidateNumDot($('#<%=txtMileage.ClientID%>')))) {

                return false;
            }
            if (!(gfi_ValidateNumDot($('#<%=txtHours.ClientID%>')))) {

                $('#<%=txtHours.ClientID%>').val('');
                $('#<%=txtHours.ClientID%>').focus();
                return false;
            }
            if (!(gfi_ValidateNumber($('#<%=txtMileage.ClientID%>'), '0262')))
                return false;
            if (!(gfi_ValidateNumber($('#<%=txtHours.ClientID%>'), 'VEHHRS')))
                return false;

            if (!(gfi_CheckEmpty($('#<%=txtName.ClientID%>'), '0265'))) {
                return false;
            }
            if (!(gfi_CheckEmptySpace($('#<%=txtName.ClientID%>'), '0265'))) {
                return false;
            }

            if ($('#<%=ddlCusGroup.ClientID%>')[0].selectedIndex == "0") {
                alert(GetMultiMessage('0205', '', ''));
                $('#<%=ddlCusGroup.ClientID%>')[0].focus();
                return false;
            }


            var UzipCode = $('#<%=txtZipCode.ClientID%>').val();
            if (UzipCode != "") {

                if (!(gfb_ValidateAlphabets($('#<%=txtCountry.ClientID%>'), '0192'))) {
                    return false;
                }
                if (!(gfb_ValidateAlphabets($('#<%=txtState.ClientID%>'), '0193'))) {
                    return false;
                }
            }

            window.scrollTo(0, 0);
            return true;
        }

        function fnClientUpdValidate() {
            if ($('#<%=ddlType.ClientID%>')[0].selectedIndex == "0") {
                alert(GetMultiMessage('0007', GetMultiMessage('0324', '', ''), ''));
                $('#<%=ddlType.ClientID%>')[0].focus();
                return false;
            }
            if ($('#<%=ddlStatus.ClientID%>')[0].selectedIndex == "0") {
                alert(GetMultiMessage('0007', GetMultiMessage('0325', '', ''), ''));
                document.forms[0].CmbStatus.focus();
                return false;
            }

            if ($('#<%=txtDeliveryTime.ClientID%>').val() != "") {

                Validatetime($('#<%=txtDeliveryTime.ClientID%>'));

            }

            if (($('#<%=txtFinishDate.ClientID%>')[0].value != "") && ($('#<%=txtDeliveryDate.ClientID%>')[0].value != "")) {
                var DeliveryDate = fnValidateDate($('#<%=txtDeliveryDate.ClientID%>').val(), $('#<%=hdnDateFormat.ClientID%>').val());
                var finishDate = fnValidateDate($('#<%=txtFinishDate.ClientID%>').val(), $('#<%=hdnDateFormat.ClientID%>').val());

                if (finishDate < DeliveryDate) {
                    alert(GetMultiMessage('0328', '', ''))
                    return false;
                }
            }

            if ($('#<%=txtSrchVeh.ClientID%>').val() == "") {
                if (($('#<%=txtRegNo.ClientID%>').val() != "") || ($('#<%=txtInternalNo.ClientID%>').val() != "") || ($('#<%=txtVIN.ClientID%>').val() != "")) {
                    if ($('#<%=ddlMake.ClientID%>')[0].selectedIndex == "0") {
                        alert(GetMultiMessage('0606', '', ''));
                        $('#<%=ddlMake.ClientID%>')[0].focus();
                        return false;
                    }
                    if ($('#<%=ddlModel.ClientID%>')[0].selectedIndex == "0") {
                        alert(GetMultiMessage('0607', '', ''));
                        $('#<%=ddlModel.ClientID%>')[0].focus();
                        return false;
                    }
                }
            }
            else {
                if (($('#<%=txtRegNo.ClientID%>').val() != "") || ($('#<%=txtInternalNo.ClientID%>').val() != "") || ($('#<%=txtVIN.ClientID%>').val() != "")) {
                    if ($('#<%=ddlMake.ClientID%>')[0].selectedIndex == "0") {
                        alert(GetMultiMessage('0606', '', ''));
                        $('#<%=ddlMake.ClientID%>')[0].focus();
                        return false;
                    }
                    if ($('#<%=ddlMake.ClientID%>')[0].selectedIndex == "0") {
                        alert(GetMultiMessage('0607', '', ''));
                        $('#<%=ddlModel.ClientID%>')[0].focus();
                        return false;
                    }
                }
            }

            if (!(gfi_CheckEmpty($('#<%=txtName.ClientID%>'), '0265'))) {
                return false;
            }

            if ($('#<%=ddlCusGroup.ClientID%>')[0].selectedIndex == "0") {
                alert(GetMultiMessage('0205', '', ''));
                $('#<%=ddlCusGroup.ClientID%>')[0].focus();
                return false;
            }

            if (!(gfi_ValidateNumDot($('#<%=txtMileage.ClientID%>')))) {

                return false;
            }

            if (!(gfi_ValidateNumDot($('#<%=txtHours.ClientID%>')))) {

                $('#<%=txtHours.ClientID%>').val('');
                $('#<%=txtHours.ClientID%>').focus();
                return false;
            }

            if (!(gfi_ValidateNumber($('#<%=txtMileage.ClientID%>'), '0262')))
                return false;
            if (!(gfi_ValidateNumber($('#<%=txtHours.ClientID%>'), 'VEHHRS')))
                return false;

            var UzipCode = $('#<%=txtZipCode.ClientID%>').val();
            if (UzipCode != "") {

                if (!(gfb_ValidateAlphabets($('#<%=txtCountry.ClientID%>'), '0192'))) {
                    return false;
                }
                if (!(gfb_ValidateAlphabets($('#<%=txtState.ClientID%>'), '0193'))) {
                    return false;
                }
            }

            if (UzipCode != "") {
                if (document.forms[0].hdnNewZip.value == 0) {
                    if (document.forms[0].txtCountry.value.length == 0 && document.forms[0].txtState.value.length == 0) {
                        if (confirm(GetMultiMessage('ZIPCONFIRM', '', '')) == 1) {
                            $('#<%=hdnConfigZipSave.ClientID%>').val("1");
                        }
                        else {
                            $('#<%=hdnConfigZipSave.ClientID%>').val("0");
                        }
                    }
                }
            }

            window.scrollTo(0, 0);
        }

        //OrderDetails
        function LoadGMHPVat(idItem, idMake,idCustomer) {
            var idCust, idVehSeq;
            idCust = idCustomer;//$('#<%=lblCustName.ClientID%>').text();
            idVehSeq = $('#<%=hdnVehId.ClientID%>').val();
            var GMVat = "";
            var HPVat = "";
            var SPVat = "";

            var GMHPVat = [];

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/LoadGMHPVat",
                data: "{'idCust':'" + idCust + "',idVehSeq:'" + idVehSeq + "',idItem:'" + idItem + "',idMake:'" + idMake + "'}",
                //data: {},
                dataType: "json",
                async: false,//Very important
                success: function (Result) {
                    if (Result.d.length > 0) {
                        GMVat = Result.d[0].GM_Vat;
                        HPVat = Result.d[0].HP_Vat;
                        SPVat = Result.d[0].SP_Vat;
                        GMHPVat[0] = GMVat;
                        GMHPVat[1] = HPVat;
                        GMHPVat[2] = SPVat;
                    }
                }
            });
            //return [GMVat, HPVat];
            return GMHPVat;
        }

        function fetchDelJobDet(idWoNo, idWoPr)
        {
            var idCust = "";
            var custType = "";
            var idJobId = "";
            var delJob = [];

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/FetchDelJobDet",
                data: "{'idWoNo':'" + idWoNo + "',idWoPr:'" + idWoPr + "'}",
                //data: {},
                dataType: "json",
                async: false,//Very important
                success: function (Result) {
                    var arrcheck = new Array();
                    if (Result.d.length > 0)
                    {
                        for (var k = 0; k < Result.d.length; k++) {
                            idCust = Result.d[k].Id_Customer;
                            custType = Result.d[k].DebtType;
                            idJobId = Result.d[k].Id_Job;

                            arrcheck.push({ id: k, idJobId: idJobId, Debitor: idCust })
                        }
                        delJob = arrcheck;

                    }
                }
            });
            return delJob;
        }

        function FetchCustomerDisc(idCust) {
            var GenDisc = "";
            var LabDisc = "";
            var SPDisc = "";

            var Disc = [];

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/FetchCustomerDisc",
                data: "{'idCust':'" + idCust + "'}",
                //data: {},
                dataType: "json",
                async: false,//Very important
                success: function (Result) {
                    if (Result.d.length > 0) {
                        GenDisc = Result.d[0].CUST_DISC_GENERAL;
                        LabDisc = Result.d[0].CUST_DISC_LABOUR;
                        SPDisc = Result.d[0].CUST_DISC_SPARES;
                        Disc[0] = GenDisc;
                        Disc[1] = LabDisc;
                        Disc[2] = SPDisc;
                    }
                }
            });
            //return [GMVat, HPVat];
            return Disc;
        }

        function GetVatDis(idItem, idJobDeb, idVeh, idMake, idWh) {
            var JOBI_DIS_SEQ;
            var JOBI_VAT_PER;
            var JOBI_VAT_SEQ;
            var result;
            var Vat = [];
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/Get_vat_Dis",
                data: "{'idItem':'" + idItem + "',idJobDeb:'" + idJobDeb + "',idVeh:'" + idVeh + "',idMake:'" + idMake + "',idWh:'" + idWh + "'}",
                dataType: "json",
                async: false,//Very important
                success: function (Result) {
                    if (Result.d.length > 0) {
                        result = Result.d.split(';');
                        JOBI_DIS_SEQ = result[1];
                        JOBI_VAT_PER = result[2];
                        JOBI_VAT_SEQ = result[3];
                        Vat[0] = JOBI_DIS_SEQ;
                        Vat[1] = JOBI_VAT_PER;
                        Vat[2] = JOBI_VAT_SEQ;
                    }

                }
            });
            return Vat;
        }

        function recalculateTotals() {
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var hpVat = 0.0;
            var gmVat = 0.0;
            var amtS = 0.0;
            var vatAmount = 0.0;
            var amtL = 0.0;
            var discAmount = 0.0;
            var TotalGM = 0.0;
            var amtG = 0.0;
            var labDisc = 0.0;
            var gmDisc = 0.0;
            var spareDisc = 0.0;
            var labVatDisc = 0.0;
            var gmVatDisc = 0.0;
            var spareVatDisc = 0.0;
            var totLabVatDisc = 0.0;
            var totGmVatDisc = 0.0;
            var totSpareVatDisc = 0.0;

            $('#<%=txtTLab.ClientID%>').val(fnformatDecimalValue('0.0', seperator));
            $('#<%=txtTGM.ClientID%>').val(fnformatDecimalValue('0.0', seperator));
            $('#<%=txtHPVat.ClientID%>').val(fnformatDecimalValue('0.0', seperator));
            $('#<%=txtGMVat.ClientID%>').val(fnformatDecimalValue('0.0', seperator));
            $('#<%=txtSPVat.ClientID%>').val(fnformatDecimalValue('0.0', seperator));
            $('#<%=txtTSP.ClientID%>').val(fnformatDecimalValue('0.0', seperator));

            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');

            for (var k = 0; k < rowdisdata.length; k++) {
                var idItem = rowdisdata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                var idMake = rowdisdata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                var idCust = $('#<%=lblCustName.ClientID%>').text();
                //var idItem = $('#<%=hdnIdItem.ClientID%>').val();
                //var idMake = $('#<%=hdnIdMake.ClientID%>').val();
                var vats = LoadGMHPVat(idItem, idMake, idCust);
                gmVat = 0.0;
                hpVat = 0.0;
                spVat = 0.0;

                if (vats.length > 0) {
                    gmVat = fnformatDecimalValue(vats[0], seperator);
                    hpVat = fnformatDecimalValue(vats[1], seperator);
                    spVat = fnformatDecimalValue(vats[2], seperator);
                }

                var hpVatPer = hpVat;
                var gmVatPer = gmVat;
                var spVatPer = spVat;

                if (rowdisdata[k].Diff == "L") {
                    var amount = 0.0;
                    //amount = fnformatDecimalValue(rowdisdata[k].Belop, seperator);
                    amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                    amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);

                    var GM = fnformatDecimalValue($('#<%=txtGM.ClientID%>').val(), seperator);
                    if (rowdisdata[k].ForeignJob != "FJ") {
                        amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                        TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                        //$('#<%=txtTGM.ClientID%>').val(TotalGM);
                    }

                    //Lab and GM Discount
                    if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                        labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                        gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                        labVatDisc = (amount * (hpVatPer / 100)).toFixed(2);
                        totLabVatDisc = (fnformatDecimalValue(totLabVatDisc, seperator) + (fnformatDecimalValue(labVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);

                        gmVatDisc = (amtG * (gmVatPer / 100)).toFixed(2);
                        totGmVatDisc = (fnformatDecimalValue(totGmVatDisc, seperator) + (fnformatDecimalValue(gmVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);
                    }

                    hpVat = (amtL * (hpVatPer / 100)).toFixed(2);
                    gmVat = (TotalGM * (gmVatPer / 100)).toFixed(2);
                    hpVat = fnreformatDecimal(hpVat, seperator);
                    gmVat = fnreformatDecimal(gmVat, seperator);
                    amtL = fnreformatDecimal(amtL, seperator);
                    TotalGM = fnreformatDecimal(TotalGM, seperator);
                    $('#<%=txtTGM.ClientID%>').val(TotalGM);
                    $('#<%=txtHPVat.ClientID%>').val(hpVat);
                    $('#<%=txtGMVat.ClientID%>').val(gmVat);
                    $('#<%=txtTLab.ClientID%>').val(amtL);

                    var discChk = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                    rowdisdata[k].Disc_Amt = fnreformatDecimal(discChk, seperator);
                    var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(discChk, seperator)).toFixed(2);
                    rowdisdata[k].Belop = fnreformatDecimal(perLineDisc, seperator);
                }

                if (rowdisdata[k].Diff == "S") {
                    var amount = 0.0;
                    //amount = fnformatDecimalValue(rowdisdata[k].Belop, seperator)
                    amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                    amtS = (fnformatDecimalValue(amtS, seperator) + amount).toFixed(2);
                    vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01) * (fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVat))).toFixed(2);
                    amtS = fnreformatDecimal(amtS, seperator);
                    vatAmount = fnreformatDecimal(vatAmount, seperator);
                    $('#<%=txtSPVat.ClientID%>').val(vatAmount);
                    $('#<%=txtTSP.ClientID%>').val(amtS);


                    if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                        var amt;
                        var boQty;
                        if (rowdisdata[k].Jobi_Bo_Qty != undefined) {
                            boQty = fnformatDecimalValue(rowdisdata[k].Jobi_Bo_Qty, seperator);
                        } else {
                            boQty = 0;
                        }

                        if (boQty != "0") {
                            //discAmount = 0;
                            spareDisc = (fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(0, seperator)).toFixed(2);
                        } else {
                            amt = fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                            //discAmount = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2);
                            spareDisc = (fnformatDecimalValue(spareDisc, seperator) + (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100))).toFixed(2);
                        }
                    }
                    spareVatDisc = (amount * (spVatPer / 100)).toFixed(2);
                    totSpareVatDisc = (fnformatDecimalValue(totSpareVatDisc, seperator) + (fnformatDecimalValue(spareVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);

                    //Spare Discount

                    var spchck = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                    rowdisdata[k].Disc_Amt = fnreformatDecimal(spchck, seperator);

                    var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(spchck, seperator)).toFixed(2);
                    rowdisdata[k].Belop = fnreformatDecimal(perLineDisc, seperator);

                }

                if (rowdisdata[k].Disc_Amt != undefined) {
                    discAmount = (fnformatDecimalValue(discAmount, seperator) + fnformatDecimalValue(rowdisdata[k].Disc_Amt, seperator)).toFixed(2);
                }        

                discAmount = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(totLabVatDisc, seperator) + fnformatDecimalValue(totGmVatDisc, seperator) + fnformatDecimalValue(totSpareVatDisc, seperator)).toFixed(2);

            }

            var total = (fnformatDecimalValue($('#<%=txtTGM.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtTLab.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val(), seperator)).toFixed(2);
            var vatTotal = (fnformatDecimalValue($('#<%=txtHPVat.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtGMVat.ClientID%>').val(), seperator) + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val(), seperator)).toFixed(2);
            var TIncVat = ((fnformatDecimalValue(total, seperator) + fnformatDecimalValue(vatTotal, seperator) - fnformatDecimalValue(discAmount, seperator))).toFixed(2);
            total = fnreformatDecimal(total, seperator);
            vatTotal = fnreformatDecimal(vatTotal, seperator);
            TIncVat = fnreformatDecimal(TIncVat, seperator);

            discAmount = fnreformatDecimal(discAmount, seperator);

            $('#<%=txtNet.ClientID%>').val(total);
            $('#<%=txtVat.ClientID%>').val(vatTotal);
            $('#<%=txtTotal.ClientID%>').val(TIncVat);
            $('#<%=txtDisc.ClientID%>').val(discAmount);
        }

       

        function loadWOJobGrid(idWONO, idWOPrefix) {
            var spdata;
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var insuranceCust = "";
            var internalCust = "";
            var claimCust = "";
            var miscCust = "";
            var ohcCust = "";
            $("#<%=chkMiscMoveOwnRisk.ClientID%>").prop('checked', false);
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/Load_WorkOrderDetails",
                data: "{'idWONO':'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "'}",
                dataType: "json",
                async: false,//Very important
                success: function (data) {
                    jQuery("#jobgrid").jqGrid('clearGridData');
                    for (i = 0; i < data.d.length; i++) {
                        spdata = data;
                        jQuery("#jobgrid").jqGrid('addRowData', i + 1, spdata.d[i]);

                        if (spdata.d[i].DebtType == "INSC") {
                            insuranceCust = spdata.d[i].Id_Job_Deb;
                            $('#<%=hdnInsCustId.ClientID%>').val(insuranceCust);
                            $('#<%=hdnDbtSeq.ClientID%>').val(spdata.d[i].Id_Deb_Seq);

                            if (spdata.d[i].Diff == "L" || spdata.d[i].Diff == "S") {
                                var insDisc = (fnformatDecimalValue(spdata.d[i].DebitorDiscount, seperator)).toFixed(0);
                                insDisc = fnreformatDecimal(insDisc, seperator);
                                $('#<%=txtInsDiscount.ClientID%>').val(insDisc);

                                $('#<%=hdnInsGenDisc.ClientID%>').val(data.d[i].CustGenDiscount);
                                $('#<%=hdnInsLabDisc.ClientID%>').val(data.d[i].CustLabDiscount);
                                $('#<%=hdnInsSpareDisc.ClientID%>').val(data.d[i].CustSpareDiscount);
                            }                            
                        }

                        if (spdata.d[i].DebtType == "INTC") {
                            var intSplit = (fnformatDecimalValue(spdata.d[i].SplitPercent, seperator)).toFixed(0);
                            intSplit = fnreformatDecimal(intSplit, seperator);
                            internalCust = spdata.d[i].Id_Job_Deb;
                            $('#<%=hdnIntCustId.ClientID%>').val(internalCust);
                            $('#<%=hdnIntDbtSeq.ClientID%>').val(spdata.d[i].Id_Deb_Seq);
                            $('#<%=txtIntSplit.ClientID%>').val(intSplit);

                            if (spdata.d[i].Diff == "L" || spdata.d[i].Diff == "S") {
                                var intDisc = (fnformatDecimalValue(spdata.d[i].DebitorDiscount, seperator)).toFixed(0);
                                intDisc = fnreformatDecimal(intDisc, seperator);
                                $('#<%=txtIntDiscount.ClientID%>').val(intDisc);
                                $('#<%=hdnIntGenDisc.ClientID%>').val(data.d[i].CustGenDiscount);
                                $('#<%=hdnIntLabDisc.ClientID%>').val(data.d[i].CustLabDiscount);
                                $('#<%=hdnIntSpareDisc.ClientID%>').val(data.d[i].CustSpareDiscount);
                            }                            
                        }

                        if (spdata.d[i].DebtType == "CLA") {
                            claimCust = spdata.d[i].Id_Job_Deb;
                            var claSplit = (fnformatDecimalValue(spdata.d[i].SplitPercent, seperator)).toFixed(0);
                            claSplit = fnreformatDecimal(claSplit, seperator);
                            $('#<%=hdnClaimCustId.ClientID%>').val(claimCust);
                            $('#<%=hdnClaimDbtSeq.ClientID%>').val(spdata.d[i].Id_Deb_Seq);
                            $('#<%=txtClaimSplit.ClientID%>').val(claSplit);

                            if (spdata.d[i].Diff == "L" || spdata.d[i].Diff == "S") {
                                var claDisc = (fnformatDecimalValue(spdata.d[i].DebitorDiscount, seperator)).toFixed(0);
                                claDisc = fnreformatDecimal(claDisc, seperator);
                                $('#<%=txtClaimDiscount.ClientID%>').val(claDisc);
                                $('#<%=hdnClaGenDisc.ClientID%>').val(data.d[i].CustGenDiscount);
                                $('#<%=hdnClaLabDisc.ClientID%>').val(data.d[i].CustLabDiscount);
                                $('#<%=hdnClaSpareDisc.ClientID%>').val(data.d[i].CustSpareDiscount);
                            }                            
                        }

                        if (spdata.d[i].DebtType == "MISC") {
                            miscCust = spdata.d[i].Id_Job_Deb;

                            var miscCustSplit = (fnformatDecimalValue(spdata.d[i].SplitPercent, seperator)).toFixed(0);
                            miscCustSplit = fnreformatDecimal(miscCustSplit, seperator);
                            $('#<%=hdnMiscCustId.ClientID%>').val(miscCust);
                            $('#<%=hdnMiscDbtSeq.ClientID%>').val(spdata.d[i].Id_Deb_Seq);
                            $('#<%=txtMiscSplit.ClientID%>').val(miscCustSplit);

                            if (spdata.d[i].Diff =="OR" &&  fnformatDecimalValue(spdata.d[i].Belop, seperator) > 0) {
                                $("#<%=chkMiscMoveOwnRisk.ClientID%>").prop('checked', true);
                            }

                            if (spdata.d[i].Diff == "L" || spdata.d[i].Diff == "S") {
                                var miscDisc = (fnformatDecimalValue(spdata.d[i].DebitorDiscount, seperator)).toFixed(0);
                                miscDisc = fnreformatDecimal(miscDisc, seperator);
                                $('#<%=txtMiscDiscount.ClientID%>').val(miscDisc);
                                $('#<%=hdnMiscGenDisc.ClientID%>').val(data.d[i].CustGenDiscount);
                                $('#<%=hdnMiscLabDisc.ClientID%>').val(data.d[i].CustLabDiscount);
                                $('#<%=hdnMiscSpareDisc.ClientID%>').val(data.d[i].CustSpareDiscount);
                            }
                        }

                        if (spdata.d[i].DebtType == "OHC") {
                            ohcCust = $('#<%=lblCustName.ClientID%>').text();
                        }

                        if (spdata.d[i].DebtType == "OHC" && spdata.d[i].Diff == "RAOR" && spdata.d[i].JobId == "1") {
                            $('#<%=hdnReductionType.ClientID%>').val("RAOR");
                        } else if (spdata.d[i].DebtType == "OHC" && spdata.d[i].Diff == "RBOR" && spdata.d[i].JobId == "1") {
                            $('#<%=hdnReductionType.ClientID%>').val("RBOR");
                        }
                        else if (spdata.d[i].DebtType == "OHC" && spdata.d[i].Diff == "" && spdata.d[i].JobId == "1") {
                            $('#<%=hdnReductionType.ClientID%>').val("");
                        }
                        $('#<%=hdnOwnPayVAT.ClientID%>').val(spdata.d[i].WO_Own_Pay_Vat);

                        if (spdata.d[i].DebtType == "OHC" && spdata.d[i].Flag == "1" && spdata.d[i].JobId == "1") {
                            $('#<%=hdnOrdHeadDebtVatPerc.ClientID%>').val(spdata.d[i].DebtVatPercentage);
                        }
                    }

                    jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
                    $("#jobgrid").jqGrid("hideCol", "subgrid");

                    if (ohcCust != "") {
                        FillCustDet(ohcCust);
                    }

                    if (insuranceCust != "") {
                        FillInsCustDet(insuranceCust,"update");
                    }

                    if (internalCust != "" && claimCust != "") {
                        FillIntCustDet(internalCust,"update");
                        FillClaimCustDet(claimCust,"update");
                    }

                    if (claimCust != "" && internalCust == "") {
                        FillClaimCustDet(claimCust, "update");
                    }

                    if (claimCust == "" && internalCust != "") {
                        FillIntCustDet(internalCust, "update");
                    }

                    if (miscCust != "") {
                        FillMiscCustDet(miscCust, "update");
                    }

                    if ($("#<%=radInsReductioAfter.ClientID%>").is(':checked')) {
                        var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                        var rowId;
                        var arrORisk = new Array();
                        var redExists = false;

                        for (var i = 0; i < rowdisdata.length; i++) {
                            if (rowdisdata[i].DebtType == "OHC" && rowdisdata[i].JobId == "1") {
                                rowId = rowdisdata[i].id;
                            }

                            if (rowdisdata[i].DebtType == "OHC" && rowdisdata[i].JobId == "1" && rowdisdata[i].Diff == "RAOR") {
                                redExists = true;
                            }
                        }

                        if (redExists == false && $('#<%=hdnInsCustId.ClientID%>').val() != "") {
                            var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                            arrORisk.push({
                                id: 1,
                                IdJob: rowdata.IdJob,
                                Text: "Reduction After Own Risk",
                                Nei: "0",
                                Ford: "",
                                Bestilt: "",
                                Levert: "",
                                Pris: "",
                                Rab: "",
                                Belop: "",
                                JobId: rowdata.JobId,
                                Flag: "0",
                                ForeignJob: "",
                                ItemDesc: "",
                                IdWODetailseq: rowdata.IdWODetailseq,
                                IdWOItemseq: rowdata.IdWOItemseq,
                                IdWOLabSeq: rowdata.IdWOLabSeq,
                                Id_Deb_Seq: rowdata.Id_Deb_Seq,
                                Jobi_Bo_Qty: rowdata.Jobi_Bo_Qty,
                                Id_Make: rowdata.Id_Make,
                                Sp_Cost_Price: "0",
                                Diff: "RAOR",
                                Item_Avail_Qty: rowdata.Item_Avail_Qty,
                                Id_Warehouse: rowdata.Id_Warehouse,
                                IdMech: rowdata.IdMech,
                                MechanicName: rowdata.MechanicName,
                                DebtType: "OHC",
                                SpareDiscount:0
                            });

                            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');

                            for (var j = 0; j < arrORisk.length; j++) {
                                arrayInsertAt(rowdisdata, parseInt(rowId) - 1, arrORisk[j]);
                            }

                            var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                            jQuery("#jobgrid").jqGrid('clearGridData');
                            for (var i = 0; i < rowGrddata.length; i++) {
                                //rowGrddata[i].LineNo = rowGrddata[i].id;
                                jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                            }
                        }                        
                        //saveJobDet(1);
                    }

                    if ($("#<%=radInsReductionBefore.ClientID%>").is(':checked')) {
                        var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                        var rowId;
                        var arrORisk = new Array();
                        var redExists = false;

                        for (var i = 0; i < rowdisdata.length; i++) {
                            if (rowdisdata[i].DebtType == "OHC" && rowdisdata[i].JobId == "1") {
                                rowId = rowdisdata[i].id;
                            }

                            if (rowdisdata[i].DebtType == "OHC" && rowdisdata[i].JobId == "1" && rowdisdata[i].Diff == "RBOR") {
                                redExists = true;
                            }
                        }

                        if (redExists == false) {
                            var rowdata = jQuery("#jobgrid").jqGrid('getRowData', rowId);
                            arrORisk.push({
                                id: 1,
                                IdJob: rowdata.IdJob,
                                Text: "Reduction Before Own Risk",
                                Nei: "0",
                                Ford: "",
                                Bestilt: "",
                                Levert: "",
                                Pris: "",
                                Rab: "",
                                Belop: "",
                                JobId: rowdata.JobId,
                                Flag: "0",
                                ForeignJob: "",
                                ItemDesc: "",
                                IdWODetailseq: rowdata.IdWODetailseq,
                                IdWOItemseq: rowdata.IdWOItemseq,
                                IdWOLabSeq: rowdata.IdWOLabSeq,
                                Id_Deb_Seq: rowdata.Id_Deb_Seq,
                                Jobi_Bo_Qty: rowdata.Jobi_Bo_Qty,
                                Id_Make: rowdata.Id_Make,
                                Sp_Cost_Price: "0",
                                Diff: "RBOR",
                                Item_Avail_Qty: rowdata.Item_Avail_Qty,
                                Id_Warehouse: rowdata.Id_Warehouse,
                                IdMech: rowdata.IdMech,
                                MechanicName: rowdata.MechanicName,
                                DebtType: "OHC",
                                SpareDiscount: 0
                            });

                            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');

                            for (var j = 0; j < arrORisk.length; j++) {
                                arrayInsertAt(rowdisdata, parseInt(rowId) - 1, arrORisk[j]);
                            }

                            var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                            jQuery("#jobgrid").jqGrid('clearGridData');
                            for (var i = 0; i < rowGrddata.length; i++) {
                                jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                            }
                        }
                        //saveJobDet(1);
                    }

                    if ($("#<%=radInsNoReduction.ClientID%>").is(':checked')) {
                        var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                        var rowId;
                        for (var i = 0; i < rowdisdata.length; i++) {
                            if (rowdisdata[i].DebtType === "OHC" && (rowdisdata[i].Diff == "RAOR" || rowdisdata[i].Diff == "RBOR") && rowdisdata[i].Belop != "") {
                                rowId = rowdisdata[i].id;
                                $('#jobgrid').delRowData(rowId);
                                var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

                                jQuery("#jobgrid").jqGrid('clearGridData');
                                for (var i = 0; i < rowGrddata.length; i++) {
                                    if (rowGrddata[i].DebtType === "OHC") {
                                        rowGrddata[i].Ford = "0";
                                    }
                                    if (rowGrddata[i].DebtType === "INSC") {
                                        rowGrddata[i].Ford = "100";
                                      //  rowGrddata[i].Diff = "ORARD";
                                    }
                                    jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
                                }
                                $('#<%=hdnReductionType.ClientID%>').val("");
                                saveJobDet(1);
                            }
                        }
                    }

                    recalculateTotals();             
                }
            });

            setGridLinesColour();
        }
        

        function Invoicebasis() {
            var idWoNo = $('#<%=hdnWoNo.ClientID%>')[0].value;
            var idWoPr = $('#<%=hdnWoPr.ClientID%>')[0].value;
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/InvoiceBasis",
                data: "{'idWoNo':'" + idWoNo + "',idWoPr:'" + idWoPr + "'}",
                dataType: "json",
                async: false,//Very important
                success: function (Result) {
                    if (Result.d.length > 0) {
                        $('#<%=hdnInvoiceType.ClientID%>').val("InvoiceBasis");
                        window.open("../Reports/frmShowReports.aspx?ReportHeader='Invoice Basis' &InvoiceType=INVOICEBASIS &Rpt=INVOICEPRINT &scrid='1'", "info6", "resizable=yes,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");
                    }
                }
            });

        }

        function Invoice() {
            var idWoNo = $('#<%=hdnWoNo.ClientID%>')[0].value;
            var idWoPr = $('#<%=hdnWoPr.ClientID%>')[0].value;
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/Invoice",
                data: "{'idWoNo':'" + idWoNo + "',idWoPr:'" + idWoPr + "'}",
                dataType: "json",
                async: false,//Very important
                success: function (Result) {
                    if (Result.d.length > 0) {
                        //check status and then
                        $('#<%=hdnInvoiceType.ClientID%>').val("Invoice");
                        window.open("../Reports/frmShowReports.aspx?ReportHeader='Invoice' &InvoiceType=INVOICE &Rpt=INVOICEPRINT &scrid='1'", "info6", "resizable=yes,scrollbars=1,status=yes,width=1000px,height=700px,menubar=0,toolbar=0");

                        if (Result.d[0] == "SUCCESS") {
                            //need to disable the save,upd,invoice buttons
                            $("#<%=btnInvoice.ClientID%>").attr('disabled', 'disabled');
                        }
                    }
                }
            });
        }

        function setGridLinesColour() {
            var seperator = ',';
            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
            var focusRowNo;
            //reloading after recalculatetotals
            jQuery("#jobgrid").jqGrid('clearGridData');
            for (var i = 0; i < rowdisdata.length; i++) {
                jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowdisdata[i]);
            }

            for (var k = 0; k < rowdisdata.length; k++) {
                var boQty = fnformatDecimalValue(rowdisdata[k].Jobi_Bo_Qty, seperator)
                if (boQty != "0" && rowdisdata[k].Diff == "S") {
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                        'color': 'rgba(255, 0, 0, 0.8)',
                        'background-image': 'none'
                    });
                }
                if (rowdisdata[k].Flag == "1" && (rowdisdata[k].DebtType == "OHC" || rowdisdata[k].DebtType == null || rowdisdata[k].DebtType == undefined || rowdisdata[k].DebtType == "")) {
                    //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                    jQuery('#jobgrid').jqGrid("setCell", rowdisdata[k].id, 'Rab', $('#<%=hdnOHCGenDisc.ClientID%>').val()); 
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });

                }                
                else if (rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "OR" && rowdisdata[k].Ford.toString() == "") {
                    focusRowNo = k;
                }
                else if (rowdisdata[k].DebtType == "OHC" && (rowdisdata[k].Diff == "RAOR" || rowdisdata[k].Diff == "RBOR") && rowdisdata[k].Ford.toString() == "") {
                    focusRowNo = k;
                }
                else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "INSC") {
                    //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });

                } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "INSC") {
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none',
                        'font-weight': 'normal',
                        'text-align': 'right'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'text-align': 'right'
                    });
                }


                else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "INTC") {
                    //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });

                } else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "INTC") {
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none',
                        'font-weight': 'normal',
                        'text-align': 'right'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'text-align': 'right'
                    });
                }

                else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "CLA") {
                    //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });

                }
                else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "CLA") {
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none',
                        'font-weight': 'normal',
                        'text-align': 'right'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'text-align': 'right'
                    });
                }
                else if (rowdisdata[k].Flag == "1" && rowdisdata[k].DebtType == "MISC") {
                    //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Nei", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Ford", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Bestilt", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Levert", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Rab", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });

                }
                else if (rowdisdata[k].Flag == "0" && rowdisdata[k].DebtType == "MISC") {
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                        'background-color': 'rgba(41, 128, 185, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none',
                        'font-weight': 'normal',
                        'text-align': 'right'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'text-align': 'right'
                    });
                }

                else {
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Pris", "", {
                        'text-align': 'right'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "IdJob", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Text", "", {
                        'text-align': 'left'
                    });

                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Belop", "", 'ui-state-disabled');
                    if (rowdisdata[k].DebtType == "OHC" || rowdisdata[k].DebtType == null || rowdisdata[k].DebtType == undefined) {
                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                            'background-color': 'rgba(255, 255, 153, 1)',
                            'color': 'rgba(0, 0, 0, 1)',
                            'background-image': 'none',
                            'font-weight': 'normal',
                            'text-align': 'right'
                        });
                    }
                    else if (rowdisdata[k].DebtType == "INSC") {
                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                            'background-color': 'rgba(33, 186, 69, 1)',
                            'color': 'rgba(0, 0, 0, 1)',
                            'background-image': 'none',
                            'font-weight': 'normal',
                            'text-align': 'right'
                        });
                    }
                    else if (rowdisdata[k].DebtType == "INTC") {
                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                            'background-color': 'rgba(33, 186, 69, 1)',
                            'color': 'rgba(0, 0, 0, 1)',
                            'background-image': 'none',
                            'font-weight': 'normal',
                            'text-align': 'right'
                        });
                    }
                    else if (rowdisdata[k].DebtType == "CLA") {
                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                            'background-color': 'rgba(41, 128, 185, 1)',
                            'color': 'rgba(0, 0, 0, 1)',
                            'background-image': 'none',
                            'font-weight': 'normal',
                            'text-align': 'right'
                        });
                    }
                    else if (rowdisdata[k].DebtType == "MISC") {
                        jQuery("#jobgrid").jqGrid('setCell', rowdisdata[k].id, "Belop", "", {
                            'background-color': 'rgba(41, 128, 185, 1)',
                            'color': 'rgba(0, 0, 0, 1)',
                            'background-image': 'none',
                            'font-weight': 'normal',
                            'text-align': 'right'
                        });
                    }

                    //$('#jobgrid').jqGrid("setCell", rowdisdata[k].id, 'IdWODetailseq', rowdisdata[k].IdWODetailseq);
                }
                if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "OR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC") || (rowdisdata[k].DebtType == "CLA") || (rowdisdata[k].DebtType == "INTC") || (rowdisdata[k].DebtType == "MISC")) {
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                }
                if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "RAOR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "CLA" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "INTC" && rowdisdata[k].Diff == "RAOR") || (rowdisdata[k].DebtType == "MISC" && rowdisdata[k].Diff == "RAOR")) {
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                }
                if ((rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff == "RBOR" && rowdisdata[k].Ford != "") || (rowdisdata[k].DebtType == "INSC" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "CLA" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "INTC" && rowdisdata[k].Diff == "RBOR") || (rowdisdata[k].DebtType == "MISC" && rowdisdata[k].Diff == "RBOR")) {
                    $('#' + rowdisdata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                }
                if (rowdisdata[k].Diff == "S") {
                    var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Bestilt');
                    cm.editable = true;
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Levert", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Text", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');

                }
                else if (rowdisdata[k].Diff == "T") {
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Bestilt", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Levert", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Pris", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Rab", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');
                }
                else if (rowdisdata[k].Diff == "L") {
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Bestilt", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "IdJob", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowdisdata[k].id, "Ford", "", 'not-editable-cell');
                }
            }

            if (focusRowNo != undefined) {
                var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Ford');
                cm.editable = true;
                jQuery("#jobgrid").jqGrid("nextCell", (parseInt(focusRowNo) + 1), 3).focus();
                //document.getElementById((parseInt(focusRowNo) + 1) + '_Ford').select();

            }
        }

        function delInsCust() {
            clearInsCust();
            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
            var rowId;
            for (var i = 0; i < rowdisdata.length; i++) {
                if (rowdisdata[i].DebtType == "OHC" && (rowdisdata[i].Diff == "RAOR" || rowdisdata[i].Diff == "RBOR" || rowdisdata[i].Diff == "OR") && rowdisdata[i].Belop != "") {
                    rowId = rowdisdata[i].id;
                    $('#jobgrid').delRowData(rowId);
                    i = 0;
                }
            }
            var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');

            jQuery("#jobgrid").jqGrid('clearGridData');
            for (var i = 0; i < rowGrddata.length; i++) {
                jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
            }
            saveJobDet(1);
        }

        function delIntCust() {
            clearIntCust();
            saveJobDet(1);
        }

        function delClaCust() {
            clearClaCust();
            saveJobDet(1);
        }

        function delMiscCust() {
            clearMiscCust();
            saveJobDet(1);
        }       


        function viewDebitorTotals() {
            calcDebitorTotals();

            var debitors = [
                { "DebtType": "Main Customer", "Sum inkl.mva": $('#<%=hdnMainDebtAmt.ClientID%>').val().toString() },
                { "DebtType": "Insc Customer", "Sum inkl.mva": $('#<%=hdnInsDebtAmt.ClientID%>').val().toString() },
                { "DebtType": "Inter Customer", "Sum inkl.mva": $('#<%=hdnIntDeptDebtAmt.ClientID%>').val().toString() },
                { "DebtType": "Claim Customer", "Sum inkl.mva": $('#<%=hdnClaimDebtAmt.ClientID%>').val().toString() },
                { "DebtType": "Misc Customer", "Sum inkl.mva": $('#<%=hdnMiscDebtAmt.ClientID%>').val().toString() }
            ];
            
            $("#tbodyid").empty();
            var tbody = $('#debitors tbody'),
                props = ["DebtType", "Sum inkl.mva"];
                $.each(debitors, function (i, debitor) {
                    var tr = $('<tr>');
                    $.each(props, function (i, prop) {
                        $('<td>').html(debitor[prop]).appendTo(tr);
                    });
                    tbody.append(tr);
                });

            $('#modViewDebitorTotals').modal({               
                
            }).modal('show');
        }


        function calcDebitorTotals() {

            var arrDebitors = ['OHC', 'INSC', 'INTC', 'CLA', 'MISC']; // To add internal dept,claim,misc
            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var hpVat = 0.0;
            var gmVat = 0.0;
            var amtS = 0.0;
            var vatAmount = 0.0;
            var amtL = 0.0;
            var discAmount = 0.0;
            var TotalGM = 0.0;
            var amtG = 0.0;
            var labDisc = 0.0;
            var gmDisc = 0.0;
            var spareDisc = 0.0;
            var ownRiskAmt = 0.0;
            var redAfterOR = 0.0;
            var redBeforeOR = 0.0;
            var redAmt = 0.0;
            var hpVatPerDebt = 0.0;
            var gmVatPerDebt = 0.0;
            var spVatPerDebt = 0.0;
            var inscDebtExists = false;
            var redAmt = 0.0;
            var redPerc = 0.0;
            var fordIntPerc = 0.0;
            var fordClaPerc = 0.0;
            var fordOhcPerc = 0.0;
            var labVatDisc = 0.0;
            var gmVatDisc = 0.0;
            var spareVatDisc = 0.0;
            var totLabVatDisc = 0.0;
            var totGmVatDisc = 0.0;
            var totSpareVatDisc = 0.0;

            for (var i = 0; i < arrDebitors.length; i++) {
                var debtType = arrDebitors[i];

                hpVat = 0.0;
                gmVat = 0.0;
                amtS = 0.0;
                vatAmount = 0.0;
                amtL = 0.0;
                discAmount = 0.0;
                TotalGM = 0.0;
                amtG = 0.0;
                labDisc = 0.0;
                gmDisc = 0.0;
                spareDisc = 0.0;
                //ownRiskAmt = 0.0;
                redAfterOR = 0.0;
                redBeforeOR = 0.0;
                //redAmt = 0.0;
                hpVatPerDebt = 0.0;
                gmVatPerDebt = 0.0;
                spVatPerDebt = 0.0;
                //redAmt = 0.0;
                //redPerc = 0.0;

                labVatDisc = 0.0;
                gmVatDisc = 0.0;
                spareVatDisc = 0.0;
                totLabVatDisc = 0.0;
                totGmVatDisc = 0.0;
                totSpareVatDisc = 0.0;

                for (var k = 0; k < rowdisdata.length; k++) {

                    if (rowdisdata[k].DebtType == debtType) {
                        var idItem = rowdisdata[k].IdJob;
                        var idMake = rowdisdata[k].Id_Make;
                        var idCust = $('#<%=lblCustName.ClientID%>').text();
                        var vats = LoadGMHPVat(idItem, idMake, idCust);
                        gmVat = 0.0;
                        hpVat = 0.0;
                        spVat = 0.0;

                        if (vats.length > 0) {
                            gmVat = fnformatDecimalValue(vats[0], seperator);
                            hpVat = fnformatDecimalValue(vats[1], seperator);
                            spVat = fnformatDecimalValue(vats[2], seperator);
                        }

                        var hpVatPer = hpVat;
                        var gmVatPer = gmVat;
                        var spVatPer = spVat;

                        if (rowdisdata[k].Diff == "L") {
                            var amount = 0.0;
                            amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                            amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);

                            var GM = fnformatDecimalValue($('#<%=txtGM.ClientID%>').val(), seperator);
                            if (rowdisdata[k].ForeignJob != "FJ") {
                                amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                                TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                            }

                            //Lab and GM Discount
                            if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                                labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                                gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)), seperator)).toFixed(2);
                                labVatDisc = (amount * (hpVatPer / 100)).toFixed(2);
                                totLabVatDisc = (fnformatDecimalValue(totLabVatDisc, seperator) + (fnformatDecimalValue(labVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);

                                gmVatDisc = (amtG * (gmVatPer / 100)).toFixed(2);
                                totGmVatDisc = (fnformatDecimalValue(totGmVatDisc, seperator) + (fnformatDecimalValue(gmVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);
                            }

                            hpVat = (amtL * (hpVatPer / 100)).toFixed(2);
                            gmVat = (TotalGM * (gmVatPer / 100)).toFixed(2);
                            hpVat = fnreformatDecimal(hpVat, seperator);
                            gmVat = fnreformatDecimal(gmVat, seperator);
                            amtL = fnreformatDecimal(amtL, seperator);
                            TotalGM = fnreformatDecimal(TotalGM, seperator);

                            //  $('#<%=txtGMVat.ClientID%>').val(gmVat);
                            //  $('#<%=txtTLab.ClientID%>').val(amtL);

                            hpVatPerDebt = hpVat;
                            gmVatPerDebt = gmVat;

                            var discChk = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                            //  rowdisdata[k].Disc_Amt = fnreformatDecimal(discChk, seperator);
                            var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(discChk, seperator)).toFixed(2);
                            //  rowdisdata[k].Belop = fnreformatDecimal(perLineDisc, seperator);
                        }

                        if (rowdisdata[k].Diff == "S") {
                            var amount = 0.0;
                            //amount = fnformatDecimalValue(rowdisdata[k].Belop, seperator)
                            amount = (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator)) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                            amtS = (fnformatDecimalValue(amtS, seperator) + amount).toFixed(2);
                            vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01) * (fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVat))).toFixed(2);
                            amtS = fnreformatDecimal(amtS, seperator);
                            vatAmount = fnreformatDecimal(vatAmount, seperator);
                            // $('#<%=txtSPVat.ClientID%>').val(vatAmount);
                            // $('#<%=txtTSP.ClientID%>').val(amtS);
                            spVatPerDebt = vatAmount;

                            if (rowdisdata[k].Rab != undefined && rowdisdata[k].Rab != "0" && rowdisdata[k].Rab != "") {
                                var amt;
                                var boQty;
                                if (rowdisdata[k].Jobi_Bo_Qty != undefined) {
                                    boQty = fnformatDecimalValue(rowdisdata[k].Jobi_Bo_Qty, seperator);
                                } else {
                                    boQty = 0;
                                }

                                if (boQty != "0") {
                                    //discAmount = 0;
                                    spareDisc = (fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(0, seperator)).toFixed(2);
                                } else {
                                    amt = fnformatDecimalValue(rowdisdata[k].Levert, seperator) * fnformatDecimalValue(rowdisdata[k].Pris, seperator) * (fnformatDecimalValue(rowdisdata[k].Ford, seperator) * 0.01);
                                    //discAmount = (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2);
                                    spareDisc = (fnformatDecimalValue(spareDisc, seperator) + (fnformatDecimalValue(amt, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100))).toFixed(2);
                                }
                            }

                            //Spare Discount
                            var spchck = ((fnformatDecimalValue(amount, seperator) * (fnformatDecimalValue(rowdisdata[k].Rab, seperator) / 100)).toFixed(2));
                            var perLineDisc = (fnformatDecimalValue(amount, seperator) - fnformatDecimalValue(spchck, seperator)).toFixed(2);
                            spareVatDisc = (amount * (spVat / 100)).toFixed(2);
                            totSpareVatDisc = (fnformatDecimalValue(totSpareVatDisc, seperator) + (fnformatDecimalValue(spareVatDisc, seperator) * fnformatDecimalValue(rowdisdata[k].Rab, seperator) * 0.01)).toFixed(2);

                        }

                        if (rowdisdata[k].Disc_Amt != undefined) {
                            discAmount = (fnformatDecimalValue(discAmount, seperator) + fnformatDecimalValue(rowdisdata[k].Disc_Amt, seperator)).toFixed(2);
                        }

                        discAmount = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(totLabVatDisc, seperator) + fnformatDecimalValue(totGmVatDisc, seperator) + fnformatDecimalValue(totSpareVatDisc, seperator)).toFixed(2);

                        if (rowdisdata[k].Diff == "OR" && rowdisdata[k].DebtType == "OHC") {
                            ownRiskAmt = fnformatDecimalValue(rowdisdata[k].Pris, seperator);
                        }

                        if ((rowdisdata[k].Diff == "RAOR" || rowdisdata[k].Diff == "RBOR") && rowdisdata[k].DebtType == "OHC") {
                            redAmt = fnformatDecimalValue(rowdisdata[k].Belop, seperator);
                            redPerc = fnformatDecimalValue(rowdisdata[k].Ford, seperator);
                        }
                        if (($('#<%=hdnIntCustId.ClientID%>').val() != "") && rowdisdata[k].DebtType == "INTC" && rowdisdata[k].Diff != null) {
                            fordIntPerc = fnformatDecimalValue(rowdisdata[k].Ford, seperator);
                        }
                        if (($('#<%=hdnClaimCustId.ClientID%>').val() != "") && rowdisdata[k].DebtType == "CLA" && rowdisdata[k].Diff != null) {
                            fordClaPerc = fnformatDecimalValue(rowdisdata[k].Ford, seperator);
                        }
                        if (($('#<%=hdnIntCustId.ClientID%>').val() != "") || ($('#<%=hdnClaimCustId.ClientID%>').val() != "")) {
                            if (rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff != null) {
                                fordOhcPerc = fnformatDecimalValue(rowdisdata[k].Ford, seperator);
                            }
                        }
                        if (($('#<%=hdnMiscCustId.ClientID%>').val() != "") && rowdisdata[k].DebtType == "OHC" && rowdisdata[k].Diff != null) {
                            fordPerc = fnformatDecimalValue(rowdisdata[k].Ford, seperator);
                        }

                    }

                }//end of grid

                var total = (fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtL, seperator) + fnformatDecimalValue(amtS, seperator)).toFixed(2);
                var vatTotal = (fnformatDecimalValue(hpVatPerDebt, seperator) + fnformatDecimalValue(gmVatPerDebt, seperator) + fnformatDecimalValue(spVatPerDebt, seperator)).toFixed(2);
                var TIncVat = ((fnformatDecimalValue(total, seperator) + fnformatDecimalValue(vatTotal, seperator) - fnformatDecimalValue(discAmount, seperator))).toFixed(2);
                var TExclVat = ((fnformatDecimalValue(total, seperator) - fnformatDecimalValue(discAmount, seperator))).toFixed(2);
                redAfterOR = fnformatDecimalValue(total, seperator) - fnformatDecimalValue(ownRiskAmt, seperator);
                redBeforeOR = fnformatDecimalValue(total, seperator);

                total = fnreformatDecimal(total, seperator);
                vatTotal = fnreformatDecimal(vatTotal, seperator);
                //TIncVat = fnreformatDecimal(TIncVat, seperator);
                discAmount = fnreformatDecimal(discAmount, seperator);
                if (fnformatDecimalValue(redPerc, seperator) == 0 && fnformatDecimalValue(redAmt, seperator) > 0) {
                    redPerc = ((fnformatDecimalValue(redAmt, seperator) / fnformatDecimalValue($('#<%=txtNet.ClientID%>').val(), seperator)) * 100).toFixed(2);
                }

                var redVAT = 0.0;

                if ($('#<%=hdnReductionType.ClientID%>').val() == "RBOR") {
                    redVAT = (fnformatDecimalValue($('#<%=txtVat.ClientID%>').val(), seperator) * fnformatDecimalValue(redPerc, seperator) * 0.01);
                } else if ($('#<%=hdnReductionType.ClientID%>').val() == "RAOR") {
                    var totvatPerc = fnformatDecimalValue($('#<%=txtNet.ClientID%>').val(), seperator) - fnformatDecimalValue(ownRiskAmt, seperator);

                    //totvatPerc = fnformatDecimalValue(totvatPerc, seperator) * (0.25); //[VAT Percentage to be done]
                    totvatPerc = fnformatDecimalValue(totvatPerc, seperator) * ($('#<%=hdnOrdHeadDebtVatPerc.ClientID%>').val() * 0.01); //[VAT Percentage to be done]

                    //redVAT = (fnformatDecimalValue($('#<%=txtVat.ClientID%>').val(), seperator) * fnformatDecimalValue(redPerc, seperator) * 0.01);
                    redVAT = (fnformatDecimalValue(totvatPerc, seperator) * fnformatDecimalValue(redPerc, seperator) * 0.01);
                }

                if (debtType == "OHC") {
                    var mainDebAmt = (fnformatDecimalValue(total, seperator) + fnformatDecimalValue(ownRiskAmt, seperator) + fnformatDecimalValue(redAmt, seperator) - fnformatDecimalValue(discAmount, seperator)).toFixed(2);

                    if (fnformatDecimalValue(redAmt, seperator) > 0 && fnformatDecimalValue(redPerc, seperator) > 0 && $('#<%=hdnOwnPayVAT.ClientID%>').val().toString() == "false") {
                        mainDebAmt = (fnformatDecimalValue(mainDebAmt, seperator) + fnformatDecimalValue(redVAT, seperator)).toFixed(2);
                    }
                    mainDebAmt = (fnformatDecimalValue(mainDebAmt, seperator) + fnformatDecimalValue(vatTotal, seperator)).toFixed(2);
                    $('#<%=hdnMainDebtAmt.ClientID%>').val(mainDebAmt);

                }
                else if (debtType == "INSC") {
                    if ($('#<%=hdnInsCustId.ClientID%>').val() != "" && $('#<%=hdnInsCustId.ClientID%>').val() != undefined) {
                        var inscDebAmt = (fnformatDecimalValue(TIncVat, seperator) - fnformatDecimalValue(ownRiskAmt, seperator) - fnformatDecimalValue(redAmt, seperator)).toFixed(2);
                        // inscDebAmt = (fnformatDecimalValue(inscDebAmt, seperator) - fnformatDecimalValue(redVAT, seperator)).toFixed(2);

                        if (fnformatDecimalValue(redAmt, seperator) > 0 && fnformatDecimalValue(redPerc, seperator) > 0 && $('#<%=hdnOwnPayVAT.ClientID%>').val().toString() == "false") {
                            inscDebAmt = (fnformatDecimalValue(inscDebAmt, seperator) - fnformatDecimalValue(redVAT, seperator)).toFixed(2);
                        }

                        if ($('#<%=hdnOwnPayVAT.ClientID%>').val().toString() == "true") {
                            inscDebAmt = (fnformatDecimalValue(inscDebAmt, seperator) - fnformatDecimalValue(vatTotal, seperator)).toFixed(2);

                            var ownPayVatMainDebt = $('#<%=hdnMainDebtAmt.ClientID%>').val();
                            ownPayVatMainDebt = (fnformatDecimalValue(ownPayVatMainDebt, seperator) + fnformatDecimalValue(vatTotal, seperator)).toFixed(2);
                            $('#<%=hdnMainDebtAmt.ClientID%>').val(ownPayVatMainDebt);
                        }

                        $('#<%=hdnInsDebtAmt.ClientID%>').val(inscDebAmt);
                    } else {
                        $('#<%=hdnInsDebtAmt.ClientID%>').val(0);
                    }
                }
                else if (debtType == "INTC") {
                    if ($('#<%=hdnIntCustId.ClientID%>').val() != "" && $('#<%=hdnIntCustId.ClientID%>').val() != undefined) {
                        var intcDebAmt = (fnformatDecimalValue(total, seperator) - fnformatDecimalValue(discAmount, seperator)).toFixed(2);
                        intcDebAmt = (fnformatDecimalValue(intcDebAmt, seperator) + fnformatDecimalValue(vatTotal, seperator)).toFixed(2);
                        //var intcDebAmt = (fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val(), seperator) * fnformatDecimalValue(fordIntPerc, seperator) * 0.01).toFixed(2);
                        $('#<%=hdnIntDeptDebtAmt.ClientID%>').val(intcDebAmt);
                    } else {
                        $('#<%=hdnIntDeptDebtAmt.ClientID%>').val(0);
                    }

                }
                else if (debtType == "CLA") {
                    if ($('#<%=hdnClaimCustId.ClientID%>').val() != "" && $('#<%=hdnClaimCustId.ClientID%>').val() != undefined) {
                        var claDebAmt = (fnformatDecimalValue(total, seperator) - fnformatDecimalValue(discAmount, seperator)).toFixed(2);
                        claDebAmt = (fnformatDecimalValue(claDebAmt, seperator) + fnformatDecimalValue(vatTotal, seperator)).toFixed(2);
                        $('#<%=hdnClaimDebtAmt.ClientID%>').val(claDebAmt);
                    } else {
                        $('#<%=hdnClaimDebtAmt.ClientID%>').val(0);
                    }
                }
                else if (debtType == "MISC") {
                    if ($('#<%=hdnMiscCustId.ClientID%>').val() != "" && $('#<%=hdnMiscCustId.ClientID%>').val() != undefined) {
                        var mainDebAmt = $('#<%=hdnMainDebtAmt.ClientID%>').val();
                        var miscDebAmt = 0;
                        if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {
                            fordPerc = fnformatDecimalValue("0", seperator);
                        } else {
                            //fordPerc = fnformatDecimalValue(100, seperator) - fnformatDecimalValue(fordPerc, seperator);
                            miscDebAmt = (fnformatDecimalValue(total, seperator) + fnformatDecimalValue(ownRiskAmt, seperator) + fnformatDecimalValue(redAmt, seperator) - fnformatDecimalValue(discAmount, seperator)).toFixed(2);
                            miscDebAmt = (fnformatDecimalValue(miscDebAmt, seperator) + fnformatDecimalValue(vatTotal, seperator)).toFixed(2);
                        }

                        //If own risk exists and if misc customer pays own risk amt
                        if (fnformatDecimalValue(ownRiskAmt, seperator) > 0) {
                            if ($('#<%=chkMiscMoveOwnRisk.ClientID%>').is(':checked')) {
                                mainDebAmt = (fnformatDecimalValue(mainDebAmt, seperator) - fnformatDecimalValue(ownRiskAmt, seperator)).toFixed(2);
                                miscDebAmt = (fnformatDecimalValue(miscDebAmt, seperator) + fnformatDecimalValue(ownRiskAmt, seperator)).toFixed(2);
                            }
                        }

                        $('#<%=hdnMainDebtAmt.ClientID%>').val(mainDebAmt);
                        $('#<%=hdnMiscDebtAmt.ClientID%>').val(miscDebAmt);
                    } else {
                        $('#<%=hdnMiscDebtAmt.ClientID%>').val(0);
                    }
                }
            }//end of debitors             
        }

        function saveJobDet(id) {
            var rowalldata = $('#jobgrid').jqGrid('getGridParam', 'data');
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var jobIdXml;
            var spareXml;
            var discXml;
            var mechXml;
            var idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
            var idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;
            var idWODetSeq = "1";
            var idRpgCatgWO = "";
            var idRpgCodeWO = ""
            var idRepCodeWO = $('#<%=ddlRepairCode.ClientID%>').val();
            var idWorkCodeWO = $('#<%=ddlWorkCode.ClientID%>').val();
            var woFixedPrice;
            var idJobPcdWO;
            var woPlannedTime = "0";
            var woHourleyPrice = "0";
            var woClkTime = "0"; //load in service Fetch_WO_ClkTime() 
            var woChrgTime;
            var flgChrgStdTime;
            var woStdTime;
            var stationReq;
            var woJobTxt = "";
            var woOwnRiskAmt = "" // Check for own risk session
            var woTotLabAmt;
            var woTotSpareAmt;
            var woTotGmAmt;
            var woTotVatAmt;
            var woTotDiscAmt;
            var jobStatus = "" // "CSA";
            var woOwnRiskDesc = "";
            var desc = "";

            var woOwnPayVat, idDefectNoteSeq, totalamt, idMechComp, woOwnRiskCust, woOwnCrCust, idSerCallNo, woGmPer, woGmVatPer, woLbrVatPer, woInclVat, woDiscount;
            var subrepCodeWO, ownriskvat, flgSprsts, salesman;
            var flgVatFree, costPrice, finalTotal, finalVat, finalDiscount, woChrgTimeFp, woTotLabAmtFp, woTotSpareAmtFp, woTotGmAmtFp, woTotVatAmtFp, woTotDiscAmtFp, woIntNote, flgawaitingSp;
            var mode;
            spareXml = "<root></root>";
            discXml = "<root></root>";
            mechXml = "<root></root>";
            var idJob = "0";
            var jobNumber = "";

            if ($('#<%=ddlStatus.ClientID%>')[0].selectedIndex == 0) {
                jobStatus = "CSA";
            } else {
                jobStatus = $('#<%=ddlStatus.ClientID%>').val();
            }

            var rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);

            var noOfJobs = new Array();
            for (var i = 0; i < rowalldata.length; i++) {
                if (rowalldata[i].Flag == "1" && rowalldata[i].DebtType == "OHC") {
                    noOfJobs.push(rowalldata[i].JobId);
                }
            }

            //looping through jobs
            for (var j = 0; j < noOfJobs.length; j++) {
                var amtS = 0.0;
                var vatAmount = 0.0;
                var amtL = 0.0;
                var discAmount = 0.0;
                var TotalGM = 0.0;
                var amtG = 0.0;
                var hpVatAmt = 0.0;
                var gmvatAmt = 0.0;
                var woTotSpareAmt = "0";
                var woTotLabAmt = "0";
                var woTotGmAmt = "0";
                var woTotVatAmt = "0";
                var woTotDiscAmt = "0";
                var finalTotal = "0";
                var finalVat = "0";
                var finalDiscount = "0";
                var woTotDiscAmtFp = "0";
                var totalamt = "0";
                var amountS = 0.0;
                var amount = 0.0;
                var labDisc = 0.0;
                var gmDisc = 0.0;
                var spareDisc = 0.0;
                var discPerLine = 0.0;
                var discPerJob = 0.0;
                var idMech = "";
                var woOwnRiskSlNo = 0;
                var labVatDisc = 0.0;
                var gmVatDisc = 0.0;
                var spareVatDisc = 0.0;
                var totLabVatDisc = 0.0;
                var totGmVatDisc = 0.0;
                var totSpareVatDisc = 0.0;
                var isSpareExist = "False"

                idJob = noOfJobs[j];
                spareXml = "";
                discXml = "";
                mechXml = "";
                woOwnRiskAmt = "";
                woOwnRiskDesc = "";
                woOwnRiskSlNo = 0;
                var redPerc = "0";
                var redBefOR = "0";
                var redAftrOR = "0";
                var redAmt = "0";
                var woVatPercentage = "0"

                for (var k = 0; k < rowalldata.length; k++) {
                    //To save the details for each job
                    if (rowalldata[k].JobId == idJob) {

                        if (rowalldata[k].Flag == "1") {
                            if (rowalldata[k].RC == null) {
                                idRepCodeWO = $('#<%=ddlRepairCode.ClientID%>').val();
                            }
                            else {
                                idRepCodeWO = rowalldata[k].RC;
                            }

                            if (rowalldata[k].WC == null) {
                                idWorkCodeWO = $('#<%=ddlWorkCode.ClientID%>').val();
                            }
                            else {
                                idWorkCodeWO = rowalldata[k].WC;
                            }
                            idMech = rowalldata[k].MechanicName;
                        }
                        var idCust = $('#<%=lblCustName.ClientID%>').text();
                        var vats = LoadGMHPVat(rowalldata[k].IdJob, rowalldata[k].Id_Make, idCust);
                        var gmVat = 0.0;
                        var hpVat = 0.0;
                        var spVat = 0.0;

                        if (vats.length > 0) {
                            gmVat = fnformatDecimalValue(vats[0], seperator);
                            hpVat = fnformatDecimalValue(vats[1], seperator);
                            spVat = fnformatDecimalValue(vats[2], seperator);
                        }

                        woFixedPrice = "0";
                        idJobPcdWO = "0";

                        flgChrgStdTime = "0";
                        woStdTime = "0";
                        stationReq = "0";

                        woOwnPayVat = "0";
                        idDefectNoteSeq = "0";

                        idMechComp = "0";
                        woOwnRiskCust = $('#<%=lblCustName.ClientID%>').text();
                        woOwnCrCust = "";
                        idSerCallNo = "0";
                        woGmPer = $('#<%=txtGM.ClientID%>').val();
                        woGmVatPer = gmVat;
                        woLbrVatPer = hpVat;
                        woInclVat = "0";
                        subrepCodeWO = "0";
                        ownriskvat = "0";//calcuate based on session
                        flgSprsts = "0";//  Session("FlGSPSTS")
                        salesman = "";
                        flgVatFree = "0";
                        costPrice = "0";
                        woIntNote = "";
                        flgawaitingSp = "0";

                        //Discount Percentage for each line
                        if (rowalldata[k].Rab == "" || rowalldata[k].Rab == undefined) {
                            woDiscount = 0;
                        } else {
                            woDiscount = fnformatDecimalValue(rowalldata[k].Rab, seperator);
                        }

                        if (woTotLabAmtFp == undefined) {
                            woTotLabAmtFp = "0";
                        }

                        if (rowalldata[k].Ford >= "0" && rowalldata[k].Pris != "" && rowalldata[k].DebtType == "OHC" && rowalldata[k].Bestilt == "" && rowalldata[k].Levert == "" && rowalldata[k].Diff == "OR") {
                            woOwnRiskAmt = rowalldata[k].Pris;
                            woOwnRiskDesc = rowalldata[k].Text;
                            woOwnRiskSlNo = rowalldata[k].id;
                        } 

                        if (rowalldata[k].Diff == "L" && rowalldata[k].DebtType == "OHC") {
                            woHourleyPrice = rowalldata[k].Pris;

                            if (woHourleyPrice == "") {
                                woHourleyPrice = "0";
                            }

                            if (rowalldata[k].Levert == "") {
                                woChrgTime = "0";
                                woChrgTimeFp = "0";
                            } else {
                                woChrgTime = rowalldata[k].Levert;
                                woChrgTimeFp = rowalldata[k].Levert;
                            }

                            var amount = 0.0;
                            //amount = fnformatDecimalValue(rowalldata[k].Belop, seperator);
                            amount = fnformatDecimalValue(rowalldata[k].Levert, seperator) * fnformatDecimalValue(rowalldata[k].Pris, seperator);
                            amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);

                            var GM = fnformatDecimalValue($('#<%=txtGM.ClientID%>').val(), seperator);
                            if (rowalldata[k].ForeignJob != "FJ") {
                                amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                                TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                            }

                            if (rowalldata[k].Belop == undefined) {
                                woTotLabAmt = "";
                            } else {
                                woTotLabAmt = fnreformatDecimal(amtL, seperator);
                            }

                            //labDisc = fnformatDecimalValue((amount * (woDiscount / 100)), seperator); // Discount Per Line
                            //gmDisc = fnformatDecimalValue((amtG * (woDiscount / 100)), seperator); // Discount Per Line

                            //Discount Per Line
                            labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (woDiscount / 100)), seperator)).toFixed(2);
                            gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (woDiscount / 100)), seperator)).toFixed(2);

                            labVatDisc = (amount * (hpVat / 100)).toFixed(2);
                            totLabVatDisc = (fnformatDecimalValue(totLabVatDisc, seperator) + (fnformatDecimalValue(labVatDisc, seperator) * fnformatDecimalValue(rowalldata[k].Rab, seperator) * 0.01)).toFixed(2);

                            gmVatDisc = (amtG * (gmVat / 100)).toFixed(2);
                            totGmVatDisc = (fnformatDecimalValue(totGmVatDisc, seperator) + (fnformatDecimalValue(gmVatDisc, seperator) * fnformatDecimalValue(rowalldata[k].Rab, seperator) * 0.01)).toFixed(2);

                            discPerJob = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(totLabVatDisc, seperator) + fnformatDecimalValue(totGmVatDisc, seperator) + fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(totSpareVatDisc, seperator)).toFixed(2);
                            woTotDiscAmt = discPerJob;
                            finalDiscount = discPerJob;

                            woTotSpareAmt = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmt = fnreformatDecimal(TotalGM, seperator);
                            //hpVatAmt = (amtL * (hpVat / 100)).toFixed(2);
                            //gmVatAmt = (TotalGM * (gmVat / 100)).toFixed(2);
                            hpVatAmt = (amount * (hpVat / 100)).toFixed(2);
                            gmVatAmt = (amtG * (gmVat / 100)).toFixed(2);

                            woTotVatAmt = fnformatDecimalValue(hpVatAmt, seperator) + fnformatDecimalValue(gmVatAmt, seperator);
                            woTotVatAmt = fnreformatDecimal(woTotVatAmt, seperator);
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);

                            //finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amtL, seperator) + fnformatDecimalValue(TotalGM, seperator); //+ fnformatDecimalValue(woTotSpareAmt, seperator);
                            finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amount, seperator) + fnformatDecimalValue(amtG, seperator); //+ fnformatDecimalValue(woTotSpareAmt, seperator);
                            finalVat = fnformatDecimalValue(finalVat, seperator) + fnformatDecimalValue(woTotVatAmt, seperator);
                            //finalDiscount = "0";
                            //totalamt = fnformatDecimalValue(totalamt, seperator) + fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);
                            totalamt = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator) - fnformatDecimalValue(finalDiscount, seperator);

                            finalTotal = fnreformatDecimal(finalTotal, seperator);
                            finalVat = fnreformatDecimal(finalVat, seperator);
                            totalamt = fnreformatDecimal(totalamt, seperator);

                            woTotDiscAmt = fnreformatDecimal(woTotDiscAmt, seperator);
                            finalDiscount = fnreformatDecimal(finalDiscount, seperator);

                            if (rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined || rowalldata[k].IdWODetailseq == null && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" LineType ="L" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0" REDUCTION_AMOUNT="0" DBT_DIS_PER="0" DEB_STATUS=""  />';

                                mechXml = mechXml + ' <insert ID_MECH="' + rowalldata[k].IdMech.toString() + '" Id_Sl_No="' + rowalldata[k].id.toString() + '" ID_WOLAB_SEQ = "" LabourDesc = "' + rowalldata[k].Text.toString() + '"  Wo_Lab_Hrs = "' + fnformatDecimalValue(rowalldata[k].Levert.toString(), seperator) + '" HourlyPr = "' + fnformatDecimalValue(rowalldata[k].Pris.toString(), seperator) + '" WO_Lab_Discount = "' + fnformatDecimalValue(woDiscount) + '"  LineType ="L" />';
                            }
                            else {
                                if (rowalldata[k].DebtType == "OHC") {
                                    mode = "Update";
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                                'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00"  CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0" REDUCTION_AMOUNT="0" DBT_DIS_PER="0" DEB_STATUS="" />';

                                    mechXml = mechXml + ' <insert ID_MECH="' + rowalldata[k].IdMech.toString() + '" Id_Sl_No="' + rowalldata[k].id.toString() + '" ID_WOLAB_SEQ = "' + rowalldata[k].IdWOLabSeq.toString() + '" LabourDesc = "' + rowalldata[k].Text.toString() + '"  Wo_Lab_Hrs = "' + fnformatDecimalValue(rowalldata[k].Levert.toString(), seperator) + '" HourlyPr = "' + fnformatDecimalValue(rowalldata[k].Pris.toString(), seperator) + '" WO_Lab_Discount = "' + fnformatDecimalValue(woDiscount) + '"  LineType ="L" />';
                                }
                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }
                        else if (rowalldata[k].Diff == "S" && rowalldata[k].DebtType == "OHC") {
                            var idItem = rowalldata[k].IdJob.toString();
                            var idJobDeb = $('#<%=lblCustName.ClientID%>').text();
                            var idVeh = $('#<%=hdnVehId.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make.toString();
                            var idWh = "1";
                            var disSeq;
                            var jobVatPer = 0.0;
                            var jobVatSeq;
                            var item_avail_qty;
                            var bo_qty;
                            var delivQty;
                            var ordQty;
                            item_avail_qty = fnformatDecimalValue(rowalldata[k].Item_Avail_Qty, seperator);
                            ordQty = fnformatDecimalValue(rowalldata[k].Bestilt, seperator);
                            delivQty = fnformatDecimalValue(rowalldata[k].Levert, seperator);
                            isSpareExist = "True"


                            if (rowalldata[k].Jobi_Bo_Qty == "" || rowalldata[k].Jobi_Bo_Qty == undefined || rowalldata[k].Jobi_Bo_Qty == null) {
                                bo_qty = fnformatDecimalValue("0", seperator);
                            } else {
                                bo_qty = fnformatDecimalValue(rowalldata[k].Jobi_Bo_Qty, seperator);
                            }

                            var detSeq = GetVatDis(idItem, idJobDeb, idVeh, idMake, idWh);

                            disSeq = detSeq[0];
                            jobVatPer = fnformatDecimalValue(detSeq[1], seperator);
                            jobVatSeq = detSeq[2];

                            var disPer = rowalldata[k].Rab;
                            if (disPer == "" || disPer == undefined) {
                                disPer = "0.00";
                            }

                            // amountS = fnformatDecimalValue(rowalldata[k].Belop, seperator)
                            amountS = fnformatDecimalValue(rowalldata[k].Levert, seperator) * fnformatDecimalValue(rowalldata[k].Pris, seperator);
                            amtS = (fnformatDecimalValue(amtS, seperator) + amountS).toFixed(2);
                            //vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowalldata[k].Pris, seperator) * (fnformatDecimalValue(rowalldata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVat))).toFixed(2);
                            vatAmount = (((fnformatDecimalValue(rowalldata[k].Pris, seperator) * (fnformatDecimalValue(rowalldata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVat))).toFixed(2);
                            amtS = fnreformatDecimal(amtS, seperator);
                            vatAmount = fnreformatDecimal(vatAmount, seperator);

                            woChrgTime = "0";
                            woChrgTimeFp = "0";
                            woTotSpareAmt = amtS;
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            finalVat = fnformatDecimalValue(finalVat, seperator) + fnformatDecimalValue(vatAmount, seperator);
                            spareDisc = (fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue((amountS * (woDiscount / 100)), seperator)).toFixed(2);
                            spareVatDisc = (amountS * (spVat / 100)).toFixed(2);
                            totSpareVatDisc = (fnformatDecimalValue(totSpareVatDisc, seperator) + (fnformatDecimalValue(spareVatDisc, seperator) * fnformatDecimalValue(rowalldata[k].Rab, seperator) * 0.01)).toFixed(2);
                            
                            discPerJob = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(totLabVatDisc, seperator) + fnformatDecimalValue(totGmVatDisc, seperator) + fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(totSpareVatDisc, seperator)).toFixed(2);
                            woTotDiscAmt = discPerJob;
                            finalDiscount = discPerJob;

                            //finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amtS, seperator);
                            finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amountS, seperator);

                            //totalamt = fnformatDecimalValue(totalamt, seperator) + fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);
                            totalamt = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator); //without discount
                            //totalamt = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator) - fnformatDecimalValue(finalDiscount, seperator);


                            //spareDisc = (fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue((amountS * (woDiscount / 100)), seperator)).toFixed(2);

                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);
                            finalVat = fnreformatDecimal(finalVat, seperator);
                            finalTotal = fnreformatDecimal(finalTotal, seperator);
                            totalamt = fnreformatDecimal(totalamt, seperator);

                            if (rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined || rowalldata[k].IdWODetailseq == null && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + rowalldata[k].Id_Make + '" ID_WAREHOUSE = "' + rowalldata[k].Id_Warehouse + '" ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    fnformatDecimalValue(rowalldata[k].Bestilt, seperator) + '" JOBI_DELIVER_QTY= "' + fnformatDecimalValue(delivQty, seperator) + '" JOBI_BO_QTY ="' + fnformatDecimalValue(bo_qty, seperator) + '" JOBI_DIS_PER ="' + fnformatDecimalValue(disPer, seperator) + '" JOBI_VAT_PER ="' + fnformatDecimalValue(spVat, seperator) + '" ORDER_LINE_TEXT ="" ' +
                                     ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "' + fnformatDecimalValue(rowalldata[k].Sp_Cost_Price, seperator) + '" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="" TD_CALC ="True " ITEM_DESC="' +
                                     rowalldata[k].Text + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                     ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="S"  SPARE_DISCOUNT="' + rowalldata[k].SpareDiscount.toString() + '"   />';

                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                 'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue(vatAmount, seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue(woTotSpareAmt, seperator) + '" LineType ="S" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                            }
                            else {
                                //idWODetSeq = rowalldata[k].IdWODetailseq;
                                mode = "Update";
                                if (rowalldata[k].IdWOItemseq == "" || rowalldata[k].IdWOItemseq == undefined || rowalldata[k].IdWOItemseq == null && rowalldata[k].DebtType == "OHC") {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + rowalldata[k].Id_Make + '" ID_WAREHOUSE = "' + rowalldata[k].Id_Warehouse + '" ID_WODET_SEQ_JOB="0"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    fnformatDecimalValue(rowalldata[k].Bestilt, seperator) + '" JOBI_DELIVER_QTY= "' + fnformatDecimalValue(delivQty, seperator) + '" JOBI_BO_QTY ="' + fnformatDecimalValue(bo_qty, seperator) + '" JOBI_DIS_PER ="' + fnformatDecimalValue(disPer, seperator) + '" JOBI_VAT_PER ="' + fnformatDecimalValue(spVat, seperator) + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="0" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "' + fnformatDecimalValue(rowalldata[k].Sp_Cost_Price, seperator) + '" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="" TD_CALC ="True " ITEM_DESC="' +
                                    rowalldata[k].Text + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="S" SPARE_DISCOUNT="' + rowalldata[k].SpareDiscount.toString() + '" />';
                                }
                                else {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + rowalldata[k].Id_Make + '" ID_WAREHOUSE = "' + rowalldata[k].Id_Warehouse + '" ID_WODET_SEQ_JOB="' + rowalldata[k].IdWODetailseq + '"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                     fnformatDecimalValue(rowalldata[k].Bestilt, seperator) + '" JOBI_DELIVER_QTY= "' + fnformatDecimalValue(rowalldata[k].Levert, seperator) + '" JOBI_BO_QTY ="' + fnformatDecimalValue(bo_qty, seperator) + '" JOBI_DIS_PER ="' + fnformatDecimalValue(disPer, seperator) + '" JOBI_VAT_PER ="' + fnformatDecimalValue(spVat, seperator) + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="' + rowalldata[k].IdWOItemseq + '" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "' + fnformatDecimalValue(rowalldata[k].Sp_Cost_Price, seperator) + '" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="" TD_CALC ="True " ITEM_DESC="' +
                                    rowalldata[k].Text + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="S" SPARE_DISCOUNT="' + rowalldata[k].SpareDiscount.toString() + '"  />';
                                }

                                if (rowalldata[k].DebtType == "OHC") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue(vatAmount, seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue(woTotSpareAmt, seperator) + '" LineType ="S" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0" REDUCTION_AMOUNT="0" DBT_DIS_PER="0"  />';
                                }
                            }

                            jobIdXml = "<root>" + jobIdXml + "</root>";

                            var spDebRab;
                            if (rowalldata[k].Rab != undefined && rowalldata[k].Rab != "" && rowalldata[k].DebtType == "OHC") {
                                spDebRab = fnformatDecimalValue(rowalldata[k].Rab.toString(), seperator);
                            } else { spDebRab = "0"; }

                            discXml = discXml + '<insert ID_DEBTOR ="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_ITEM = "' + rowalldata[k].IdJob + '" ID_MAKE = "' + rowalldata[k].Id_Make + '" ID_WAREHOUSE = "' + rowalldata[k].Id_Warehouse + '" DBT_VAT_AMOUNT = "' +
                                 fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" DBT_DIS_AMT="' + fnformatDecimalValue($('#<%=txtDisc.ClientID%>').val().toString(), seperator) + '" JOB_VAT_PER="' + jobVatPer + '" JOB_VAT_SEQ="' + jobVatSeq + '" JOB_DIS_SEQ="' + disSeq + '" JOB_DIS_PER="' + spDebRab + '" />';
                        }
                        else if (((rowalldata[k].Diff == "T" && rowalldata[k].IdWOLabSeq == "") || (rowalldata[k].IdJob == "" && rowalldata[k].Text != "" && rowalldata[k].Levert == "" && rowalldata[k].IdWOLabSeq == "" && rowalldata[k].Pris == "")) && rowalldata[k].DebtType == "OHC" && rowalldata[k].Diff != "RAOR" && rowalldata[k].Diff != "RBOR") {
                            var idItem = rowalldata[k].IdJob.toString();
                            var idJobDeb = $('#<%=lblCustName.ClientID%>').text();
                            var idVeh = $('#<%=hdnVehId.ClientID%>').val();
                            var idMake = "";//rowalldata[k].Id_Make.toString();
                            var idWh = "1";
                            var disSeq;
                            var jobVatPer = 0.0;
                            var jobVatSeq;

                            var detSeq = GetVatDis(idItem, idJobDeb, idVeh, idMake, idWh);

                            disSeq = detSeq[0];
                            jobVatPer = fnformatDecimalValue(detSeq[1], seperator);
                            jobVatSeq = detSeq[2];

                            var disPer = rowalldata[k].Rab;
                            if (disPer == "") {
                                disPer = "0.00";
                            }

                            var idwarehouse = rowalldata[k].Id_Warehouse;
                            if (idwarehouse == undefined || idwarehouse == "" || idwarehouse == "0") {
                                idwarehouse = 1;//check this
                            }

                            woChrgTime = "0";
                            woChrgTimeFp = "0";
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);

                            if ((rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined) && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ' +
                                ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.0" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0" />';

                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val().toString(), seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                 'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue($('#<%=txtVat.ClientID%>').val().toString(), seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" LineType ="T"  CUST_TYPE="OHC"  WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                            }
                            else {
                                //idWODetSeq = rowalldata[k].IdWODetailseq;
                                mode = "Update";
                                if ((rowalldata[k].IdWOItemseq == "" || rowalldata[k].IdWOItemseq == undefined || rowalldata[k].IdWOItemseq == "0") && rowalldata[k].DebtType == "OHC") {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_WODET_SEQ_JOB="0"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="0" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.00" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                    "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0" />';
                                }
                                else {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_WODET_SEQ_JOB="' + rowalldata[k].IdWODetailseq + '"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="' + rowalldata[k].IdWOItemseq + '" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.00" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                    "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0"  />';
                                }
                                if (rowalldata[k].DebtType == "OHC") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val().toString(), seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                     'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue($('#<%=txtVat.ClientID%>').val().toString(), seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" LineType ="T" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0"  />';
                                }
                            }

                            jobIdXml = "<root>" + jobIdXml + "</root>";

                            discXml = discXml + '<insert ID_DEBTOR ="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_ITEM = "' + rowalldata[k].IdJob + '" ID_MAKE = "" ID_WAREHOUSE = "' + idwarehouse + '" DBT_VAT_AMOUNT = "' +
                                 fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" DBT_DIS_AMT="' + fnformatDecimalValue($('#<%=txtDisc.ClientID%>').val().toString(), seperator) + '" JOB_VAT_PER="' + jobVatPer + '" JOB_VAT_SEQ="' + jobVatSeq + '" JOB_DIS_SEQ="' + disSeq + '" JOB_DIS_PER="0" />';
                        }//Labour to TextLine
                        else if (rowalldata[k].Diff == "T" && rowalldata[k].Text != "" && rowalldata[k].Levert == "" && rowalldata[k].IdWOLabSeq != "" && rowalldata[k].DebtType == "OHC") {
                            woHourleyPrice = rowalldata[k].Pris;

                            if (woHourleyPrice == "") {
                                woHourleyPrice = "0";
                            }

                            if (rowalldata[k].Levert == "") {
                                woChrgTime = "0";
                                woChrgTimeFp = "0";
                            } else {
                                woChrgTime = rowalldata[k].Levert;
                                woChrgTimeFp = rowalldata[k].Levert;
                            }

                            var amount = 0.0;
                            //amount = fnformatDecimalValue(rowalldata[k].Belop, seperator);
                            amount = fnformatDecimalValue(rowalldata[k].Levert, seperator) * fnformatDecimalValue(rowalldata[k].Pris, seperator);
                            amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);

                            var GM = fnformatDecimalValue($('#<%=txtGM.ClientID%>').val(), seperator);
                            if (rowalldata[k].ForeignJob != "FJ") {
                                amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                                TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                            }

                            if (rowalldata[k].Belop == undefined) {
                                woTotLabAmt = "";
                            } else {
                                woTotLabAmt = fnreformatDecimal(amtL, seperator);
                            }

                            //Discount Per Line
                            labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (woDiscount / 100)), seperator)).toFixed(2);
                            gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (woDiscount / 100)), seperator)).toFixed(2);

                            discPerJob = fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator);

                            woTotDiscAmt = discPerJob;
                            finalDiscount = discPerJob;

                            woTotSpareAmt = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmt = fnreformatDecimal(TotalGM, seperator);
                            //hpVatAmt = (amtL * (hpVat / 100)).toFixed(2);
                            //gmVatAmt = (TotalGM * (gmVat / 100)).toFixed(2);
                            hpVatAmt = (amount * (hpVat / 100)).toFixed(2);
                            gmVatAmt = (amtG * (gmVat / 100)).toFixed(2);

                            woTotVatAmt = fnformatDecimalValue(hpVatAmt, seperator) + fnformatDecimalValue(gmVatAmt, seperator);
                            woTotVatAmt = fnreformatDecimal(woTotVatAmt, seperator);
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);

                            //finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amtL, seperator) + fnformatDecimalValue(TotalGM, seperator); //+ fnformatDecimalValue(woTotSpareAmt, seperator);
                            finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amount, seperator) + fnformatDecimalValue(amtG, seperator); //+ fnformatDecimalValue(woTotSpareAmt, seperator);
                            finalVat = fnformatDecimalValue(finalVat, seperator) + fnformatDecimalValue(woTotVatAmt, seperator);
                            //finalDiscount = "0";
                            //totalamt = fnformatDecimalValue(totalamt, seperator) + fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);
                            totalamt = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);

                            finalTotal = fnreformatDecimal(finalTotal, seperator);
                            finalVat = fnreformatDecimal(finalVat, seperator);
                            totalamt = fnreformatDecimal(totalamt, seperator);

                            if ((rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined || rowalldata[k].IdWODetailseq == null) && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" LineType ="L" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0"  />';

                                mechXml = mechXml + ' <insert ID_MECH="' + rowalldata[k].IdMech.toString() + '" Id_Sl_No="' + rowalldata[k].id.toString() + '" ID_WOLAB_SEQ = "" LabourDesc = "' + rowalldata[k].Text.toString() + '"  Wo_Lab_Hrs = "' + fnformatDecimalValue(rowalldata[k].Levert.toString(), seperator) + '" HourlyPr = "' + fnformatDecimalValue(rowalldata[k].Pris.toString(), seperator) + '" WO_Lab_Discount = "' + fnformatDecimalValue(woDiscount) + '"  LineType ="L" />';
                            }
                            else {
                                mode = "Update";
                                if (rowalldata[k].DebtType == "OHC") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                     'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0"  />';
                                }
                                mechXml = mechXml + ' <insert ID_MECH="' + rowalldata[k].IdMech.toString() + '" Id_Sl_No="' + rowalldata[k].id.toString() + '" ID_WOLAB_SEQ = "' + rowalldata[k].IdWOLabSeq.toString() + '" LabourDesc = "' + rowalldata[k].Text.toString() + '"  Wo_Lab_Hrs = "' + fnformatDecimalValue(rowalldata[k].Levert.toString(), seperator) + '" HourlyPr = "' + fnformatDecimalValue(rowalldata[k].Pris.toString(), seperator) + '" WO_Lab_Discount = "' + fnformatDecimalValue(woDiscount) + '"  LineType ="LT" />';
                            }

                            //TextLine
                            var idItem = "";// rowalldata[k].IdJob.toString();
                            var idJobDeb = $('#<%=lblCustName.ClientID%>').text();
                            var idVeh = $('#<%=hdnVehId.ClientID%>').val();
                            var idMake = "";//rowalldata[k].Id_Make.toString();
                            var idWh = "1";
                            var disSeq;
                            var jobVatPer = 0.0;
                            var jobVatSeq;

                            var detSeq = GetVatDis(idItem, idJobDeb, idVeh, idMake, idWh);

                            disSeq = detSeq[0];
                            jobVatPer = fnformatDecimalValue(detSeq[1], seperator);
                            jobVatSeq = detSeq[2];

                            var disPer = rowalldata[k].Rab;
                            if (disPer == "") {
                                disPer = "0.00";
                            }

                            var idwarehouse = rowalldata[k].Id_Warehouse;
                            if (idwarehouse == undefined || idwarehouse == "" || idwarehouse == "0") {
                                idwarehouse = 1;//check this
                            }

                            woChrgTime = "0";
                            woChrgTimeFp = "0";
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);

                            if (rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined && rowalldata[k].DebtType == "OHC")  {
                                mode = "Add";
                                spareXml = spareXml + '<insert ID_ITEM_JOB ="' + idItem + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ' +
                                ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.0" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0" />';

                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val().toString(), seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                 'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue($('#<%=txtVat.ClientID%>').val().toString(), seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" LineType ="T" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                            }
                            else {
                                //idWODetSeq = rowalldata[k].IdWODetailseq;
                                mode = "Update";
                                if ((rowalldata[k].IdWOItemseq == "" || rowalldata[k].IdWOItemseq == undefined || rowalldata[k].IdWOItemseq == "0") && rowalldata[k].DebtType == "OHC") {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + idItem + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_WODET_SEQ_JOB="' + rowalldata[k].IdWODetailseq + '"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="0" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.00" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                    "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0"  />';
                                }
                                else {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + idItem + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_WODET_SEQ_JOB="' + rowalldata[k].IdWODetailseq + '"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="' + rowalldata[k].IdWOItemseq + '" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.00" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                    "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0"  />';
                                }
                                if (rowalldata[k].DebtType == "OHC") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val().toString(), seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                     'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue($('#<%=txtVat.ClientID%>').val().toString(), seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" LineType ="T" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                                }
                            }

                            //jobIdXml = "<root>" + jobIdXml + "</root>";

                            discXml = discXml + '<insert ID_DEBTOR ="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_ITEM = "' + idItem + '" ID_MAKE = "" ID_WAREHOUSE = "' + idwarehouse + '" DBT_VAT_AMOUNT = "' +
                                 fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" DBT_DIS_AMT="' + fnformatDecimalValue($('#<%=txtDisc.ClientID%>').val().toString(), seperator) + '" JOB_VAT_PER="' + jobVatPer + '" JOB_VAT_SEQ="' + jobVatSeq + '" JOB_DIS_SEQ="' + disSeq + '" JOB_DIS_PER="0" />';

                            jobIdXml = "<root>" + jobIdXml + "</root>";

                        }
                        else if (rowalldata[k].IdWODetailseq != "" && rowalldata[k].IdWODetailseq != undefined && rowalldata[k].IdWODetailseq != null && rowalldata[k].Flag == "0" && rowalldata[k].DebtType == "OHC") {
                            woChrgTime = "0";
                            woChrgTimeFp = "0";
                            woTotLabAmtFp = "0";
                            woTotSpareAmtFp = "0";
                            woTotGmAmtFp = "0";
                            woTotVatAmtFp = "0";
                            mode = "Update";
                            if (rowalldata[k].DebtType == "OHC") {
                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue(woTotSpareAmt, seperator) + '" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" DEB_STATUS=""  />';
                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }

                        if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {

                            var idItem = rowalldata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                            var idCust = $('#<%=hdnInsCustId.ClientID%>').val()

                            var vats = LoadGMHPVat(idItem, idMake, idCust);
                            var inscGmVat = 0.0;
                            var inscHpVat = 0.0;
                            var inscSpVat = 0.0;

                            if (vats.length > 0) {
                                inscGmVat = fnformatDecimalValue(vats[0], seperator);
                                inscHpVat = fnformatDecimalValue(vats[1], seperator);
                                inscSpVat = fnformatDecimalValue(vats[2], seperator);
                            }

                            
                            
                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;

                                if (idJobId == idJob && Debitor == $('#<%=hdnInsCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL"

                                }
                            }

                            //var delarr = new Array()
                            //delarr = fetchDelJobDet(idWONO, idWOPrefix)


                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" ||  rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "INSC" && rowalldata[k].DebtType == "OHC") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var debitorDisc = "";
                            var custLabDisc = "0";
                            var custSpareDisc = "0";
                            var custGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtInsDiscount.ClientID%>').val(), seperator) != "0") {
                                debitorDisc = fnformatDecimalValue($('#<%=txtInsDiscount.ClientID%>').val(), seperator);
                            } else {
                                debitorDisc = "0";
                            }

                            custLabDisc = fnformatDecimalValue($('#<%=hdnInsLabDisc.ClientID%>').val(), seperator);
                            custSpareDisc = fnformatDecimalValue($('#<%=hdnInsSpareDisc.ClientID%>').val(), seperator);
                            custGenDisc = fnformatDecimalValue($('#<%=hdnInsGenDisc.ClientID%>').val(), seperator);
                            if (fnformatDecimalValue(custLabDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custLabDisc = custGenDisc
                            }

                            if (fnformatDecimalValue(custSpareDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custSpareDisc = custGenDisc
                            }

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {
                                ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                if (status == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            if ($('#<%=chkInsMoveVat.ClientID%>').is(':checked') == false) {
                                if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                    var balPerc;
                                    var insDebPerc;
                                    desc = "Reduction After Own Risk"  //rowalldata[k].Text.toString()

                                    if (isSpareExist == "True")
                                    {
                                        woVatPercentage = inscSpVat
                                    }
                                    else {
                                        woVatPercentage = "1.00"
                                    }
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'

                                    balPerc = 100 - ordHeadCustDbtPer; // fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                    //insDebPerc = 100 - redPerc

                                    if (isSpareExist == "True") {
                                        woVatPercentage = inscSpVat
                                    }
                                    else {
                                        woVatPercentage = "0.00"
                                    }

                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + inscGmVat + '" PWO_LBR_VATPER="' + inscHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                            'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';
                                }
                                else {
                                    var balPerc;
                                    var insDebPerc;
                                    if (isSpareExist == "True") {
                                        woVatPercentage = inscSpVat
                                    }
                                    else {
                                        woVatPercentage = "1.00"
                                    }
                                    if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                        jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '"  DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                    } else {
                                        jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                      'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                    }

                                    balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                    //insDebPerc = 100 - redPerc;
                                    if (isSpareExist == "True") {
                                        woVatPercentage = inscSpVat
                                    }
                                    else {
                                        woVatPercentage = "0.00"
                                    }
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="0.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + inscGmVat + '" PWO_LBR_VATPER="' + inscHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                       'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '"  />';
                                }
                            }
                                //Owner pay vat
                            else {
                                if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                    var balPerc;
                                    var insDebPerc;
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '"  DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(finalVat, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />';

                                    balPerc = 100 - ordHeadCustDbtPer;
                                    // fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                    //insDebPerc = 100 - redPerc;
                                    jobIdXml = jobIdXml +
                                               '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(finalTotal, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="0.00" PWO_GM_PER="0.00" PWO_GM_VATPER="0.00" PWO_LBR_VATPER="0.00" PWO_SPR_DISCPER="0.00"  ' +
                                            'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';
                                }
                                else {
                                    var balPerc;
                                    var insDebPerc;
                                    balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)

                                    if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                        jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '"  DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(finalVat, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />';

                                    } else {
                                        jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '"  DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(finalVat, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />';
                                    }

                                    jobIdXml = jobIdXml +
                                        '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(finalTotal, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="0.00" PWO_GM_PER="0.00" PWO_GM_VATPER="0.00" PWO_LBR_VATPER="0.00" PWO_SPR_DISCPER="0.00"  ' +
                                            'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '"  CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';
                                }

                                woOwnPayVat = 1;
                                woOwnCrCust = $('#<%=lblCustName.ClientID%>').text();
                                woOwnRiskCust = $('#<%=hdnInsCustId.ClientID%>').val();
                            }
                                jobIdXml = "<root>" + jobIdXml + "</root>";
                           // }

                        }

                        if (($('#<%=hdnIntCustId.ClientID%>').val() != "") && ($('#<%=hdnClaimCustId.ClientID%>').val() == "")) {

                            var idItem = rowalldata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                            var idIntCust = $('#<%=hdnIntCustId.ClientID%>').val()

                            var vats = LoadGMHPVat(idItem, idMake, idIntCust);
                            var intcGmVat = 0.0;
                            var intcHpVat = 0.0;
                            var intcSpVat = 0.0;

                            if (vats.length > 0) {
                                intcGmVat = fnformatDecimalValue(vats[0], seperator);
                                intcHpVat = fnformatDecimalValue(vats[1], seperator);
                                intcSpVat = fnformatDecimalValue(vats[2], seperator);
                            }



                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;

                                if (idJobId == idJob && Debitor == $('#<%=hdnIntCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL"

                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "INTC") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var debitorDisc = "";
                            var custLabDisc = "0";
                            var custSpareDisc = "0";
                            var custGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtIntDiscount.ClientID%>').val(), seperator) != "0") {
                                debitorDisc = fnformatDecimalValue($('#<%=txtIntDiscount.ClientID%>').val(), seperator);

                            } else {
                                debitorDisc = "0";//[Check]                               
                            }

                            custLabDisc = fnformatDecimalValue($('#<%=hdnIntLabDisc.ClientID%>').val(), seperator);
                            custSpareDisc = fnformatDecimalValue($('#<%=hdnIntSpareDisc.ClientID%>').val(), seperator);
                            custGenDisc = fnformatDecimalValue($('#<%=hdnIntGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue(custLabDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custLabDisc = custGenDisc
                            }

                            if (fnformatDecimalValue(custSpareDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custSpareDisc = custGenDisc
                            }

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            if ($('#<%=hdnIntCustId.ClientID%>').val() != "") {
                                if ($('#<%=txtIntSplit.ClientID%>').val() == "" || $('#<%=txtIntSplit.ClientID%>').val() == "0") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                                else if ($('#<%=txtIntSplit.ClientID%>').val() == "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                }
                                else if (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) < "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue(100, seperator) - fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator);
                                    ordHeadCustDbtPer = fnformatDecimalValue(ordHeadCustDbtPer, seperator);
                                }

                                if (status == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            var orderheadCustAmt = (ordHeadCustDbtPer * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var ordHeadCustVatAmt = (ordHeadCustDbtPer * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            var intCustAmt = (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var intCustVatAmt = (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);

                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                if (isSpareExist == "True") {
                                    woVatPercentage = intcSpVat
                                }
                                else {
                                    woVatPercentage = "0.00"
                                }
                                jobIdXml = jobIdXml +
                                        '<insert ID_DETAIL="' + $('#<%=hdnIntCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(intCustAmt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + intcGmVat + '" PWO_LBR_VATPER="' + intcHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(intCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INTC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (isSpareExist == "True") {
                                    woVatPercentage = intcSpVat
                                }
                                else {
                                    woVatPercentage = "0.00"
                                }
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                  'PWO_FIXED_VATPER = "0.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                if (isSpareExist == "True") {
                                    woVatPercentage = intcSpVat
                                }
                                else {
                                    woVatPercentage = "0.00"
                                }
                                jobIdXml = jobIdXml +
                                '<insert ID_DETAIL="' + $('#<%=hdnIntCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(intCustAmt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + intcGmVat + '" PWO_LBR_VATPER="' + intcHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                   'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(intCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INTC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }
                        if (($('#<%=hdnClaimCustId.ClientID%>').val() != "") && ($('#<%=hdnIntCustId.ClientID%>').val() == "")) {

                            var idItem = rowalldata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                            var idClaCust = $('#<%=hdnClaimCustId.ClientID%>').val()

                            var vats = LoadGMHPVat(idItem, idMake, idClaCust);
                            var claGmVat = 0.0;
                            var claHpVat = 0.0;
                            var claSpVat = 0.0;

                            if (vats.length > 0) {
                                claGmVat = fnformatDecimalValue(vats[0], seperator);
                                claHpVat = fnformatDecimalValue(vats[1], seperator);
                                claSpVat = fnformatDecimalValue(vats[2], seperator);
                            } 
                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;

                                if (idJobId == idJob && Debitor == $('#<%=hdnClaimCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL"
                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "CLA") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var debitorDisc = "";
                            var custLabDisc = "0";
                            var custSpareDisc = "0";
                            var custGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtClaimDiscount.ClientID%>').val(), seperator) != "0") {
                                debitorDisc = fnformatDecimalValue($('#<%=txtClaimDiscount.ClientID%>').val(), seperator);
                            } else {
                                debitorDisc = "0";//[Check]
                            }

                            custLabDisc = fnformatDecimalValue($('#<%=hdnClaLabDisc.ClientID%>').val(), seperator);
                            custSpareDisc = fnformatDecimalValue($('#<%=hdnClaSpareDisc.ClientID%>').val(), seperator);
                            custGenDisc = fnformatDecimalValue($('#<%=hdnClaGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue(custLabDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custLabDisc = custGenDisc
                            }

                            if (fnformatDecimalValue(custSpareDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custSpareDisc = custGenDisc
                            }

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            if ($('#<%=hdnClaimCustId.ClientID%>').val() != "") {
                                if ($('#<%=txtClaimSplit.ClientID%>').val() == "" || $('#<%=txtClaimSplit.ClientID%>').val() == "0") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                                else if ($('#<%=txtClaimSplit.ClientID%>').val() == "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                }
                                else if (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) < "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue(100, seperator) - fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator);
                                    ordHeadCustDbtPer = fnformatDecimalValue(ordHeadCustDbtPer, seperator);
                                }

                                if (status == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            var orderheadCustAmt = (ordHeadCustDbtPer * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var ordHeadCustVatAmt = (ordHeadCustDbtPer * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            var claCustAmt = (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var claCustVatAmt = (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            if (isSpareExist == "True") {
                                woVatPercentage = claSpVat
                            }
                            else {
                                woVatPercentage = "0.00"
                            }
                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                jobIdXml = jobIdXml +
                                        '<insert ID_DETAIL="' + $('#<%=hdnClaimCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(claCustAmt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + claGmVat + '" PWO_LBR_VATPER="' + claHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(claCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="CLA"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '"  CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '"  />';
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                  'PWO_FIXED_VATPER = "0.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                jobIdXml = jobIdXml +
                                '<insert ID_DETAIL="' + $('#<%=hdnClaimCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(claCustAmt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="0.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + claGmVat + '" PWO_LBR_VATPER="' + claHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                   'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(claCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="CLA" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }


                        if (($('#<%=hdnClaimCustId.ClientID%>').val() != "" && $('#<%=hdnIntCustId.ClientID%>').val() != "")) {

                            var idItem = rowalldata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                            var idClaCust = $('#<%=hdnClaimCustId.ClientID%>').val()

                            var vats = LoadGMHPVat(idItem, idMake, idClaCust);
                            var claGmVat = 0.0;
                            var claHpVat = 0.0;
                            var claSpVat = 0.0;

                            if (vats.length > 0) {
                                claGmVat = fnformatDecimalValue(vats[0], seperator);
                                claHpVat = fnformatDecimalValue(vats[1], seperator);
                                claSpVat = fnformatDecimalValue(vats[2], seperator);
                            }


                            var idItem = rowalldata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                            var idIntCust = $('#<%=hdnIntCustId.ClientID%>').val()

                            var vats = LoadGMHPVat(idItem, idMake, idIntCust);
                            var intcGmVat = 0.0;
                            var intcHpVat = 0.0;
                            var intcSpVat = 0.0;

                            if (vats.length > 0) {
                                intcGmVat = fnformatDecimalValue(vats[0], seperator);
                                intcHpVat = fnformatDecimalValue(vats[1], seperator);
                                intcSpVat = fnformatDecimalValue(vats[2], seperator);
                            }
                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var claStatus = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            //var status = "";
                            //var miscStatus = "";
                            //var delarr = new Array()
                            //delarr = fetchDelJobDet(idWONO, idWOPrefix);

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;
                                if (idJobId == idJob && Debitor == $('#<%=hdnIntCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL"

                                }
                                if (idJobId == idJob && Debitor == $('#<%=hdnClaimCustId.ClientID%>').val() && Debitor != "") {
                                    claStatus = "DEL"

                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "CLA") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var intDebitorDisc = "";
                            var custIntLabDisc = "0";
                            var custIntSpareDisc = "0";
                            var custIntGenDisc = "0";

                            var claDebitorDisc = "";
                            var custClaLabDisc = "0";
                            var custClaSpareDisc = "0";
                            var custClaGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtIntDiscount.ClientID%>').val(), seperator) != "0") {
                                intDebitorDisc = fnformatDecimalValue($('#<%=txtIntDiscount.ClientID%>').val(), seperator);
                            } else {
                                intDebitorDisc = "0";//[Check]                                
                            }

                            custIntLabDisc = fnformatDecimalValue($('#<%=hdnIntLabDisc.ClientID%>').val(), seperator);
                            custIntSpareDisc = fnformatDecimalValue($('#<%=hdnIntSpareDisc.ClientID%>').val(), seperator);
                            custIntGenDisc = fnformatDecimalValue($('#<%=hdnIntGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue($('#<%=txtClaimDiscount.ClientID%>').val(), seperator) != "0") {
                                claDebitorDisc = fnformatDecimalValue($('#<%=txtClaimDiscount.ClientID%>').val(), seperator);
                            } else {
                                claDebitorDisc = "0";//[Check]
                            }

                            custClaLabDisc = fnformatDecimalValue($('#<%=hdnClaLabDisc.ClientID%>').val(), seperator);
                            custClaSpareDisc = fnformatDecimalValue($('#<%=hdnClaSpareDisc.ClientID%>').val(), seperator);
                            custClaGenDisc = fnformatDecimalValue($('#<%=hdnClaGenDisc.ClientID%>').val(), seperator);

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);

                            if ($('#<%=hdnClaimCustId.ClientID%>').val() != "" && $('#<%=hdnIntCustId.ClientID%>').val() != "") {
                                if (($('#<%=txtClaimSplit.ClientID%>').val() == "" || $('#<%=txtClaimSplit.ClientID%>').val() == "0") && ($('#<%=hdnIntCustId.ClientID%>').val() == "" || $('#<%=hdnIntCustId.ClientID%>').val() == "0")) {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                                else if (($('#<%=txtClaimSplit.ClientID%>').val() == "100") || ($('#<%=hdnIntCustId.ClientID%>').val() == "100")) {
                                    ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                }
                                else if ((fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) < "100") || (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) < "100")) {
                                    ordHeadCustDbtPer = fnformatDecimalValue(100, seperator) - fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) - fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator);
                                    ordHeadCustDbtPer = fnformatDecimalValue(ordHeadCustDbtPer, seperator);
                                }
                            }

                            if (ordHeadCustDbtPer < 0) {
                                var mess = GetMultiMessage('0116', GetMultiMessage('0338', '', ''), '');  //"Disc Percentage cannot be negative";
                                alert(mess);
                                return false;
                            }
                            else if (ordHeadCustDbtPer > 100) {
                                var mess = GetMultiMessage('0116', GetMultiMessage('0338', '', ''), '');  //"Disc Percentage cannot be greater than 100";
                                alert(mess);
                                return false;
                            }
                            var intCustPer = fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator);
                            var claCustPer = fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator);

                            var orderheadCustAmt = (ordHeadCustDbtPer * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var ordHeadCustVatAmt = (ordHeadCustDbtPer * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            var claCustAmt = (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var claCustVatAmt = (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            var intCustAmt = (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var intCustVatAmt = (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);

                            var claWoVatPercentage = "0.00"
                            woVatPercentage = "0.00"
                            if (isSpareExist == "True") {
                                woVatPercentage = intcSpVat//[Check for ]
                                claWoVatPercentage = claSpVat
                            }


                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                if (status == "DEL") {
                                    ordHeadCustDbtPer = ordHeadCustDbtPer + intCustPer;
                                    intCustPer = fnformatDecimalValue("0", seperator);
                                }

                                if (claStatus == "DEL") {
                                    ordHeadCustDbtPer = ordHeadCustDbtPer + claCustPer;
                                    claCustPer = fnformatDecimalValue("0", seperator);
                                }
                                jobIdXml = jobIdXml +
                                       '<insert ID_DETAIL="' + $('#<%=hdnIntCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(intCustAmt, seperator) + '" DBT_PER="' + intCustPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + intcGmVat + '" PWO_LBR_VATPER="' + intcHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(intCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INTC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + intDebitorDisc + '" CUST_DISC_GENERAL="' + custIntGenDisc + '" CUST_DISC_LABOUR="' + custIntLabDisc + '" CUST_DISC_SPARES="' + custIntSpareDisc + '" DEB_STATUS="' + status + '" />'

                                       + '<insert ID_DETAIL="' + $('#<%=hdnClaimCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(claCustAmt, seperator) + '" DBT_PER="' + claCustPer + '" PWO_VAT_PERCENTAGE="' + claWoVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + claGmVat + '" PWO_LBR_VATPER="' + claHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(claCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="CLA"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + claDebitorDisc + '" CUST_DISC_GENERAL="' + custClaGenDisc + '" CUST_DISC_LABOUR="' + custClaLabDisc + '" CUST_DISC_SPARES="' + custClaSpareDisc + '" DEB_STATUS="' + claStatus + '" />'
                                ;
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (status == "DEL") {
                                    ordHeadCustDbtPer = ordHeadCustDbtPer + intCustPer;
                                    intCustPer = fnformatDecimalValue("0", seperator);
                                }

                                if (claStatus == "DEL") {
                                    ordHeadCustDbtPer = ordHeadCustDbtPer + claCustPer;
                                    claCustPer = fnformatDecimalValue("0", seperator);
                                }
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + spVat + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + spVat + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                  'PWO_FIXED_VATPER = "0.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                jobIdXml = jobIdXml +
                                        '<insert ID_DETAIL="' + $('#<%=hdnIntCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(intCustAmt, seperator) + '" DBT_PER="' + intCustPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + intcGmVat + '" PWO_LBR_VATPER="' + intcHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(intCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INTC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + intDebitorDisc + '" CUST_DISC_GENERAL="' + custIntGenDisc + '" CUST_DISC_LABOUR="' + custIntLabDisc + '" CUST_DISC_SPARES="' + custIntSpareDisc + '" DEB_STATUS="' + status + '" />'

                                       + '<insert ID_DETAIL="' + $('#<%=hdnClaimCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(claCustAmt, seperator) + '" DBT_PER="' + claCustPer + '" PWO_VAT_PERCENTAGE="' + claWoVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + claGmVat + '" PWO_LBR_VATPER="' + claHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(claCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="CLA"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + claDebitorDisc + '" CUST_DISC_GENERAL="' + custClaGenDisc + '" CUST_DISC_LABOUR="' + custClaLabDisc + '" CUST_DISC_SPARES="' + custClaSpareDisc + '" DEB_STATUS="' + claStatus + '" />'
                                ;

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }

                        if (($('#<%=hdnMiscCustId.ClientID%>').val() != "")) {
                            var idItem = rowalldata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                            var idMiscCust = $('#<%=hdnMiscCustId.ClientID%>').val()

                            var vats = LoadGMHPVat(idItem, idMake, idMiscCust);
                            var miscGmVat = 0.0;
                            var miscHpVat = 0.0;
                            var miscSpVat = 0.0;

                            if (vats.length > 0) {
                                miscGmVat = fnformatDecimalValue(vats[0], seperator);
                                miscHpVat = fnformatDecimalValue(vats[1], seperator);
                                miscSpVat = fnformatDecimalValue(vats[2], seperator);
                            }
                            if (rowalldata[k].Flag == "1") {
                                var miscStatus = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;

                                if (idJobId == idJob && Debitor == $('#<%=hdnMiscCustId.ClientID%>').val() && Debitor != "") {
                                    miscStatus = "DEL"

                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "MISC" && rowalldata[k].DebtType == "OHC") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var debitorDisc = "";
                            var custLabDisc = "0";
                            var custSpareDisc = "0";
                            var custGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtMiscDiscount.ClientID%>').val(), seperator) != "0") {
                                debitorDisc = fnformatDecimalValue($('#<%=txtMiscDiscount.ClientID%>').val(), seperator);
                            } else {
                                debitorDisc = "0";
                            }

                            custLabDisc = fnformatDecimalValue($('#<%=hdnMiscLabDisc.ClientID%>').val(), seperator);
                            custSpareDisc = fnformatDecimalValue($('#<%=hdnMiscSpareDisc.ClientID%>').val(), seperator);
                            custGenDisc = fnformatDecimalValue($('#<%=hdnMiscGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue(custLabDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custLabDisc = custGenDisc
                            }

                            if (fnformatDecimalValue(custSpareDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custSpareDisc = custGenDisc
                            }

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            
                            var miscOwnRiskAmt = 0;

                            if ($('#<%=chkMiscMoveOwnRisk.ClientID%>').is(':checked')) {
                                miscOwnRiskAmt = woOwnRiskAmt;
                            } else
                            {
                                miscOwnRiskAmt = 0;
                            }


                            if ($('#<%=hdnMiscCustId.ClientID%>').val() != "") {
                                if ($('#<%=txtMiscSplit.ClientID%>').val() == "" || $('#<%=txtMiscSplit.ClientID%>').val() == "0") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                                else if ($('#<%=txtMiscSplit.ClientID%>').val() == "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                }
                                else if (fnformatDecimalValue($('#<%=txtMiscSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtMiscSplit.ClientID%>').val(), seperator) < "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue(100, seperator) - fnformatDecimalValue($('#<%=txtMiscSplit.ClientID%>').val(), seperator);
                                    ordHeadCustDbtPer = fnformatDecimalValue(ordHeadCustDbtPer, seperator);
                                }
                                if (miscStatus == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            if (isSpareExist == "True") {
                                woVatPercentage = miscSpVat
                            }
                            else {
                                woVatPercentage = "0.00"
                            }
                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                jobIdXml = jobIdXml +
                                        '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + miscGmVat + '" PWO_LBR_VATPER="' + miscHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                         'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + miscStatus + '" />';
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                  'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                jobIdXml = jobIdXml +
                                '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + miscGmVat + '" PWO_LBR_VATPER="' + miscHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                   'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + miscStatus + '" />';

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }

                        //Insurance and Miscellaneous Customer
                        if (($('#<%=hdnMiscCustId.ClientID%>').val() != "" && $('#<%=hdnInsCustId.ClientID%>').val() != "")) {

                            var idItem = rowalldata[k].IdJob;// rowdata.IdJob; //$('#<%=hdnIdItem.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make; //rowdata.Id_Make;//$('#<%=hdnIdMake.ClientID%>').val();
                            var idInscCust = $('#<%=hdnInsCustId.ClientID%>').val()

                            var vats = LoadGMHPVat(idItem, idMake, idInscCust);
                            var inscGmVat = 0.0;
                            var inscHpVat = 0.0;
                            var inscSpVat = 0.0;

                            if (vats.length > 0) {
                                inscGmVat = fnformatDecimalValue(vats[0], seperator);
                                inscHpVat = fnformatDecimalValue(vats[1], seperator);
                                inscSpVat = fnformatDecimalValue(vats[2], seperator);
                            }


                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var miscStatus = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            //var status = "";
                            //var miscStatus = "";
                            //var delarr = new Array()
                            //delarr = fetchDelJobDet(idWONO, idWOPrefix);

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;
                                if (idJobId == idJob && Debitor == $('#<%=hdnInsCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL"

                                }
                                if (idJobId == idJob && Debitor == $('#<%=hdnMiscCustId.ClientID%>').val() && Debitor != "") {
                                    miscStatus = "DEL"

                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "MISC" && rowalldata[k].DebtType == "OHC") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var miscOwnRiskAmt = 0;

                            if ($('#<%=chkMiscMoveOwnRisk.ClientID%>').is(':checked')) {
                                miscOwnRiskAmt = woOwnRiskAmt;
                            } else {
                                miscOwnRiskAmt = 0;
                            }

                            var insDebitorDisc = "";
                            var custInsLabDisc = "0";
                            var custInsSpareDisc = "0";
                            var custInsGenDisc = "0";

                            var miscDebitorDisc = "";
                            var custMiscLabDisc = "0";
                            var custMiscSpareDisc = "0";
                            var custMiscGenDisc = "0";
                            
                            if (fnformatDecimalValue($('#<%=txtInsDiscount.ClientID%>').val(), seperator) != "0") {
                                insDebitorDisc = fnformatDecimalValue($('#<%=txtInsDiscount.ClientID%>').val(), seperator);
                            } else {
                                insDebitorDisc = "0"; //[Check]                                
                            }

                            custInsLabDisc = fnformatDecimalValue($('#<%=hdnInsLabDisc.ClientID%>').val(), seperator);
                            custInsSpareDisc = fnformatDecimalValue($('#<%=hdnInsSpareDisc.ClientID%>').val(), seperator);
                            custInsGenDisc = fnformatDecimalValue($('#<%=hdnInsGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue($('#<%=txtMiscDiscount.ClientID%>').val(), seperator) != "0") {
                                miscDebitorDisc = fnformatDecimalValue($('#<%=txtMiscDiscount.ClientID%>').val(), seperator);
                            } else {
                                miscDebitorDisc = "0"; //[Check]
                            }
                            custMiscLabDisc = fnformatDecimalValue($('#<%=hdnMiscLabDisc.ClientID%>').val(), seperator);
                            custMiscSpareDisc = fnformatDecimalValue($('#<%=hdnMiscSpareDisc.ClientID%>').val(), seperator);
                            custMiscGenDisc = fnformatDecimalValue($('#<%=hdnMiscGenDisc.ClientID%>').val(), seperator);

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {
                                ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                if (status == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            var miscWoVatPercentage = "1.00"
                            woVatPercentage = "0.00"
                            if (isSpareExist == "True") {
                                woVatPercentage = inscSpVat//[Check for ]
                                miscWoVatPercentage = miscSpVat
                            }

                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                               

                                if (status == "DEL") {
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + inscGmVat + '" PWO_LBR_VATPER="' + inscHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + insDebitorDisc + '" CUST_DISC_GENERAL="' + custInsGenDisc + '" CUST_DISC_LABOUR="' + custInsLabDisc + '" CUST_DISC_SPARES="' + custInsSpareDisc + '"  DEB_STATUS="' + status + '" />' +
                                    '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="0.00" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + miscWoVatPercentage + '" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + miscDebitorDisc + '" CUST_DISC_GENERAL="' + custMiscGenDisc + '" CUST_DISC_LABOUR="' + custMiscLabDisc + '" CUST_DISC_SPARES="' + custMiscSpareDisc + '" DEB_STATUS="' + miscStatus + '"/>';
                                } else {
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + inscGmVat + '" PWO_LBR_VATPER="' + inscHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + insDebitorDisc + '" CUST_DISC_GENERAL="' + custInsGenDisc + '" CUST_DISC_LABOUR="' + custInsLabDisc + '" CUST_DISC_SPARES="' + custInsSpareDisc + '"  DEB_STATUS="" />' +
                                    '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + miscWoVatPercentage + '" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + miscDebitorDisc + '" CUST_DISC_GENERAL="' + custMiscGenDisc + '" CUST_DISC_LABOUR="' + custMiscLabDisc + '" CUST_DISC_SPARES="' + custMiscSpareDisc + '" DEB_STATUS=""/>';
                                }
                                
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                  'PWO_FIXED_VATPER = "0.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                if (status == "DEL") {
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + inscGmVat + '" PWO_LBR_VATPER="' + inscHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + insDebitorDisc + '" CUST_DISC_GENERAL="' + custInsGenDisc + '" CUST_DISC_LABOUR="' + custInsLabDisc + '" CUST_DISC_SPARES="' + custInsSpareDisc + '" DEB_STATUS="' + status + '" />' +
                                    '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="0.00" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + miscWoVatPercentage + '" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + miscDebitorDisc + '" CUST_DISC_GENERAL="' + custMiscGenDisc + '" CUST_DISC_LABOUR="' + custMiscLabDisc + '" CUST_DISC_SPARES="' + custMiscSpareDisc + '" DEB_STATUS="' + miscStatus + '" />';
                                }
                                else {
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="' + woVatPercentage + '" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + inscGmVat + '" PWO_LBR_VATPER="' + inscHpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + insDebitorDisc + '" CUST_DISC_GENERAL="' + custInsGenDisc + '" CUST_DISC_LABOUR="' + custInsLabDisc + '" CUST_DISC_SPARES="' + custInsSpareDisc + '" DEB_STATUS="" />' +
                                    '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="' + miscWoVatPercentage + '" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + miscDebitorDisc + '" CUST_DISC_GENERAL="' + custMiscGenDisc + '" CUST_DISC_LABOUR="' + custMiscLabDisc + '" CUST_DISC_SPARES="' + custMiscSpareDisc + '" DEB_STATUS="" />';
                                }                               

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }

                    }
                   
                }//end of looping through for each job

                discPerJob = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue(totLabVatDisc, seperator) + fnformatDecimalValue(totGmVatDisc, seperator) + fnformatDecimalValue(totSpareVatDisc, seperator)).toFixed(2);

                discPerJob = fnreformatDecimal(discPerJob, seperator);

                woTotDiscAmt = discPerJob;
                finalDiscount = discPerJob;


                mechXml = "<root>" + mechXml + "</root>";
                spareXml = "<root>" + spareXml + "</root>";
                discXml = "<root>" + discXml + "</root>";

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/SaveJobDet",
                    data: "{jobIdXmls: '" + jobIdXml + "',spareXmls:'" + spareXml + "',discXmls:'" + discXml + "',mechXmls:'" + mechXml + "',idWODetSeq:'" + idWODetSeq + "',idWONO:'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "',idRpgCatgWO:'" + idRpgCatgWO +
                    "',idRpgCodeWO:'" + idRpgCodeWO + "',idRepCodeWO:'" + idRepCodeWO + "',idWorkCodeWO:'" + idWorkCodeWO + "',woFixedPrice:'" + woFixedPrice + "',idJobPcdWO:'" + idJobPcdWO + "',woPlannedTime:'" + woPlannedTime +
                    "',woHourleyPrice:'" + woHourleyPrice + "',woClkTime:'" + woClkTime + "',woChrgTime:'" + woChrgTime + "',flgChrgStdTime:'" + flgChrgStdTime + "',woStdTime:'" + woStdTime + "',statReq:'" + stationReq +
                    "',woJobTxt:'" + woJobTxt + "',woOwnRiskAmt:'" + woOwnRiskAmt + "',woTotLabAmt:'" + woTotLabAmt + "',woTotSpareAmt:'" + woTotSpareAmt + "',woTotGmAmt:'" + woTotGmAmt + "',woTotVatAmt:'" + finalVat + "',woTotDiscAmt:'" + woTotDiscAmt +
                    "',jobStatus:'" + jobStatus + "',woOwnPayVat:'" + woOwnPayVat + "',idDefectNoteSeq:'" + idDefectNoteSeq + "',totalamt:'" + totalamt + "',idMechComp:'" + idMechComp + "',woOwnRiskCust:'" + woOwnRiskCust +
                    "',woOwnCrCust:'" + woOwnCrCust + "',idSerCallNo:'" + idSerCallNo + "',woGmPer:'" + woGmPer + "',woGmVatPer:'" + woGmVatPer + "',woLbrVatPer:'" + woLbrVatPer + "',woInclVat:'" + woInclVat + "',woDiscount:'" + woDiscount +
                    "',subrepCodeWO:'" + subrepCodeWO + "',ownriskvat:'" + ownriskvat + "',flgSprsts:'" + flgSprsts + "',salesman:'" + salesman + "',flgVatFree:'" + flgVatFree + "',costPrice:'" + costPrice + "',finalTotal:'" + finalTotal + "',finalVat:'" + finalVat +
                    "',finalDiscount:'" + finalDiscount + "',woChrgTimeFp:'" + woChrgTimeFp + "',woTotLabAmtFp:'" + woTotLabAmtFp + "',woTotSpareAmtFp:'" + woTotSpareAmtFp + "',woTotGmAmtFp:'" + woTotGmAmtFp + "',woTotVatAmtFp:'" + woTotVatAmtFp + "',woTotDiscAmtFp:'" + woTotDiscAmtFp +
                    "',woIntNote:'" + woIntNote + "',idJob:'" + idJob + "',flgawaitingSp:'" + flgawaitingSp + "',mode:'" + mode + "',idMech:'" + idMech + "',woOwnRiskDesc:'" + woOwnRiskDesc + "',woOwnRiskSlNo:'" + woOwnRiskSlNo + "'}",
                    dataType: "json",
                    async: false,//Very important
                    success: function (Result) {
                        if (jobNumber != "") {
                            jobNumber = jobNumber + ',' + idJob;
                        }
                        else {
                            jobNumber = idJob;
                        }
                        $('#<%=RTlblError.ClientID%>').text = "";
                        if (mode == "Add") {
                            if (Result.d[0] == "INSFLG") {
                                $('#<%=RTlblError.ClientID%>').text(jobNumber + 'Saved Successfully.');
                            }
                        } else if (mode == "Update") {
                            if (Result.d[0] == "UPDFLG") {
                                $('#<%=RTlblError.ClientID%>').text(jobNumber + 'Saved Successfully.');
                            }
                        }
                    }
                });

            }// end of jobs

            loadWOJobGrid(idWONO, idWOPrefix);

            var rowalldata = $('#jobgrid').jqGrid('getGridParam', 'data');
            var frowid = rowalldata.length;
            for (var i = 0; i < rowalldata.length; i++) {
                if (rowalldata[i].DebtType == "OHC") {
                    frowid = rowalldata[i].id;
                }
            }
            jQuery("#jobgrid").jqGrid("nextCell", parseInt(frowid), 0, true);
            document.getElementById((parseInt(frowid)) + '_IdJob').select();

        }


        function fnCalcLabTotal() {
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var totLabAmt = 0.0;
            var stdTime = fnformatDecimalValue($('#<%=txtStdTime.ClientID%>').val(), seperator).toFixed(2);
            var price = fnformatDecimalValue($('#<%=txtLabSalesPr.ClientID%>').val(), seperator).toFixed(2);
            var disc = fnformatDecimalValue($('#<%=txtLabDiscPer.ClientID%>').val()).toFixed(2);
            var discAmt = (stdTime * price) * (disc * 0.01);
            totLabAmt = ((stdTime * price) - ((stdTime * price) * (disc * 0.01))).toFixed(2);
            totLabAmt = fnreformatDecimal(totLabAmt,seperator);
            $('#<%=txtLabTotalAmt.ClientID%>').val(totLabAmt);
            $('#<%=txtDiscAmt.ClientID%>').val(discAmt);
        }

        function loadMechanics(result) {
            $('#<%=ddlMechanic.ClientID%>').empty();
            $('#<%=ddlMechanic.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
            $('#<%=ddlmechList.ClientID%>').empty();
            $('#<%=ddlmechList.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
            var Result = result;
            $.each(Result, function (key, value) {
                $('#<%=ddlMechanic.ClientID%>').append($("<option></option>").val(value.Id_Login).html(value.First_Name));
                $('#<%=ddlmechList.ClientID%>').append($("<option></option>").val(value.Id_Login).html(value.First_Name));
            });
        }

        function loadWorkCode() {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/LoadWorkCode",
                data: {},
                dataType: "json",
                async: false,//Very important
                success: function (Result) {
                    $('#<%=ddlWorkCode.ClientID%>').empty();
                    //$('#<%=ddlWorkCode.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        $('#<%=ddlWorkCode.ClientID%>').append($("<option></option>").val(value.Work_Code_Id_Settings).html(value.Work_Code_Description));
                    });
                }
            });
        }

        function loadRepairCode() {
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/LoadRepairCode",
                data: {},
                dataType: "json",
                async: false,//Very important
                success: function (Result) {
                    $('#<%=ddlRepairCode.ClientID%>').empty();
                    // $('#<%=ddlRepairCode.ClientID%>').prepend("<option value='0'>" + $('#<%=hdnSelect.ClientID%>').val() + "</option>");
                    Result = Result.d;
                    $.each(Result, function (key, value) {
                        $('#<%=ddlRepairCode.ClientID%>').append($("<option></option>").val(value.Id_Rep_Code).html(value.Rp_RepCode_Des));
                    });
                }
            });
        }

        function updateJobAfterDelete(id) {

            var rowalldata = $('#jobgrid').jqGrid('getGridParam', 'data');
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var jobIdXml;
            var spareXml;
            var discXml;
            var mechXml;
            var idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
            var idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;
            var idWODetSeq = "1";
            var idRpgCatgWO = "";
            var idRpgCodeWO = ""
            var idRepCodeWO = $('#<%=ddlRepairCode.ClientID%>').val();
            var idWorkCodeWO = $('#<%=ddlWorkCode.ClientID%>').val();
            var woFixedPrice;
            var idJobPcdWO;
            var woPlannedTime = "0";
            var woHourleyPrice = "0";
            var woClkTime = "0"; //load in service Fetch_WO_ClkTime() 
            var woChrgTime;
            var flgChrgStdTime;
            var woStdTime;
            var stationReq;
            var woJobTxt = "";
            var woOwnRiskAmt = "" // Check for own risk session
            var woTotLabAmt;
            var woTotSpareAmt;
            var woTotGmAmt;
            var woTotVatAmt;
            var woTotDiscAmt;
            var jobStatus = "" // "CSA";
            var woOwnRiskDesc = "";
            var desc = "";

            var woOwnPayVat, idDefectNoteSeq, totalamt, idMechComp, woOwnRiskCust, woOwnCrCust, idSerCallNo, woGmPer, woGmVatPer, woLbrVatPer, woInclVat, woDiscount;
            var subrepCodeWO, ownriskvat, flgSprsts, salesman;
            var flgVatFree, costPrice, finalTotal, finalVat, finalDiscount, woChrgTimeFp, woTotLabAmtFp, woTotSpareAmtFp, woTotGmAmtFp, woTotVatAmtFp, woTotDiscAmtFp, woIntNote, flgawaitingSp;
            var mode;
            spareXml = "<root></root>";
            discXml = "<root></root>";
            mechXml = "<root></root>";
            var idJob = "0";
            var jobNumber = "";

            if ($('#<%=ddlStatus.ClientID%>')[0].selectedIndex == 0) {
                jobStatus = "CSA";
            } else {
                jobStatus = $('#<%=ddlStatus.ClientID%>').val();
            }

            var rowdata = jQuery("#jobgrid").jqGrid('getRowData', id);

            var noOfJobs = new Array();
            for (var i = 0; i < rowalldata.length; i++) {
                if (rowalldata[i].Flag == "1" && rowalldata[i].DebtType == "OHC") {
                    noOfJobs.push(rowalldata[i].JobId);
                }
            }

            //looping through jobs
            for (var j = 0; j < noOfJobs.length; j++) {
                var amtS = 0.0;
                var vatAmount = 0.0;
                var amtL = 0.0;
                var discAmount = 0.0;
                var TotalGM = 0.0;
                var amtG = 0.0;
                var hpVatAmt = 0.0;
                var gmvatAmt = 0.0;
                var woTotSpareAmt = "0";
                var woTotLabAmt = "0";
                var woTotGmAmt = "0";
                var woTotVatAmt = "0";
                var woTotDiscAmt = "0";
                var finalTotal = "0";
                var finalVat = "0";
                var finalDiscount = "0";
                var woTotDiscAmtFp = "0";
                var totalamt = "0";
                var amountS = 0.0;
                var amount = 0.0;
                var labDisc = 0.0;
                var gmDisc = 0.0;
                var spareDisc = 0.0;
                var discPerLine = 0.0;
                var discPerJob = 0.0;
                var idMech = "";
                var woOwnRiskSlNo = 0;

                idJob = noOfJobs[j];
                spareXml = "";
                discXml = "";
                mechXml = "";
                woOwnRiskAmt = "";
                woOwnRiskDesc = "";
                woOwnRiskSlNo = 0;
                var redPerc = "0";
                var redBefOR = "0";
                var redAftrOR = "0";
                var redAmt = "0";
                for (var k = 0; k < rowalldata.length; k++) {

                    if (rowalldata[k].JobId == idJob) {
                        if (rowalldata[k].Flag == "1") {
                            if (rowalldata[k].RC == null) {
                                idRepCodeWO = $('#<%=ddlRepairCode.ClientID%>').val();
                            }
                            else {
                                idRepCodeWO = rowalldata[k].RC;
                            }

                            if (rowalldata[k].WC == null) {
                                idWorkCodeWO = $('#<%=ddlWorkCode.ClientID%>').val();
                            }
                            else {
                                idWorkCodeWO = rowalldata[k].WC;
                            }
                            idMech = rowalldata[k].MechanicName;
                        }
                        var idCust = $('#<%=lblCustName.ClientID%>').text();
                        var vats = LoadGMHPVat(rowalldata[k].IdJob, rowalldata[k].Id_Make, idCust);
                        var gmVat = 0.0;
                        var hpVat = 0.0;
                        var spVat = 0.0;

                        if (vats.length > 0) {
                            gmVat = fnformatDecimalValue(vats[0], seperator);
                            hpVat = fnformatDecimalValue(vats[1], seperator);
                            spVat = fnformatDecimalValue(vats[2], seperator);
                        }

                        woFixedPrice = "0";
                        idJobPcdWO = "0";

                        flgChrgStdTime = "0";
                        woStdTime = "0";
                        stationReq = "0";

                        woOwnPayVat = "0";
                        idDefectNoteSeq = "0";

                        idMechComp = "0";
                        woOwnRiskCust = $('#<%=lblCustName.ClientID%>').text();
                        woOwnCrCust = "";
                        idSerCallNo = "0";
                        woGmPer = $('#<%=txtGM.ClientID%>').val();
                        woGmVatPer = gmVat;
                        woLbrVatPer = hpVat;
                        woInclVat = "0";
                        subrepCodeWO = "0";
                        ownriskvat = "0";//calcuate based on session
                        flgSprsts = "0";//  Session("FlGSPSTS")
                        salesman = "";
                        flgVatFree = "0";
                        costPrice = "0";
                        woIntNote = "";
                        flgawaitingSp = "0";

                        //Discount Percentage for each line
                        if (rowalldata[k].Rab == "" || rowalldata[k].Rab == undefined) {
                            woDiscount = 0;
                        } else {
                            woDiscount = fnformatDecimalValue(rowalldata[k].Rab, seperator);
                        }

                        if (woTotLabAmtFp == undefined) {
                            woTotLabAmtFp = "0";
                        }

                        if (rowalldata[k].Ford >= "0" && rowalldata[k].Pris != "" && rowalldata[k].DebtType == "OHC" && rowalldata[k].Bestilt == "" && rowalldata[k].Levert == "" && rowalldata[k].Diff == "OR") {
                            woOwnRiskAmt = rowalldata[k].Pris;
                            woOwnRiskDesc = rowalldata[k].Text;
                            woOwnRiskSlNo = rowalldata[k].id;
                        }



                        if (rowalldata[k].Diff == "L" && rowalldata[k].DebtType == "OHC") {

                            woHourleyPrice = rowalldata[k].Pris;

                            if (woHourleyPrice == "") {
                                woHourleyPrice = "0";
                            }

                            if (rowalldata[k].Levert == "") {
                                woChrgTime = "0";
                                woChrgTimeFp = "0";
                            } else {
                                woChrgTime = rowalldata[k].Levert;
                                woChrgTimeFp = rowalldata[k].Levert;
                            }

                            var amount = 0.0;
                            //amount = fnformatDecimalValue(rowalldata[k].Belop, seperator);
                            amount = fnformatDecimalValue(rowalldata[k].Levert, seperator) * fnformatDecimalValue(rowalldata[k].Pris, seperator);
                            amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);

                            var GM = fnformatDecimalValue($('#<%=txtGM.ClientID%>').val(), seperator);
                            if (rowalldata[k].ForeignJob != "FJ") {
                                amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                                TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                            }

                            if (rowalldata[k].Belop == undefined) {
                                woTotLabAmt = "";
                            } else {
                                woTotLabAmt = fnreformatDecimal(amtL, seperator);
                            }

                            //labDisc = fnformatDecimalValue((amount * (woDiscount / 100)), seperator); // Discount Per Line
                            //gmDisc = fnformatDecimalValue((amtG * (woDiscount / 100)), seperator); // Discount Per Line

                            //Discount Per Line
                            labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (woDiscount / 100)), seperator)).toFixed(2);
                            gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (woDiscount / 100)), seperator)).toFixed(2);

                            discPerJob = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator)).toFixed(2);

                            woTotDiscAmt = discPerJob;
                            finalDiscount = discPerJob;

                            woTotSpareAmt = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmt = fnreformatDecimal(TotalGM, seperator);
                            //hpVatAmt = (amtL * (hpVat / 100)).toFixed(2);
                            //gmVatAmt = (TotalGM * (gmVat / 100)).toFixed(2);
                            hpVatAmt = (amount * (hpVat / 100)).toFixed(2);
                            gmVatAmt = (amtG * (gmVat / 100)).toFixed(2);

                            woTotVatAmt = fnformatDecimalValue(hpVatAmt, seperator) + fnformatDecimalValue(gmVatAmt, seperator);
                            woTotVatAmt = fnreformatDecimal(woTotVatAmt, seperator);
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);

                            finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amount, seperator) + fnformatDecimalValue(amtG, seperator); //+ fnformatDecimalValue(woTotSpareAmt, seperator);
                            finalVat = fnformatDecimalValue(finalVat, seperator) + fnformatDecimalValue(woTotVatAmt, seperator);
                            //finalDiscount = "0";
                            //totalamt = fnformatDecimalValue(totalamt, seperator) + fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);
                            totalamt = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator) - fnformatDecimalValue(finalDiscount, seperator);

                            finalTotal = fnreformatDecimal(finalTotal, seperator);
                            finalVat = fnreformatDecimal(finalVat, seperator);
                            totalamt = fnreformatDecimal(totalamt, seperator);

                            woTotDiscAmt = fnreformatDecimal(woTotDiscAmt, seperator);
                            finalDiscount = fnreformatDecimal(finalDiscount, seperator);

                            if (rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined || rowalldata[k].IdWODetailseq == null && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                           'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" LineType ="L" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0" REDUCTION_AMOUNT="0" DBT_DIS_PER="0" DEB_STATUS="" />';

                                mechXml = mechXml + ' <insert ID_MECH="' + rowalldata[k].IdMech.toString() + '" Id_Sl_No="' + rowalldata[k].id.toString() + '" ID_WOLAB_SEQ = "" LabourDesc = "' + rowalldata[k].Text.toString() + '"  Wo_Lab_Hrs = "' + fnformatDecimalValue(rowalldata[k].Levert.toString(), seperator) + '" HourlyPr = "' + fnformatDecimalValue(rowalldata[k].Pris.toString(), seperator) + '" WO_Lab_Discount = "' + fnformatDecimalValue(woDiscount) + '"  LineType ="L" />';
                            }
                            else {
                                if (rowalldata[k].DebtType == "OHC") {
                                    mode = "Update";
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                             'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00"  CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0" REDUCTION_AMOUNT="0" DBT_DIS_PER="0" DEB_STATUS=""/>';

                                    mechXml = mechXml + ' <insert ID_MECH="' + rowalldata[k].IdMech.toString() + '" Id_Sl_No="' + rowalldata[k].id.toString() + '" ID_WOLAB_SEQ = "' + rowalldata[k].IdWOLabSeq.toString() + '" LabourDesc = "' + rowalldata[k].Text.toString() + '"  Wo_Lab_Hrs = "' + fnformatDecimalValue(rowalldata[k].Levert.toString(), seperator) + '" HourlyPr = "' + fnformatDecimalValue(rowalldata[k].Pris.toString(), seperator) + '" WO_Lab_Discount = "' + fnformatDecimalValue(woDiscount) + '"  LineType ="L" />';

                                }
                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }
                        else if (rowalldata[k].Diff == "S" && rowalldata[k].DebtType == "OHC") {
                            var idItem = rowalldata[k].IdJob.toString();
                            var idJobDeb = $('#<%=lblCustName.ClientID%>').text();
                            var idVeh = $('#<%=hdnVehId.ClientID%>').val();
                            var idMake = rowalldata[k].Id_Make.toString();
                            var idWh = "1";
                            var disSeq;
                            var jobVatPer = 0.0;
                            var jobVatSeq;
                            var item_avail_qty;
                            var bo_qty;
                            var delivQty;
                            var ordQty;
                            item_avail_qty = fnformatDecimalValue(rowalldata[k].Item_Avail_Qty, seperator);
                            ordQty = fnformatDecimalValue(rowalldata[k].Bestilt, seperator);
                            delivQty = fnformatDecimalValue(rowalldata[k].Levert, seperator);

                            if (rowalldata[k].Jobi_Bo_Qty == "" || rowalldata[k].Jobi_Bo_Qty == undefined || rowalldata[k].Jobi_Bo_Qty == null) {
                                bo_qty = fnformatDecimalValue("0", seperator);
                            } else {
                                bo_qty = fnformatDecimalValue(rowalldata[k].Jobi_Bo_Qty, seperator);
                            }

                            var detSeq = GetVatDis(idItem, idJobDeb, idVeh, idMake, idWh);

                            disSeq = detSeq[0];
                            jobVatPer = fnformatDecimalValue(detSeq[1], seperator);
                            jobVatSeq = detSeq[2];

                            var disPer = rowalldata[k].Rab;
                            if (disPer == "" || disPer == undefined) {
                                disPer = "0.00";
                            }

                            //var amount = 0.0;
                            //amount = fnformatDecimalValue(rowalldata[k].Belop, seperator)
                            //amtS = (fnformatDecimalValue(amtS, seperator) + amount).toFixed(2);
                            //amountS = fnformatDecimalValue(rowalldata[k].Belop, seperator);
                            amountS = fnformatDecimalValue(rowalldata[k].Levert, seperator) * fnformatDecimalValue(rowalldata[k].Pris, seperator);
                            amtS = (fnformatDecimalValue(amtS, seperator) + amountS).toFixed(2);
                            //vatAmount = (fnformatDecimalValue(vatAmount, seperator) + ((fnformatDecimalValue(rowalldata[k].Pris, seperator) * (fnformatDecimalValue(rowalldata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVat))).toFixed(2);
                            vatAmount = (((fnformatDecimalValue(rowalldata[k].Pris, seperator) * (fnformatDecimalValue(rowalldata[k].Levert, seperator) * 0.01 * 100) * 0.01 * spVat))).toFixed(2);
                            amtS = fnreformatDecimal(amtS, seperator);
                            vatAmount = fnreformatDecimal(vatAmount, seperator);

                            woChrgTime = "0";
                            woChrgTimeFp = "0";
                            woTotSpareAmt = amtS;
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            finalVat = fnformatDecimalValue(finalVat, seperator) + fnformatDecimalValue(vatAmount, seperator);
                            finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amountS, seperator);
                            //totalamt = fnformatDecimalValue(totalamt, seperator) + fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);
                            totalamt = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);
                            spareDisc = (fnformatDecimalValue(spareDisc, seperator) + fnformatDecimalValue((amountS * (woDiscount / 100)), seperator)).toFixed(2);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);
                            finalVat = fnreformatDecimal(finalVat, seperator);
                            finalTotal = fnreformatDecimal(finalTotal, seperator);
                            totalamt = fnreformatDecimal(totalamt, seperator);

                            if (rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined || rowalldata[k].IdWODetailseq == null && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + rowalldata[k].Id_Make + '" ID_WAREHOUSE = "' + rowalldata[k].Id_Warehouse + '" ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    fnformatDecimalValue(rowalldata[k].Bestilt, seperator) + '" JOBI_DELIVER_QTY= "' + fnformatDecimalValue(delivQty, seperator) + '" JOBI_BO_QTY ="' + fnformatDecimalValue(bo_qty, seperator) + '" JOBI_DIS_PER ="' + fnformatDecimalValue(disPer, seperator) + '" JOBI_VAT_PER ="' + fnformatDecimalValue(spVat, seperator) + '" ORDER_LINE_TEXT ="" ' +
                                     ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "' + fnformatDecimalValue(rowalldata[k].Sp_Cost_Price, seperator) + '" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="" TD_CALC ="True " ITEM_DESC="' +
                                     rowalldata[k].Text + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                     ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="S" SPARE_DISCOUNT="' + rowalldata[k].SpareDiscount.toString() + '" />';

                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                 'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue(vatAmount, seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue(woTotSpareAmt, seperator) + '" LineType ="S" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                            }
                            else {
                                //idWODetSeq = rowalldata[k].IdWODetailseq;
                                mode = "Update";
                                if (rowalldata[k].IdWOItemseq == "" || rowalldata[k].IdWOItemseq == undefined || rowalldata[k].IdWOItemseq == null && rowalldata[k].DebtType == "OHC") {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + rowalldata[k].Id_Make + '" ID_WAREHOUSE = "' + rowalldata[k].Id_Warehouse + '" ID_WODET_SEQ_JOB="0"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    fnformatDecimalValue(rowalldata[k].Bestilt, seperator) + '" JOBI_DELIVER_QTY= "' + fnformatDecimalValue(delivQty, seperator) + '" JOBI_BO_QTY ="' + fnformatDecimalValue(bo_qty, seperator) + '" JOBI_DIS_PER ="' + fnformatDecimalValue(disPer, seperator) + '" JOBI_VAT_PER ="' + fnformatDecimalValue(spVat, seperator) + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="0" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "' + fnformatDecimalValue(rowalldata[k].Sp_Cost_Price, seperator) + '" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="" TD_CALC ="True " ITEM_DESC="' +
                                    rowalldata[k].Text + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="S" SPARE_DISCOUNT="' + rowalldata[k].SpareDiscount.toString() + '" />';
                                }
                                else {
                                    if (rowalldata[k].DebtType == "OHC") {
                                        spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + rowalldata[k].Id_Make + '" ID_WAREHOUSE = "' + rowalldata[k].Id_Warehouse + '" ID_WODET_SEQ_JOB="' + rowalldata[k].IdWODetailseq + '"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                         fnformatDecimalValue(rowalldata[k].Bestilt, seperator) + '" JOBI_DELIVER_QTY= "' + fnformatDecimalValue(rowalldata[k].Levert, seperator) + '" JOBI_BO_QTY ="' + fnformatDecimalValue(bo_qty, seperator) + '" JOBI_DIS_PER ="' + fnformatDecimalValue(disPer, seperator) + '" JOBI_VAT_PER ="' + fnformatDecimalValue(spVat, seperator) + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="' + rowalldata[k].IdWOItemseq + '" ' +
                                        ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "' + fnformatDecimalValue(rowalldata[k].Sp_Cost_Price, seperator) + '" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="" TD_CALC ="True " ITEM_DESC="' +
                                        rowalldata[k].Text + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                        ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="S" SPARE_DISCOUNT="' + rowalldata[k].SpareDiscount.toString() + '" />';
                                    }
                                }

                                if (rowalldata[k].DebtType == "OHC") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue(vatAmount, seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue(woTotSpareAmt, seperator) + '" LineType ="S" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0" REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                                }
                            }

                            jobIdXml = "<root>" + jobIdXml + "</root>";

                            var spDebRab;
                            if (rowalldata[k].Rab != undefined && rowalldata[k].Rab != "" && rowalldata[k].DebtType == "OHC") {
                                spDebRab = fnformatDecimalValue(rowalldata[k].Rab.toString(), seperator);
                            } else { spDebRab = "0"; }

                            discXml = discXml + '<insert ID_DEBTOR ="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_ITEM = "' + rowalldata[k].IdJob + '" ID_MAKE = "' + rowalldata[k].Id_Make + '" ID_WAREHOUSE = "' + rowalldata[k].Id_Warehouse + '" DBT_VAT_AMOUNT = "' +
                                 fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" DBT_DIS_AMT="' + fnformatDecimalValue($('#<%=txtDisc.ClientID%>').val().toString(), seperator) + '" JOB_VAT_PER="' + jobVatPer + '" JOB_VAT_SEQ="' + jobVatSeq + '" JOB_DIS_SEQ="' + disSeq + '" JOB_DIS_PER="' + spDebRab + '" />';
                        }
                        else if (((rowalldata[k].Diff == "T" && rowalldata[k].IdWOLabSeq == "") || (rowalldata[k].IdJob == "" && rowalldata[k].Text != "" && rowalldata[k].Levert == "" && rowalldata[k].IdWOLabSeq == "" && rowalldata[k].Pris == "")) && rowalldata[k].DebtType == "OHC" && rowalldata[k].Diff != "RAOR" && rowalldata[k].Diff != "RBOR") {
                            var idItem = rowalldata[k].IdJob.toString();
                            var idJobDeb = $('#<%=lblCustName.ClientID%>').text();
                            var idVeh = $('#<%=hdnVehId.ClientID%>').val();
                            var idMake = "";//rowalldata[k].Id_Make.toString();
                            var idWh = "1";
                            var disSeq;
                            var jobVatPer = 0.0;
                            var jobVatSeq;

                            var detSeq = GetVatDis(idItem, idJobDeb, idVeh, idMake, idWh);

                            disSeq = detSeq[0];
                            jobVatPer = fnformatDecimalValue(detSeq[1], seperator);
                            jobVatSeq = detSeq[2];

                            var disPer = rowalldata[k].Rab;
                            if (disPer == "") {
                                disPer = "0.00";
                            }

                            var idwarehouse = rowalldata[k].Id_Warehouse;
                            if (idwarehouse == undefined || idwarehouse == "" || idwarehouse == "0") {
                                idwarehouse = 1;//check this
                            }

                            woChrgTime = "0";
                            woChrgTimeFp = "0";
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);

                            if (rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ' +
                                ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.0" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0" />';

                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val().toString(), seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                 'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue($('#<%=txtVat.ClientID%>').val().toString(), seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" LineType ="T"  CUST_TYPE="OHC"  WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                            }
                            else {
                                //idWODetSeq = rowalldata[k].IdWODetailseq;
                                mode = "Update";
                                if (rowalldata[k].IdWOItemseq == "" || rowalldata[k].IdWOItemseq == undefined || rowalldata[k].IdWOItemseq == "0" && rowalldata[k].DebtType == "OHC") {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_WODET_SEQ_JOB="0"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="0" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.00" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                    "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0" />';
                                }
                                else {
                                    if (rowalldata[k].DebtType == "OHC") {
                                        spareXml = spareXml + '<insert ID_ITEM_JOB ="' + rowalldata[k].IdJob + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_WODET_SEQ_JOB="' + rowalldata[k].IdWODetailseq + '"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                        0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="' + rowalldata[k].IdWOItemseq + '" ' +
                                        ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.00" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                        "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                        ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0"  />';
                                    }
                                }
                                if (rowalldata[k].DebtType == "OHC") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val().toString(), seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                            'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue($('#<%=txtVat.ClientID%>').val().toString(), seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" LineType ="T"  CUST_TYPE="OHC"  WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                                }


                            }

                            jobIdXml = "<root>" + jobIdXml + "</root>";

                            discXml = discXml + '<insert ID_DEBTOR ="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_ITEM = "' + rowalldata[k].IdJob + '" ID_MAKE = "" ID_WAREHOUSE = "' + idwarehouse + '" DBT_VAT_AMOUNT = "' +
                                 fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" DBT_DIS_AMT="' + fnformatDecimalValue($('#<%=txtDisc.ClientID%>').val().toString(), seperator) + '" JOB_VAT_PER="' + jobVatPer + '" JOB_VAT_SEQ="' + jobVatSeq + '" JOB_DIS_SEQ="' + disSeq + '" JOB_DIS_PER="0" />';
                        }//Labour to TextLine
                        else if (rowalldata[k].Diff == "T" && rowalldata[k].Text != "" && rowalldata[k].Levert == "" && rowalldata[k].IdWOLabSeq != "" && rowalldata[k].DebtType == "OHC") {
                            woHourleyPrice = rowalldata[k].Pris;

                            if (woHourleyPrice == "") {
                                woHourleyPrice = "0";
                            }

                            if (rowalldata[k].Levert == "") {
                                woChrgTime = "0";
                                woChrgTimeFp = "0";
                            } else {
                                woChrgTime = rowalldata[k].Levert;
                                woChrgTimeFp = rowalldata[k].Levert;
                            }

                            var amount = 0.0;
                            //amount = fnformatDecimalValue(rowalldata[k].Belop, seperator);
                            amount = fnformatDecimalValue(rowalldata[k].Levert, seperator) * fnformatDecimalValue(rowalldata[k].Pris, seperator);
                            amtL = (fnformatDecimalValue(amtL, seperator) + amount).toFixed(2);

                            var GM = fnformatDecimalValue($('#<%=txtGM.ClientID%>').val(), seperator);
                            if (rowalldata[k].ForeignJob != "FJ") {
                                amtG = ((fnformatDecimalValue(amount, seperator) * fnformatDecimalValue(GM, seperator)) / 100).toFixed(2);
                                TotalGM = fnformatDecimalValue(TotalGM, seperator) + fnformatDecimalValue(amtG, seperator);
                            }

                            if (rowalldata[k].Belop == undefined) {
                                woTotLabAmt = "";
                            } else {
                                woTotLabAmt = fnreformatDecimal(amtL, seperator);
                            }

                            //Discount Per Line
                            labDisc = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue((amount * (woDiscount / 100)), seperator)).toFixed(2);
                            gmDisc = (fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue((amtG * (woDiscount / 100)), seperator)).toFixed(2);

                            discPerJob = fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator);

                            woTotDiscAmt = discPerJob;
                            finalDiscount = discPerJob;

                            woTotSpareAmt = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmt = fnreformatDecimal(TotalGM, seperator);
                            //hpVatAmt = (amtL * (hpVat / 100)).toFixed(2);
                            //gmVatAmt = (TotalGM * (gmVat / 100)).toFixed(2);
                            hpVatAmt = (amount * (hpVat / 100)).toFixed(2);
                            gmVatAmt = (amtG * (gmVat / 100)).toFixed(2);

                            woTotVatAmt = fnformatDecimalValue(hpVatAmt, seperator) + fnformatDecimalValue(gmVatAmt, seperator);
                            woTotVatAmt = fnreformatDecimal(woTotVatAmt, seperator);
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);

                            finalTotal = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(amount, seperator) + fnformatDecimalValue(amtG, seperator); //+ fnformatDecimalValue(woTotSpareAmt, seperator);
                            finalVat = fnformatDecimalValue(finalVat, seperator) + fnformatDecimalValue(woTotVatAmt, seperator);
                            //finalDiscount = "0";
                            //totalamt = fnformatDecimalValue(totalamt, seperator) + fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);
                            totalamt = fnformatDecimalValue(finalTotal, seperator) + fnformatDecimalValue(finalVat, seperator);

                            finalTotal = fnreformatDecimal(finalTotal, seperator);
                            finalVat = fnreformatDecimal(finalVat, seperator);
                            totalamt = fnreformatDecimal(totalamt, seperator);

                            if (rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined || rowalldata[k].IdWODetailseq == null && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" LineType ="L" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';

                                mechXml = mechXml + ' <insert ID_MECH="' + rowalldata[k].IdMech.toString() + '" Id_Sl_No="' + rowalldata[k].id.toString() + '" ID_WOLAB_SEQ = "" LabourDesc = "' + rowalldata[k].Text.toString() + '"  Wo_Lab_Hrs = "' + fnformatDecimalValue(rowalldata[k].Levert.toString(), seperator) + '" HourlyPr = "' + fnformatDecimalValue(rowalldata[k].Pris.toString(), seperator) + '" WO_Lab_Discount = "' + fnformatDecimalValue(woDiscount) + '"  LineType ="L" />';
                            }
                            else {
                                mode = "Update";
                                if (rowalldata[k].DebtType == "OHC") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                                }
                                mechXml = mechXml + ' <insert ID_MECH="' + rowalldata[k].IdMech.toString() + '" Id_Sl_No="' + rowalldata[k].id.toString() + '" ID_WOLAB_SEQ = "' + rowalldata[k].IdWOLabSeq.toString() + '" LabourDesc = "' + rowalldata[k].Text.toString() + '"  Wo_Lab_Hrs = "' + fnformatDecimalValue(rowalldata[k].Levert.toString(), seperator) + '" HourlyPr = "' + fnformatDecimalValue(rowalldata[k].Pris.toString(), seperator) + '" WO_Lab_Discount = "' + fnformatDecimalValue(woDiscount) + '"  LineType ="LT" />';
                            }

                            //TextLine
                            var idItem = ""; //rowalldata[k].IdJob.toString();
                            var idJobDeb = $('#<%=lblCustName.ClientID%>').text();
                            var idVeh = $('#<%=hdnVehId.ClientID%>').val();
                            var idMake = "";//rowalldata[k].Id_Make.toString();
                            var idWh = "1";
                            var disSeq;
                            var jobVatPer = 0.0;
                            var jobVatSeq;

                            var detSeq = GetVatDis(idItem, idJobDeb, idVeh, idMake, idWh);

                            disSeq = detSeq[0];
                            jobVatPer = fnformatDecimalValue(detSeq[1], seperator);
                            jobVatSeq = detSeq[2];

                            var disPer = rowalldata[k].Rab;
                            if (disPer == "") {
                                disPer = "0.00";
                            }

                            var idwarehouse = rowalldata[k].Id_Warehouse;
                            if (idwarehouse == undefined || idwarehouse == "" || idwarehouse == "0") {
                                idwarehouse = 1;//check this
                            }

                            woChrgTime = "0";
                            woChrgTimeFp = "0";
                            woTotLabAmtFp = fnreformatDecimal(amtL, seperator);
                            woTotSpareAmtFp = fnreformatDecimal(woTotSpareAmt, seperator);
                            woTotGmAmtFp = fnreformatDecimal(TotalGM, seperator);
                            woTotVatAmtFp = fnreformatDecimal(finalVat, seperator);

                            if (rowalldata[k].IdWODetailseq == "" || rowalldata[k].IdWODetailseq == undefined && rowalldata[k].DebtType == "OHC") {
                                mode = "Add";
                                spareXml = spareXml + '<insert ID_ITEM_JOB ="' + idItem + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ' +
                                ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.0" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0"  />';

                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val().toString(), seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                 'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue($('#<%=txtVat.ClientID%>').val().toString(), seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" LineType ="T" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0"  />';
                            }
                            else {
                                //idWODetSeq = rowalldata[k].IdWODetailseq;
                                mode = "Update";
                                if (rowalldata[k].IdWOItemseq == "" || rowalldata[k].IdWOItemseq == undefined || rowalldata[k].IdWOItemseq == "0" && rowalldata[k].DebtType == "OHC") {
                                    spareXml = spareXml + '<insert ID_ITEM_JOB ="' + idItem + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_WODET_SEQ_JOB="' + rowalldata[k].IdWODetailseq + '"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                    0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="0" ' +
                                    ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.00" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                    "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                    ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T"  SPARE_DISCOUNT="0"  />';
                                }
                                else {
                                    if (rowalldata[k].DebtType == "OHC") {

                                        spareXml = spareXml + '<insert ID_ITEM_JOB ="' + idItem + '" ID_MAKE_JOB = "' + "" + '" ID_WAREHOUSE = "' + idwarehouse + '" ID_WODET_SEQ_JOB="' + rowalldata[k].IdWODetailseq + '"  ID_ITEM_CATG_JOB = "" JOBI_ORDER_QTY = "' +
                                        0.00 + '" JOBI_DELIVER_QTY= "' + 0.00 + '" JOBI_BO_QTY ="0.00" JOBI_DIS_PER ="' + 0.00 + '" JOBI_VAT_PER ="' + spVat + '" ORDER_LINE_TEXT ="" ID_WOITEM_SEQ="' + rowalldata[k].IdWOItemseq + '" ' +
                                        ' JOBI_SELL_PRICE ="' + fnformatDecimalValue(rowalldata[k].Pris, seperator) + '" JOBI_COST_PRICE = "0.00" ID_CUST_WO = "' + $('#<%=lblCustName.ClientID%>').text() + '" TEXT ="' + rowalldata[k].Text + '" TD_CALC ="True " ITEM_DESC="' +
                                        "" + '" PICKINGLIST_PREV_PRINTED ="False" DELIVERYNOTE_PREV_PRINTED ="False" PREV_PICKED ="0" SPARE_TYPE="ORD" FLG_FORCE_VAT ="False " ' +
                                        ' FLG_EDIT_SP="False" EXPORT_TYPE="" Id_Sl_No="' + rowalldata[k].id.toString() + '" LineType ="T" SPARE_DISCOUNT="0"   />';
                                    }
                                }
                                if (rowalldata[k].DebtType == "OHC") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue($('#<%=txtTotal.ClientID%>').val().toString(), seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue($('#<%=txtVat.ClientID%>').val().toString(), seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="0.00" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" LineType ="T" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" />';
                                }
                            }

                            //jobIdXml = "<root>" + jobIdXml + "</root>";

                            discXml = discXml + '<insert ID_DEBTOR ="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_ITEM = "' + idItem + '" ID_MAKE = "" ID_WAREHOUSE = "' + idwarehouse + '" DBT_VAT_AMOUNT = "' +
                                     fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" DBT_DIS_AMT="' + fnformatDecimalValue($('#<%=txtDisc.ClientID%>').val().toString(), seperator) + '" JOB_VAT_PER="' + jobVatPer + '" JOB_VAT_SEQ="' + jobVatSeq + '" JOB_DIS_SEQ="' + disSeq + '" JOB_DIS_PER="0" />';

                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }
                        else if (rowalldata[k].IdWODetailseq != "" && rowalldata[k].IdWODetailseq != undefined && rowalldata[k].IdWODetailseq != null && rowalldata[k].Flag == "0" && rowalldata[k].DebtType == "OHC") {
                            woChrgTime = "0";
                            woChrgTimeFp = "0";
                            woTotLabAmtFp = "0";
                            woTotSpareAmtFp = "0";
                            woTotGmAmtFp = "0";
                            woTotVatAmtFp = "0";
                            mode = "Update";
                            if (rowalldata[k].DebtType == "OHC") {
                                jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="100.00" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                   'PWO_FIXED_VATPER = "1.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "" REDUCTION_PER="0" REDUCTION_BEFORE_OR="0" REDUCTION_AFTER_OR="0"  REDUCTION_AMOUNT="0" DBT_DIS_PER="0" DEB_STATUS="" />';
                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }

                        if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {

                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;

                                if (idJobId == idJob && Debitor == $('#<%=hdnInsCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL"

                                }
                            }

                            //var delarr = new Array()
                            //delarr = fetchDelJobDet(idWONO, idWOPrefix)


                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "INSC" && rowalldata[k].DebtType == "OHC") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var debitorDisc = "";
                            var custLabDisc = "0";
                            var custSpareDisc = "0";
                            var custGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtInsDiscount.ClientID%>').val(), seperator) != "0") {
                                debitorDisc = fnformatDecimalValue($('#<%=txtInsDiscount.ClientID%>').val(), seperator);
                            } else {
                                debitorDisc = "0";
                            }

                            custLabDisc = fnformatDecimalValue($('#<%=hdnInsLabDisc.ClientID%>').val(), seperator);
                            custSpareDisc = fnformatDecimalValue($('#<%=hdnInsSpareDisc.ClientID%>').val(), seperator);
                            custGenDisc = fnformatDecimalValue($('#<%=hdnInsGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue(custLabDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custLabDisc = custGenDisc
                            }

                            if (fnformatDecimalValue(custSpareDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custSpareDisc = custGenDisc
                            }

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {
                                ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                if (status == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            if ($('#<%=chkInsMoveVat.ClientID%>').is(':checked') == false) {
                                if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                    var balPerc;
                                    var insDebPerc;
                                    desc = "Reduction After Own Risk"  //rowalldata[k].Text.toString()

                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
						'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'

                                    balPerc = 100 - ordHeadCustDbtPer; // fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                    //insDebPerc = 100 - redPerc;
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';
                                }
                                else {
                                    var balPerc;
                                    var insDebPerc;
                                    if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                        jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '"  DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                    } else {
                                        jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                          'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                    }

                                    balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                    //insDebPerc = 100 - redPerc;
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                       'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '"  />';
                                }
                            }
                                //Owner pay vat
                            else {
                                if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                    var balPerc;
                                    var insDebPerc;
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '"  DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(finalVat, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />';

                                    balPerc = 100 - ordHeadCustDbtPer;
                                    // fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                    //insDebPerc = 100 - redPerc;
                                    jobIdXml = jobIdXml +
                                           '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(finalTotal, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="0.00" PWO_GM_PER="0.00" PWO_GM_VATPER="0.00" PWO_LBR_VATPER="0.00" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';
                                }
                                else {
                                    var balPerc;
                                    var insDebPerc;
                                    balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)

                                    if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                        jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '"  DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(finalVat, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />';

                                    } else {
                                        jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '"  DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(finalVat, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                        'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />';
                                    }

                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(finalTotal, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="0.00" PWO_GM_PER="0.00" PWO_GM_VATPER="0.00" PWO_LBR_VATPER="0.00" PWO_SPR_DISCPER="0.00"  ' +
                                        'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '"  CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';
                                }

                                woOwnPayVat = 1;
                                woOwnCrCust = $('#<%=lblCustName.ClientID%>').text();
                                woOwnRiskCust = $('#<%=hdnInsCustId.ClientID%>').val();
                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                            // }

                        }


                        if (($('#<%=hdnIntCustId.ClientID%>').val() != "") && ($('#<%=hdnClaimCustId.ClientID%>').val() == "")) {
                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;

                                if (idJobId == idJob && Debitor == $('#<%=hdnIntCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL"

                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "INTC") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var debitorDisc = "";
                            var custLabDisc = "0";
                            var custSpareDisc = "0";
                            var custGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtIntDiscount.ClientID%>').val(), seperator) != "0") {
                                debitorDisc = fnformatDecimalValue($('#<%=txtIntDiscount.ClientID%>').val(), seperator);

                            } else {
                                debitorDisc = "0";//[Check]                               
                            }

                            custLabDisc = fnformatDecimalValue($('#<%=hdnIntLabDisc.ClientID%>').val(), seperator);
                            custSpareDisc = fnformatDecimalValue($('#<%=hdnIntSpareDisc.ClientID%>').val(), seperator);
                            custGenDisc = fnformatDecimalValue($('#<%=hdnIntGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue(custLabDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custLabDisc = custGenDisc
                            }

                            if (fnformatDecimalValue(custSpareDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custSpareDisc = custGenDisc
                            }

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            if ($('#<%=hdnIntCustId.ClientID%>').val() != "") {
                                if ($('#<%=txtIntSplit.ClientID%>').val() == "" || $('#<%=txtIntSplit.ClientID%>').val() == "0") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                                else if ($('#<%=txtIntSplit.ClientID%>').val() == "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                }
                                else if (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) < "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue(100, seperator) - fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator);
                                    ordHeadCustDbtPer = fnformatDecimalValue(ordHeadCustDbtPer, seperator);
                                }

                                if (status == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            var orderheadCustAmt = (ordHeadCustDbtPer * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var ordHeadCustVatAmt = (ordHeadCustDbtPer * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            var intCustAmt = (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var intCustVatAmt = (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);

                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnIntCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(intCustAmt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
						'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(intCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INTC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                  'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                jobIdXml = jobIdXml +
                                '<insert ID_DETAIL="' + $('#<%=hdnIntCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(intCustAmt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                   'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(intCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INTC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }

                        if (($('#<%=hdnClaimCustId.ClientID%>').val() != "") && ($('#<%=hdnIntCustId.ClientID%>').val() == "")) {

                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;

                                if (idJobId == idJob && Debitor == $('#<%=hdnClaimCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL"

                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "CLA") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var debitorDisc = "";
                            var custLabDisc = "0";
                            var custSpareDisc = "0";
                            var custGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtClaimDiscount.ClientID%>').val(), seperator) != "0") {
                                debitorDisc = fnformatDecimalValue($('#<%=txtClaimDiscount.ClientID%>').val(), seperator);
                            } else {
                                debitorDisc = "0";//[Check]
                            }

                            custLabDisc = fnformatDecimalValue($('#<%=hdnClaLabDisc.ClientID%>').val(), seperator);
                            custSpareDisc = fnformatDecimalValue($('#<%=hdnClaSpareDisc.ClientID%>').val(), seperator);
                            custGenDisc = fnformatDecimalValue($('#<%=hdnClaGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue(custLabDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custLabDisc = custGenDisc
                            }

                            if (fnformatDecimalValue(custSpareDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custSpareDisc = custGenDisc
                            }

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            if ($('#<%=hdnClaimCustId.ClientID%>').val() != "") {
                                if ($('#<%=txtClaimSplit.ClientID%>').val() == "" || $('#<%=txtClaimSplit.ClientID%>').val() == "0") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                                else if ($('#<%=txtClaimSplit.ClientID%>').val() == "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                }
                                else if (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) < "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue(100, seperator) - fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator);
                                    ordHeadCustDbtPer = fnformatDecimalValue(ordHeadCustDbtPer, seperator);
                                }

                                if (status == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            var orderheadCustAmt = (ordHeadCustDbtPer * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var ordHeadCustVatAmt = (ordHeadCustDbtPer * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            var claCustAmt = (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var claCustVatAmt = (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);

                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnClaimCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(claCustAmt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
							'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(claCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="CLA"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '"  CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '"  />';
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                  'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                jobIdXml = jobIdXml +
                                '<insert ID_DETAIL="' + $('#<%=hdnClaimCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(claCustAmt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                   'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(claCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="CLA" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + status + '" />';

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }


                        if (($('#<%=hdnClaimCustId.ClientID%>').val() != "" && $('#<%=hdnIntCustId.ClientID%>').val() != "")) {
                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var claStatus = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            //var status = "";
                            //var miscStatus = "";
                            //var delarr = new Array()
                            //delarr = fetchDelJobDet(idWONO, idWOPrefix);

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;
                                if (idJobId == idJob && Debitor == $('#<%=hdnIntCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL";
                                }
                                if (idJobId == idJob && Debitor == $('#<%=hdnClaimCustId.ClientID%>').val() && Debitor != "") {
                                    claStatus = "DEL";
                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "CLA") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var intDebitorDisc = "";
                            var custIntLabDisc = "0";
                            var custIntSpareDisc = "0";
                            var custIntGenDisc = "0";

                            var claDebitorDisc = "";
                            var custClaLabDisc = "0";
                            var custClaSpareDisc = "0";
                            var custClaGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtIntDiscount.ClientID%>').val(), seperator) != "0") {
                                intDebitorDisc = fnformatDecimalValue($('#<%=txtIntDiscount.ClientID%>').val(), seperator);
                            } else {
                                intDebitorDisc = "0";//[Check]                                
                            }

                            custIntLabDisc = fnformatDecimalValue($('#<%=hdnIntLabDisc.ClientID%>').val(), seperator);
                            custIntSpareDisc = fnformatDecimalValue($('#<%=hdnIntSpareDisc.ClientID%>').val(), seperator);
                            custIntGenDisc = fnformatDecimalValue($('#<%=hdnIntGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue($('#<%=txtClaimDiscount.ClientID%>').val(), seperator) != "0") {
                                claDebitorDisc = fnformatDecimalValue($('#<%=txtClaimDiscount.ClientID%>').val(), seperator);
                            } else {
                                claDebitorDisc = "0";//[Check]
                            }

                            custClaLabDisc = fnformatDecimalValue($('#<%=hdnClaLabDisc.ClientID%>').val(), seperator);
                            custClaSpareDisc = fnformatDecimalValue($('#<%=hdnClaSpareDisc.ClientID%>').val(), seperator);
                            custClaGenDisc = fnformatDecimalValue($('#<%=hdnClaGenDisc.ClientID%>').val(), seperator);

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);

                            if ($('#<%=hdnClaimCustId.ClientID%>').val() != "" && $('#<%=hdnIntCustId.ClientID%>').val() != "") {
                                if (($('#<%=txtClaimSplit.ClientID%>').val() == "" || $('#<%=txtClaimSplit.ClientID%>').val() == "0") && ($('#<%=hdnIntCustId.ClientID%>').val() == "" || $('#<%=hdnIntCustId.ClientID%>').val() == "0")) {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                                else if (($('#<%=txtClaimSplit.ClientID%>').val() == "100") || ($('#<%=hdnIntCustId.ClientID%>').val() == "100")) {
                                    ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                }
                                else if ((fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) < "100") || (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) < "100")) {
                                    ordHeadCustDbtPer = fnformatDecimalValue(100, seperator) - fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) - fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator);
                                    ordHeadCustDbtPer = fnformatDecimalValue(ordHeadCustDbtPer, seperator);
                                }
                            }

                            if (ordHeadCustDbtPer < 0) {
                                var mess = GetMultiMessage('0116', GetMultiMessage('0338', '', ''), '');  //"Disc Percentage cannot be negative";
                                alert(mess);
                                return false;
                            }
                            else if (ordHeadCustDbtPer > 100) {
                                var mess = GetMultiMessage('0116', GetMultiMessage('0338', '', ''), '');  //"Disc Percentage cannot be greater than 100";
                                alert(mess);
                                return false;
                            }
                            var intCustPer = fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator);
                            var claCustPer = fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator);

                            var orderheadCustAmt = (ordHeadCustDbtPer * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var ordHeadCustVatAmt = (ordHeadCustDbtPer * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            var claCustAmt = (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var claCustVatAmt = (fnformatDecimalValue($('#<%=txtClaimSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);
                            var intCustAmt = (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(totalamt, seperator) * 0.01).toFixed(2);
                            var intCustVatAmt = (fnformatDecimalValue($('#<%=txtIntSplit.ClientID%>').val(), seperator) * fnformatDecimalValue(finalVat, seperator) * 0.01).toFixed(2);

                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                if (status == "DEL") {
                                    ordHeadCustDbtPer = ordHeadCustDbtPer + intCustPer;
                                    intCustPer = fnformatDecimalValue("0", seperator);
                                }

                                if (claStatus == "DEL") {
                                    ordHeadCustDbtPer = ordHeadCustDbtPer + claCustPer;
                                    claCustPer = fnformatDecimalValue("0", seperator);
                                }
                                jobIdXml = jobIdXml +
                                       '<insert ID_DETAIL="' + $('#<%=hdnIntCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(intCustAmt, seperator) + '" DBT_PER="' + intCustPer + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
								'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(intCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INTC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + intDebitorDisc + '" CUST_DISC_GENERAL="' + custIntGenDisc + '" CUST_DISC_LABOUR="' + custIntLabDisc + '" CUST_DISC_SPARES="' + custIntSpareDisc + '" DEB_STATUS="' + status + '" />'

				       + '<insert ID_DETAIL="' + $('#<%=hdnClaimCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(claCustAmt, seperator) + '" DBT_PER="' + claCustPer + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
								'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(claCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="CLA"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + claDebitorDisc + '" CUST_DISC_GENERAL="' + custClaGenDisc + '" CUST_DISC_LABOUR="' + custClaLabDisc + '" CUST_DISC_SPARES="' + custClaSpareDisc + '" DEB_STATUS="' + claStatus + '" />'
                                ;
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (status == "DEL") {
                                    ordHeadCustDbtPer = ordHeadCustDbtPer + intCustPer;
                                    intCustPer = fnformatDecimalValue("0", seperator);
                                }

                                if (claStatus == "DEL") {
                                    ordHeadCustDbtPer = ordHeadCustDbtPer + claCustPer;
                                    claCustPer = fnformatDecimalValue("0", seperator);
                                }
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="' + fnformatDecimalValue(orderheadCustAmt, seperator) + '" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                  'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(ordHeadCustVatAmt, seperator) + '" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnIntCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(intCustAmt, seperator) + '" DBT_PER="' + intCustPer + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(intCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INTC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + intDebitorDisc + '" CUST_DISC_GENERAL="' + custIntGenDisc + '" CUST_DISC_LABOUR="' + custIntLabDisc + '" CUST_DISC_SPARES="' + custIntSpareDisc + '" DEB_STATUS="' + status + '" />'

                                       + '<insert ID_DETAIL="' + $('#<%=hdnClaimCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(claCustAmt, seperator) + '" DBT_PER="' + claCustPer + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(claCustVatAmt, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="CLA"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + claDebitorDisc + '" CUST_DISC_GENERAL="' + custClaGenDisc + '" CUST_DISC_LABOUR="' + custClaLabDisc + '" CUST_DISC_SPARES="' + custClaSpareDisc + '" DEB_STATUS="' + claStatus + '" />'
                                ;

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }


                        if (($('#<%=hdnMiscCustId.ClientID%>').val() != "")) {
                            if (rowalldata[k].Flag == "1") {
                                var miscStatus = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;

                                if (idJobId == idJob && Debitor == $('#<%=hdnMiscCustId.ClientID%>').val() && Debitor != "") {
                                    miscStatus = "DEL";
                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "MISC" && rowalldata[k].DebtType == "OHC") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var debitorDisc = "";
                            var custLabDisc = "0";
                            var custSpareDisc = "0";
                            var custGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtMiscDiscount.ClientID%>').val(), seperator) != "0") {
                                debitorDisc = fnformatDecimalValue($('#<%=txtMiscDiscount.ClientID%>').val(), seperator);
                            } else {
                                debitorDisc = "0";
                            }

                            custLabDisc = fnformatDecimalValue($('#<%=hdnMiscLabDisc.ClientID%>').val(), seperator);
                            custSpareDisc = fnformatDecimalValue($('#<%=hdnMiscSpareDisc.ClientID%>').val(), seperator);
                            custGenDisc = fnformatDecimalValue($('#<%=hdnMiscGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue(custLabDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custLabDisc = custGenDisc
                            }

                            if (fnformatDecimalValue(custSpareDisc, seperator) == 0 && fnformatDecimalValue(custGenDisc, seperator) > 0) {
                                custSpareDisc = custGenDisc
                            }

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);

                            var miscOwnRiskAmt = 0;

                            if ($('#<%=chkMiscMoveOwnRisk.ClientID%>').is(':checked')) {
                                miscOwnRiskAmt = woOwnRiskAmt;
                            } else {
                                miscOwnRiskAmt = 0;
                            }


                            if ($('#<%=hdnMiscCustId.ClientID%>').val() != "") {
                                if ($('#<%=txtMiscSplit.ClientID%>').val() == "" || $('#<%=txtMiscSplit.ClientID%>').val() == "0") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                                else if ($('#<%=txtMiscSplit.ClientID%>').val() == "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                }
                                else if (fnformatDecimalValue($('#<%=txtMiscSplit.ClientID%>').val(), seperator) > "0" && fnformatDecimalValue($('#<%=txtMiscSplit.ClientID%>').val(), seperator) < "100") {
                                    ordHeadCustDbtPer = fnformatDecimalValue(100, seperator) - fnformatDecimalValue($('#<%=txtMiscSplit.ClientID%>').val(), seperator);
                                    ordHeadCustDbtPer = fnformatDecimalValue(ordHeadCustDbtPer, seperator);
                                }
                                if (miscStatus == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                             'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + miscStatus + '" />';
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                  'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS="" />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                jobIdXml = jobIdXml +
                                '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                   'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + debitorDisc + '" CUST_DISC_GENERAL="' + custGenDisc + '" CUST_DISC_LABOUR="' + custLabDisc + '" CUST_DISC_SPARES="' + custSpareDisc + '" DEB_STATUS="' + miscStatus + '" />';

                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }

                        //Insurance and Miscellaneous Customer
                        if (($('#<%=hdnMiscCustId.ClientID%>').val() != "" && $('#<%=hdnInsCustId.ClientID%>').val() != "")) {
                            if (rowalldata[k].Flag == "1") {
                                var status = "";
                                var miscStatus = "";
                                var delarr = new Array()
                                delarr = fetchDelJobDet(idWONO, idWOPrefix);
                            }

                            //var status = "";
                            //var miscStatus = "";
                            //var delarr = new Array()
                            //delarr = fetchDelJobDet(idWONO, idWOPrefix);

                            var array = delarr;//[{ idDebitor: "18014", jobId: 2 }];
                            var length = array.length;
                            for (var i = 0; i < length; i++) {
                                var obj = array[i];
                                var idJobId = obj.idJobId;
                                var Debitor = obj.Debitor;
                                if (idJobId == idJob && Debitor == $('#<%=hdnInsCustId.ClientID%>').val() && Debitor != "") {
                                    status = "DEL";
                                }
                                if (idJobId == idJob && Debitor == $('#<%=hdnMiscCustId.ClientID%>').val() && Debitor != "") {
                                    miscStatus = "DEL";

                                }
                            }

                            if (rowalldata[k].JobId == "1" && (rowalldata[k].Diff == "RAOR" || rowalldata[k].Diff == "RBOR")) {
                                if (rowalldata[k].DebtType != "MISC" && rowalldata[k].DebtType == "OHC") {
                                    redPerc = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                                    redAmt = fnformatDecimalValue(rowalldata[k].Belop.toString(), seperator);
                                }

                                if (rowalldata[k].Diff == "RAOR") {
                                    redBefOR = "0";
                                    redAftrOR = "1";
                                } else if (rowalldata[k].Diff == "RBOR") {
                                    redBefOR = "1";
                                    redAftrOR = "0";
                                } else {
                                    redBefOR = "0";
                                    redAftrOR = "0";
                                }
                            }

                            var miscOwnRiskAmt = 0;

                            if ($('#<%=chkMiscMoveOwnRisk.ClientID%>').is(':checked')) {
                                miscOwnRiskAmt = woOwnRiskAmt;
                            } else {
                                miscOwnRiskAmt = 0;
                            }

                            var insDebitorDisc = "";
                            var custInsLabDisc = "0";
                            var custInsSpareDisc = "0";
                            var custInsGenDisc = "0";

                            var miscDebitorDisc = "";
                            var custMiscLabDisc = "0";
                            var custMiscSpareDisc = "0";
                            var custMiscGenDisc = "0";

                            if (fnformatDecimalValue($('#<%=txtInsDiscount.ClientID%>').val(), seperator) != "0") {
                                insDebitorDisc = fnformatDecimalValue($('#<%=txtInsDiscount.ClientID%>').val(), seperator);
                            } else {
                                insDebitorDisc = "0"; //[Check]                                
                            }

                            custInsLabDisc = fnformatDecimalValue($('#<%=hdnInsLabDisc.ClientID%>').val(), seperator);
                            custInsSpareDisc = fnformatDecimalValue($('#<%=hdnInsSpareDisc.ClientID%>').val(), seperator);
                            custInsGenDisc = fnformatDecimalValue($('#<%=hdnInsGenDisc.ClientID%>').val(), seperator);

                            if (fnformatDecimalValue($('#<%=txtMiscDiscount.ClientID%>').val(), seperator) != "0") {
                                miscDebitorDisc = fnformatDecimalValue($('#<%=txtMiscDiscount.ClientID%>').val(), seperator);
                            } else {
                                miscDebitorDisc = "0"; //[Check]
                            }
                            custMiscLabDisc = fnformatDecimalValue($('#<%=hdnMiscLabDisc.ClientID%>').val(), seperator);
                            custMiscSpareDisc = fnformatDecimalValue($('#<%=hdnMiscSpareDisc.ClientID%>').val(), seperator);
                            custMiscGenDisc = fnformatDecimalValue($('#<%=hdnMiscGenDisc.ClientID%>').val(), seperator);

                            var ordHeadCustDbtPer = fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator);
                            if ($('#<%=hdnInsCustId.ClientID%>').val() != "") {
                                ordHeadCustDbtPer = fnformatDecimalValue("0", seperator);
                                if (status == "DEL") {
                                    ordHeadCustDbtPer = fnformatDecimalValue("100", seperator);
                                }
                            }

                            if (rowalldata[k].Ford >= "0" && rowalldata[k].Levert == "" && rowalldata[k].Bestilt == "" && rowalldata[k].Pris == "" && rowalldata[k].Diff == "OR") {
                                var balPerc;
                                var insDebPerc;
                                balPerc = 100 - ordHeadCustDbtPer;
                                if (status == "DEL") {
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + insDebitorDisc + '" CUST_DISC_GENERAL="' + custInsGenDisc + '" CUST_DISC_LABOUR="' + custInsLabDisc + '" CUST_DISC_SPARES="' + custInsSpareDisc + '"  DEB_STATUS="' + status + '" />' +
                                '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="0.00" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + miscDebitorDisc + '" CUST_DISC_GENERAL="' + custMiscGenDisc + '" CUST_DISC_LABOUR="' + custMiscLabDisc + '" CUST_DISC_SPARES="' + custMiscSpareDisc + '" DEB_STATUS="' + miscStatus + '"/>';
                                } else {
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                    'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + insDebitorDisc + '" CUST_DISC_GENERAL="' + custInsGenDisc + '" CUST_DISC_LABOUR="' + custInsLabDisc + '" CUST_DISC_SPARES="' + custInsSpareDisc + '"  DEB_STATUS="" />' +
                                    '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                    'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + miscDebitorDisc + '" CUST_DISC_GENERAL="' + custMiscGenDisc + '" CUST_DISC_LABOUR="' + custMiscLabDisc + '" CUST_DISC_SPARES="' + custMiscSpareDisc + '" DEB_STATUS=""/>';
                                }
                            }
                            else {
                                var balPerc;
                                var insDebPerc;
                                if (rowalldata[k].Id_Deb_Seq.toString() == "") {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                    'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                } else {
                                    jobIdXml = '<insert ID_DETAIL="' + $('#<%=lblCustName.ClientID%>').text() + '" ID_DBT_SEQ="' + rowalldata[k].Id_Deb_Seq.toString() + '" DEBITOR_TYPE="C" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="1.00" PWO_GM_PER="1.00" PWO_GM_VATPER="1.00" PWO_LBR_VATPER="1.00" PWO_SPR_DISCPER="1.00"  ' +
                                  'PWO_FIXED_VATPER = "1.00" ORG_PER="0.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="0.00" LABOUR_DISCOUNT="0.00" GM_AMOUNT="0.00" GM_DISCOUNT="0.00" OWNRISK_AMOUNT="0.00" SP_VAT="0.00" SP_AMT_DEB="0.00" CUST_TYPE="OHC" WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="0" CUST_DISC_GENERAL="0" CUST_DISC_LABOUR="0" CUST_DISC_SPARES="0" DEB_STATUS=""  />'
                                }

                                balPerc = 100 - ordHeadCustDbtPer;// fnformatDecimalValue(rowalldata[k].Ford.toString(), seperator)
                                //insDebPerc = 100 - redPerc;
                                if (status == "DEL") {
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                    'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + insDebitorDisc + '" CUST_DISC_GENERAL="' + custInsGenDisc + '" CUST_DISC_LABOUR="' + custInsLabDisc + '" CUST_DISC_SPARES="' + custInsSpareDisc + '" DEB_STATUS="' + status + '" />' +
                                    '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="0.00" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                    'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + miscDebitorDisc + '" CUST_DISC_GENERAL="' + custMiscGenDisc + '" CUST_DISC_LABOUR="' + custMiscLabDisc + '" CUST_DISC_SPARES="' + custMiscSpareDisc + '" DEB_STATUS="' + miscStatus + '" />';
                                }
                                else {
                                    jobIdXml = jobIdXml +
                                    '<insert ID_DETAIL="' + $('#<%=hdnInsCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="' + fnformatDecimalValue(totalamt, seperator) + '" DBT_PER="' + balPerc + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                    'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="' + fnformatDecimalValue(finalVat, seperator) + '" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="0.00" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="INSC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + insDebitorDisc + '" CUST_DISC_GENERAL="' + custInsGenDisc + '" CUST_DISC_LABOUR="' + custInsLabDisc + '" CUST_DISC_SPARES="' + custInsSpareDisc + '" DEB_STATUS="" />' +
                                    '<insert ID_DETAIL="' + $('#<%=hdnMiscCustId.ClientID%>').val() + '" ID_DBT_SEQ="1" DEBITOR_TYPE="D" DBT_AMT="0.00" DBT_PER="' + ordHeadCustDbtPer + '" PWO_VAT_PERCENTAGE="25.00" PWO_GM_PER="' + fnformatDecimalValue($('#<%=txtGM.ClientID%>').val().toString(), seperator) + '" PWO_GM_VATPER="' + gmVat + '" PWO_LBR_VATPER="' + hpVat + '" PWO_SPR_DISCPER="0.00"  ' +
                                    'PWO_FIXED_VATPER = "0.00" ORG_PER="100.00" JOB_VAT_AMOUNT="0.00" LABOUR_AMOUNT="' + amtL + '" LABOUR_DISCOUNT="' + labDisc + '" GM_AMOUNT="' + TotalGM + '" GM_DISCOUNT="' + gmDisc + '" OWNRISK_AMOUNT="' + fnformatDecimalValue(miscOwnRiskAmt, seperator) + '" SP_VAT="' + fnformatDecimalValue($('#<%=txtSPVat.ClientID%>').val().toString(), seperator) + '" SP_AMT_DEB="' + fnformatDecimalValue($('#<%=txtTSP.ClientID%>').val().toString(), seperator) + '" CUST_TYPE="MISC"  WO_OWN_RISK_DESC = "' + desc + '" REDUCTION_PER="' + redPerc + '" REDUCTION_BEFORE_OR="' + redBefOR + '" REDUCTION_AFTER_OR="' + redAftrOR + '" REDUCTION_AMOUNT="' + redAmt + '" DBT_DIS_PER="' + miscDebitorDisc + '" CUST_DISC_GENERAL="' + custMiscGenDisc + '" CUST_DISC_LABOUR="' + custMiscLabDisc + '" CUST_DISC_SPARES="' + custMiscSpareDisc + '" DEB_STATUS="" />';
                                }
                            }
                            jobIdXml = "<root>" + jobIdXml + "</root>";
                        }
                    }
                }//end of looping through for each job

                discPerJob = (fnformatDecimalValue(labDisc, seperator) + fnformatDecimalValue(gmDisc, seperator) + fnformatDecimalValue(spareDisc, seperator)).toFixed(2);
                discPerJob = fnreformatDecimal(discPerJob, seperator);
                woTotDiscAmt = discPerJob;
                finalDiscount = discPerJob;

                mechXml = "<root>" + mechXml + "</root>";
                spareXml = "<root>" + spareXml + "</root>";
                discXml = "<root>" + discXml + "</root>";

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOJobDetails.aspx/DeleteSaveJobDet",
                    data: "{jobIdXmls: '" + jobIdXml + "',spareXmls:'" + spareXml + "',discXmls:'" + discXml + "',mechXmls:'" + mechXml + "',idWODetSeq:'" + idWODetSeq + "',idWONO:'" + idWONO + "',idWOPrefix:'" + idWOPrefix + "',idRpgCatgWO:'" + idRpgCatgWO +
                    "',idRpgCodeWO:'" + idRpgCodeWO + "',idRepCodeWO:'" + idRepCodeWO + "',idWorkCodeWO:'" + idWorkCodeWO + "',woFixedPrice:'" + woFixedPrice + "',idJobPcdWO:'" + idJobPcdWO + "',woPlannedTime:'" + woPlannedTime +
                    "',woHourleyPrice:'" + woHourleyPrice + "',woClkTime:'" + woClkTime + "',woChrgTime:'" + woChrgTime + "',flgChrgStdTime:'" + flgChrgStdTime + "',woStdTime:'" + woStdTime + "',statReq:'" + stationReq +
                    "',woJobTxt:'" + woJobTxt + "',woOwnRiskAmt:'" + woOwnRiskAmt + "',woTotLabAmt:'" + woTotLabAmt + "',woTotSpareAmt:'" + woTotSpareAmt + "',woTotGmAmt:'" + woTotGmAmt + "',woTotVatAmt:'" + finalVat + "',woTotDiscAmt:'" + woTotDiscAmt +
                    "',jobStatus:'" + jobStatus + "',woOwnPayVat:'" + woOwnPayVat + "',idDefectNoteSeq:'" + idDefectNoteSeq + "',totalamt:'" + totalamt + "',idMechComp:'" + idMechComp + "',woOwnRiskCust:'" + woOwnRiskCust +
                    "',woOwnCrCust:'" + woOwnCrCust + "',idSerCallNo:'" + idSerCallNo + "',woGmPer:'" + woGmPer + "',woGmVatPer:'" + woGmVatPer + "',woLbrVatPer:'" + woLbrVatPer + "',woInclVat:'" + woInclVat + "',woDiscount:'" + woDiscount +
                    "',subrepCodeWO:'" + subrepCodeWO + "',ownriskvat:'" + ownriskvat + "',flgSprsts:'" + flgSprsts + "',salesman:'" + salesman + "',flgVatFree:'" + flgVatFree + "',costPrice:'" + costPrice + "',finalTotal:'" + finalTotal + "',finalVat:'" + finalVat +
                    "',finalDiscount:'" + finalDiscount + "',woChrgTimeFp:'" + woChrgTimeFp + "',woTotLabAmtFp:'" + woTotLabAmtFp + "',woTotSpareAmtFp:'" + woTotSpareAmtFp + "',woTotGmAmtFp:'" + woTotGmAmtFp + "',woTotVatAmtFp:'" + woTotVatAmtFp + "',woTotDiscAmtFp:'" + woTotDiscAmtFp +
                    "',woIntNote:'" + woIntNote + "',idJob:'" + idJob + "',flgawaitingSp:'" + flgawaitingSp + "',mode:'" + mode + "',idMech:'" + idMech + "',woOwnRiskDesc:'" + woOwnRiskDesc + "',woOwnRiskSlNo:'" + woOwnRiskSlNo + "'}",
                    dataType: "json",
                    async: false,//Very important
                    success: function (Result) {
                        if (jobNumber != "") {
                            jobNumber = jobNumber + ',' + idJob;
                        }
                        else {
                            jobNumber = idJob;
                        }
                        $('#<%=RTlblError.ClientID%>').text = "";
                        if (mode == "Add") {
                            if (Result.d[0] == "INSFLG") {
                                $('#<%=RTlblError.ClientID%>').text(jobNumber + 'Saved Successfully.');
                            }
                        } else if (mode == "Update") {
                            if (Result.d[0] == "UPDFLG") {
                                $('#<%=RTlblError.ClientID%>').text(jobNumber + 'Saved Successfully.');
                            }
                        }
                    }
                });

            }// end of jobs

            loadWOJobGrid(idWONO, idWOPrefix);

            var rowalldata = $('#jobgrid').jqGrid('getGridParam', 'data');
            var frowid = rowalldata.length;
            for (var i = 0; i < rowalldata.length; i++) {
                if (rowalldata[i].DebtType == "OHC") {
                    frowid = rowalldata[i].id;
                }
            }
            jQuery("#jobgrid").jqGrid("nextCell", parseInt(frowid), 0, true);
            document.getElementById((parseInt(frowid)) + '_IdJob').select();
        }



    function loadSparesGrid(Spname, CustId, VehId, makeArr, suppArr, locArr) {
        var makeIdXml = "";
        var makeIdXmls;
        var suppIdXml = "";
        var suppIdXmls;

        var locXml = "";
        var locXmls;
        for (var k = 0; k < makeArr.length; k++) {
            if (makeArr[k] != null)
            {
                makeIdXml = makeIdXml + "<MAKE><ID_MAKE>" + makeArr[k] + "</ID_MAKE></MAKE>";
            }
            else {
                makeIdXml = makeIdXml + "<MAKE><ID_MAKE></ID_MAKE></MAKE>";
            }
        }

        for (n = 0; n < suppArr.length; n++) {
            if (suppArr[n] != null)
            {
                suppIdXml = suppIdXml + "<SUPPLIER><ID_SUPPLIER>" + suppArr[n] + "</ID_SUPPLIER></SUPPLIER>";
            }
            else
            {
                suppIdXml = suppIdXml + "<SUPPLIER><ID_SUPPLIER></ID_SUPPLIER></SUPPLIER>";
            }
        }

        for (var i = 0; i < locArr.length; i++) {
            if (locArr[i] != null)
            {
                locXml = locXml + "<LOCATION><LOC>" + locArr[i] + "</LOC></LOCATION>";
            }
            else {
                locXml = locXml + "<LOCATION><LOC></LOC></LOCATION>";
            }
        }
        makeIdXmls = "<ROOT>" + makeIdXml + "</ROOT>";
        suppIdXmls = "<ROOT>" + suppIdXml + "</ROOT>";
        locXmls = "<ROOT>" + locXml + "</ROOT>";

        var grid = $("#dgdSpareGrid");
        var pageSize = 20;
        var orderdata;
        var arrayId = new Array();
        grid.jqGrid({
            datatype: "local",
            data: orderdata,
            colNames: ['ID_ITEM', 'ITEM_DESC', 'STOCK_QTY', 'MAKE', 'LOCATION', 'RAB', 'REPLACEMENTSPARE', 'ITEMPRICE', 'PRICEINCLVAT', 'ID_WAREHOUSE', 'ORDER_QTY'],
            colModel: [
                     { name: 'Id_Item', index: 'Id_Item', width: 60, sorttype: "string" },
                     { name: 'Item_Sp_Desc', index: 'Item_Sp_Desc', width: 120, sorttype: "string" },
                     { name: 'Sp_StockQty', index: 'Sp_StockQty', width: 160, sorttype: "string" },
                     { name: 'Id_Make', index: 'Id_Make', width: 100, sorttype: "string" },
                     { name: 'Sp_Location', index: 'Sp_Location', width: 160, sorttype: "string" },
                     { name: 'Jobi_Dis_Per', index: 'Jobi_Dis_Per', width: 60, sorttype: "string" },
                     { name: 'Id_Sp_Replace', index: 'Id_Sp_Replace', width: 60, sorttype: "string" },
                     { name: 'Sp_Item_Price', index: 'Sp_Item_Price', width: 60, sorttype: "string" },
                     { name: 'PriceInclVat', index: 'PriceInclVat', width: 60, sorttype: "string" },
                     { name: 'Id_Wh_Item', index: 'Id_Wh_Item', width: 60, sorttype: "string", hidden: true },
                     { name: 'Jobi_Order_Qty', index: 'Jobi_Order_Qty', width: 60, sorttype: "string", hidden: true, },
            ],
            multiselect: false,
            pager: jQuery('#pagerSpareGrid'),
            rowNum: 20,//can fetch from webconfig
            rowList: 5,
            viewrecords: true,
            height: "50%",
            async: false, //Very important,
            subGrid: false
           <%-- ,
            onCellSelect: function (rowId, iCol, content, event) {
                // debugger;
                var jobGrdId = $('#<%=hdnGridId.ClientID%>').val();
                var rowdata = jQuery("#jobgrid").jqGrid('getRowData', jobGrdId);
                var idWodetSeq = rowdata.IdWODetailseq;
                var idDebSeq = rowdata.Id_Deb_Seq;
                var jobNo = rowdata.JobId;
                var rowdataGrd;
                rowdataGrd = jQuery("#dgdSpareGrid").jqGrid('getRowData', rowId);
                loadSelectedSparesGrid(rowdataGrd);
            }--%>
            ,
            ondblClickRow: function (rowid) {
                var rowdataGrd;
                rowdataGrd = jQuery("#dgdSpareGrid").jqGrid('getRowData', rowid);

                var rowSelSPdata = $('#jobgrid').jqGrid('getGridParam', 'data');
                for (var k = 0; k < rowSelSPdata.length; k++) {
                    if (rowSelSPdata[k].IdJob == rowdataGrd.Id_Item && rowSelSPdata[k].Id_Make == rowdataGrd.Id_Make && rowSelSPdata[k].Id_Warehouse == rowdataGrd.Id_Wh_Item) {
                        alert(rowdataGrd.Id_Item + " already exists in job grid.");
                    }
                }
                loadSelectedSparesGrid(rowdataGrd);
            }

        });

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "frmWOJobDetails.aspx/GetSpareslist",
            data: "{'spName':'" + Spname + "',idCustomer:'" + CustId + "',vehId:'" + VehId + "',make:'" + makeIdXmls + "',supplier:'" + suppIdXmls + "',location:'" + locXmls + "',FlgstockItem:'" + $('#<%=chkSPStkQty.ClientID%>').is(':checked') + "',FlgStockItemStatus:'" + $('#<%=chkFlgStockItem.ClientID%>').is(':checked') + "',FlgNonStockItemStatus:'" + $('#<%=chkFlgNonStockItem.ClientID%>').is(':checked') + "'}",
                dataType: "json",
                async: false,//Very important
                success: function (data) {
                    jQuery("#dgdSpareGrid").jqGrid('clearGridData');
                    for (i = 0; i < data.d.length; i++) {
                        orderdata = data;
                        jQuery("#dgdSpareGrid").jqGrid('addRowData', i + 1, orderdata.d[i]);
                    }
                }
            });
            jQuery("#dgdSpareGrid").setGridParam({ rowNum: 2000 }).trigger("reloadGrid");
            $("#dgdSpareGrid").jqGrid("hideCol", "subGrid");
        }


        function loadSelectedSparesGrid(rowdataGrd) {
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var grid = $("#dgdSelectedSPGrid");
            var pageSize = 20;
            var orderdata;
            var ctr = 0;
            var id;
            var orderQty = 0;
            grid.jqGrid({
                datatype: "local",
                data: orderdata,
                colNames: ['ID_ITEM', 'ITEM_DESC', 'STOCK_QTY', 'ORDERED QTY', 'MAKE', 'LOCATION', 'RAB', 'ReplacementSpare', 'ITEMPRICE', 'PRICEINCLVAT', 'Id_WareHouse'],
                colModel: [
                         { name: 'Id_Item', index: 'Id_Item', width: 60, sorttype: "string" },
                         { name: 'Item_Sp_Desc', index: 'Item_Sp_Desc', width: 120, sorttype: "string" },
                         { name: 'Sp_StockQty', index: 'Sp_StockQty', width: 160, sorttype: "string" },
                         { name: 'Jobi_Order_Qty', index: 'Jobi_Order_Qty', width: 160, sorttype: "string" },
                         { name: 'Id_Make', index: 'Id_Make', width: 100, sorttype: "string" },
                         { name: 'Sp_Location', index: 'Sp_Location', width: 160, sorttype: "string" },
                         { name: 'Jobi_Dis_Per', index: 'Jobi_Dis_Per', width: 60, sorttype: "string" },
                         { name: 'Id_Sp_Replace', index: 'Id_Sp_Replace', width: 60, sorttype: "string" },
                         { name: 'Sp_Item_Price', index: 'Sp_Item_Price', width: 60, sorttype: "string" },
                         { name: 'PriceInclVat', index: 'PriceInclVat', width: 60, sorttype: "string" },
                         { name: 'Id_Wh_Item', index: 'Id_Wh_Item', width: 60, sorttype: "string", hidden: true }
                ],
                multiselect: false,
                pager: jQuery('#pagerSelectedSPGrid'),
                rowNum: 5,//can fetch from webconfig
                rowList: 5,
                viewrecords: true,
                height: "50%",
                async: false, //Very important,
                subGrid: false
                //,
                //onCellSelect: function (rowId, iCol, content, event) {
                //    grid.delRowData(rowId);
                //}
            });

            var rowSelSPdata = $('#dgdSelectedSPGrid').jqGrid('getGridParam', 'data');
            rowSelSPdata[rowSelSPdata.length] = rowdataGrd;
            for (var k = 0; k < rowSelSPdata.length; k++) {
                if (rowSelSPdata[k].Id_Item == rowdataGrd.Id_Item && rowSelSPdata[k].Id_Make == rowdataGrd.Id_Make && rowSelSPdata[k].Id_Wh_Item == rowdataGrd.Id_Wh_Item) {
                    ctr = ctr + 1;
                    if (rowSelSPdata[k].id != undefined) {
                        id = rowSelSPdata[k].id;
                    }
                }
                if (ctr > 1) {
                    var ordQty = fnformatDecimalValue(orderQty, seperator).toFixed(2);
                    var defQty = 1;
                    ordQty = (fnformatDecimalValue(ordQty, seperator) + fnformatDecimalValue(defQty, seperator)).toFixed(2);
                    rowSelSPdata[k].Jobi_Order_Qty = fnreformatDecimal(ordQty, seperator);
                    $('#dgdSelectedSPGrid').delRowData(id);
                }
                else {
                    orderQty = rowSelSPdata[k].Jobi_Order_Qty;
                }
            }

            jQuery("#dgdSelectedSPGrid").jqGrid('clearGridData');
            for (var i = 0; i < rowSelSPdata.length; i++) {
                jQuery("#dgdSelectedSPGrid").jqGrid('addRowData', i + 1, rowSelSPdata[i]);
            }
        }

        function arrayInsertAt(destArray, pos, arrayToInsert) {
            var args = [];
            args.push(pos);                           // where to insert
            args.push(0);                             // nothing to remove
            args = args.concat(arrayToInsert);        // add on array to insert
            destArray.splice.apply(destArray, args);  // splice it in
        }

        function loadjobGrid(rowId, jobNo, arrData) {
            //debugger;
            var seperator = '<%= Session("Decimal_Seperator") %>';
            var rowdisdata = $('#jobgrid').jqGrid('getGridParam', 'data');
            for (var j = 0; j < arrData.length; j++) {
                arrayInsertAt(rowdisdata, parseInt(rowId) - 1, arrData[j]);
            }
            jQuery("#jobgrid").jqGrid('clearGridData');
            for (var i = 0; i <= rowdisdata.length; i++) {
                jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowdisdata[i]);
            }

            jQuery("#jobgrid").setGridParam({ rowNum: 1000 }).trigger("reloadGrid");
            //$("#jobGrid").jqGrid("hideCol", "subGrid");
            var rowGrddata = $('#jobgrid').jqGrid('getGridParam', 'data');
            jQuery("#jobgrid").jqGrid('clearGridData');
            for (var i = 0; i < rowGrddata.length; i++) {
                rowGrddata[i].LineNo = rowGrddata[i].id;
                jQuery("#jobgrid").jqGrid('addRowData', i + 1, rowGrddata[i]);
            }

            for (var k = 0; k < rowGrddata.length; k++) {
                if (rowGrddata[k].id != rowId) {
                    if (rowGrddata[k].Jobi_Bo_Qty != undefined) {
                        var boQty = fnformatDecimalValue(rowGrddata[k].Jobi_Bo_Qty, seperator);
                        if (boQty != "0" && rowGrddata[k].Diff == "S") {
                            jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Bestilt", "", {
                                'color': 'rgba(255, 0, 0, 0.8)',
                                'background-image': 'none'
                            });
                        }
                    }
                }

                if (rowGrddata[k].Flag == "1" && (rowGrddata[k].DebtType == "OHC" || rowGrddata[k].DebtType == null || rowGrddata[k].DebtType == undefined)) {
                    //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                    $('#' + rowGrddata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "IdJob", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Text", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Nei", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Ford", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Bestilt", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Levert", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Pris", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Rab", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Belop", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                }                
                else if (rowGrddata[k].Flag == "1" && rowGrddata[k].DebtType == "INSC") {
                    //$('#' + rowdisdata[k].id + ' > td:not(.jqgrid-rownum)').attr('disabled', 'disabled');//disable the jobno row
                    $('#' + rowGrddata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "IdJob", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Text", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Nei", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Ford", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Bestilt", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Levert", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Pris", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Rab", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Belop", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'font-weight': 'normal',
                        'background-image': 'none'
                    });

                } else if (rowGrddata[k].Flag == "0" && rowGrddata[k].DebtType == "INSC") {
                    $('#' + rowGrddata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Belop", "", {
                        'background-color': 'rgba(33, 186, 69, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none',
                        'text-align': 'right'
                    });

                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Pris", "", {
                        'text-align': 'right'
                    });
                }
                else {
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Pris", "", {
                        'text-align': 'right'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "IdJob", "", {
                        'text-align': 'left'
                    });
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Text", "", {
                        'text-align': 'left'
                    });

                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Belop", "", 'ui-state-disabled');
                    jQuery("#jobgrid").jqGrid('setCell', rowGrddata[k].id, "Belop", "", {
                        'background-color': 'rgba(255, 255, 153, 1)',
                        'color': 'rgba(0, 0, 0, 1)',
                        'background-image': 'none',
                        'text-align': 'right'
                    });
                }
                if ((rowGrddata[k].DebtType == "OHC" && rowGrddata[k].Diff == "OR" && rowGrddata[k].Ford != "") || (rowGrddata[k].DebtType == "INSC") || (rowGrddata[k].DebtType == "INTC") || (rowGrddata[k].DebtType == "CLA") || (rowGrddata[k].DebtType == "MISC")) {
                    $('#' + rowGrddata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                 }
                if ((rowGrddata[k].DebtType == "OHC" && rowGrddata[k].Diff == "RAOR" && rowGrddata[k].Ford != "") || (rowGrddata[k].DebtType == "INSC" && rowGrddata[k].Diff == "RAOR") || (rowGrddata[k].DebtType == "INTC" && rowGrddata[k].Diff == "RAOR") || (rowGrddata[k].DebtType == "CLA" && rowGrddata[k].Diff == "RAOR") || (rowGrddata[k].DebtType == "MISC" && rowGrddata[k].Diff == "RAOR")) {
                     $('#' + rowGrddata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                 }
                if ((rowGrddata[k].DebtType == "OHC" && rowGrddata[k].Diff == "RBOR" && rowGrddata[k].Ford != "") || (rowGrddata[k].DebtType == "INSC" && rowGrddata[k].Diff == "RBOR") || (rowGrddata[k].DebtType == "INTC" && rowGrddata[k].Diff == "RBOR") || (rowGrddata[k].DebtType == "CLA" && rowGrddata[k].Diff == "RBOR") || (rowGrddata[k].DebtType == "MISC" && rowGrddata[k].Diff == "RBOR")) {
                     $('#' + rowGrddata[k].id, $("#jobgrid")).addClass("ui-state-disabled");
                 }
                if (rowGrddata[k].Diff == "S") {
                    var cm = jQuery("#jobgrid").jqGrid('getColProp', 'Bestilt');
                    cm.editable = true;
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Ford", "", 'not-editable-cell');
                    //jQuery("#jobgrid").jqGrid("nextCell", parseInt(id), 4, true);
                    //document.getElementById((parseInt(id)) + '_Bestilt').select();
                }
                else if (rowGrddata[k].Diff == "T") {
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "IdJob", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Bestilt", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Levert", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Pris", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Rab", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Ford", "", 'not-editable-cell');
                }
                else if (rowGrddata[k].Diff == "L") {
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Bestilt", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "IdJob", "", 'not-editable-cell');
                    jQuery("#jobgrid").setCell(rowGrddata[k].id, "Ford", "", 'not-editable-cell');
                }
            }
            recalculateTotals();

            if ($('#<%=chkSaveSprSettings.ClientID%>').is(':checked')) {
                SaveSPRSettings();
            }
            saveJobDet(1);
        }

        function SaveSPRSettings() {
            var mkArr = new Array();
            var supArr = new Array();
            var locArr = new Array();
            var makelist = $('#<%=selMake.ClientID%>').dropdown('get value');
            if (makelist.length > 1) {
                for (var i = 0; i < makelist.length -1; i++) {
                    mkArr[i] = makelist[i];
                }
            }

            var suppList = $('#<%=selSupp.ClientID%>').dropdown('get value');
            if (suppList.length > 1) {
                for (var k = 0; k < suppList.length-1; k++) {
                    supArr[k] = suppList[k];
                }
            }

            var locList = $('#<%=selLoc.ClientID%>').dropdown('get value');
            if (locList.length > 1) {
                for (var k = 0; k < locList.length - 1; k++) {
                    locArr[k] = locList[k];
                }
            }

            var makeIdXml = "";
            var makeIdXmls;

            var suppIdXml = "";
            var suppIdXmls;

            var locXml = "";
            var locXmls;


            for (var k = 0; k < mkArr.length; k++) {
                makeIdXml = makeIdXml + "<MAKE><ID_MAKE>" + mkArr[k] + "</ID_MAKE></MAKE>";
            }

            for (n = 0; n < supArr.length; n++) {
                    suppIdXml = suppIdXml + "<SUPPLIER><ID_SUPPLIER>" + supArr[n] + "</ID_SUPPLIER></SUPPLIER>";
            }

            for (var i = 0; i < locArr.length; i++) {
                locXml = locXml + "<LOCATION><LOC>" + locArr[i] + "</LOC></LOCATION>";
            }

            makeIdXmls = "<ROOT>" + makeIdXml + "</ROOT>";
            suppIdXmls = "<ROOT>" + suppIdXml + "</ROOT>";
            locXmls = "<ROOT>" + locXml + "</ROOT>";

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "frmWOJobDetails.aspx/SaveSparesSett",
                data: "{'makeIdXml':'" + makeIdXmls + "',suppIdXmls:'" + suppIdXmls + "',locXmls:'" + locXmls + "',FlgstockItem:'" + $('#<%=chkSPStkQty.ClientID%>').is(':checked') + "',FlgStockItemStatus:'" + $('#<%=chkFlgStockItem.ClientID%>').is(':checked') + "',FlgNonStockItemStatus:'" + $('#<%=chkFlgNonStockItem.ClientID%>').is(':checked') + "'}",
                dataType: "json",
                async: false,//Very important
                success: function (data) {
                    // debugger;
                    //alert("Saved successfully");
                }
            });
        }

        function RINVRecs() {
            var row;
            var idWoNo;
            var idWoPr;
            var idJob;
            var jobStatus;
            var debitorIdxml;
            var debitorIdxmls = "";

            <%-- $('#jobgrid input:checkbox').attr("checked", function () {
                if (this.checked) {
                    row = $(this).closest('td').parent()[0].sectionRowIndex;
                    idJob = $('#jobgrid tr ')[row].cells[10].innerText.toString();
                    jobStatus = $('#jobgrid tr ')[row].cells[24].innerText.toString();
                    idWoNo = '<%= Session("WONO")%>';
                    idWoPr = '<%= Session("WOPR")%>';
                    debitorIdxml = '<JOBNO WOORDNO ="' + idWoNo.toString() + '" WOJOBNO = "' + idJob.toString() + '" WOPREFIX ="' + idWoPr.toString() + '" > </JOBNO>';
                    debitorIdxmls += debitorIdxml;

                }
            });--%>

            var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
            for (var k = 0; k < rowspareData.length; k++) {
                if (rowspareData[k].DebtType == "OHC") {
                    if (rowspareData[k].Flag == "1")
                    {
                        idJob = rowspareData[k].JobId;
                        jobStatus = rowspareData[k].Job_Status;
                         idWONO = $('#<%=hdnWoNo.ClientID%>')[0].value;
                        idWOPrefix = $('#<%=hdnWoPr.ClientID%>')[0].value;
                        debitorIdxml = '<JOBNO WOORDNO ="' + idWONO + '" WOJOBNO = "' + idJob + '" WOPREFIX ="' + idWOPrefix + '" > </JOBNO>';
                        debitorIdxmls += debitorIdxml;
                    }
                }
            }

            if (debitorIdxmls != "") {
                debitorIdxmls = "<ROOT>" + debitorIdxmls + "</ROOT>";
                var userId = '<%= Session("UserID")%>';
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "frmWOPaydetails.aspx/SetReadyToInv",
                    data: "{'debitorIdxmls':'" + debitorIdxmls + "',userId:'" + userId + "'}",
                    dataType: "json",
                    success: function (data) {
                        //reloadGrid(idWoNo, idWoPr);
                        loadWOJobGrid(idWONO, idWOPrefix);
                        var rowspareData = $('#jobgrid').jqGrid('getGridParam', 'data');
                        for (var k = 0; k < rowspareData.length; k++) {
                            var status = rowspareData[k].Job_Status;
                        }
                        if (status == "RINV") {
                            $('#<%=RTlblError.ClientID%>').text('Job(s) set to ‘Ready to Invoice’.');
                        }
                        else {
                            $('#<%=RTlblError.ClientID%>').text('');
                        }
                    },
                    error: function (result) {
                        alert("Error");
                    }
                });
            }
        }


    </script>
     <asp:HiddenField ID="hdnXmlInv" runat="server" />
    <asp:HiddenField ID="hdnVAMode" runat="server" />
    <asp:HiddenField ID="hdnViewCap" runat="server" Value="View" />
    <asp:HiddenField ID="hdnWoNo" runat="server" />
    <asp:HiddenField ID="hdnWoPr" runat="server" />
    <asp:HiddenField ID="hdnVehId" runat="server" />
    <asp:HiddenField ID="hdnVehGrpDesc" runat="server" />
    <asp:HiddenField ID="hdnDateFormat" Value="<%$ appSettings:DateFormatValidate %>" runat="server" />
    <asp:HiddenField ID="hdnDateFormatLang" Value="<%$ appSettings:DateFormatLang %>" runat="server" />
    <asp:HiddenField ID="hdnConfigZipSave" runat="server" Value="1" />
    <asp:HiddenField ID="hdnNewZip" runat="server" />
    <asp:HiddenField ID="hdnJobId" runat="server" />
    <asp:HiddenField ID="hdnRowId" runat="server" />
    <asp:HiddenField ID="hdnSelect" runat="server" />
    <asp:HiddenField ID="hdnGMVat" runat="server" />
    <asp:HiddenField ID="hdnHPVat" runat="server" />
    <asp:HiddenField ID="hdnSPVat" runat="server" />
    <asp:HiddenField ID="hdnHP" runat="server" />
    <asp:HiddenField ID="hdnIdMake" runat="server" />
    <asp:HiddenField ID="hdnIdItem" runat="server" />
    <asp:HiddenField ID="hdnAvail_Qty" runat="server" />
    <asp:HiddenField ID="hdnOrgJobId" runat="server" />
    <asp:HiddenField ID="hdnDuser" runat="server" />
    <asp:HiddenField ID="hdnGridId" runat="server" />
    <asp:HiddenField ID="hdnSuppId" runat="server" />
    <asp:HiddenField ID="hdnDbtSeq" runat="server" />
    <asp:HiddenField ID="hdnIntDbtSeq" runat="server" />
    <asp:HiddenField ID="hdnClaimDbtSeq" runat="server" />
    <asp:HiddenField ID="hdnInsCustId" runat="server" />
    <asp:HiddenField ID="hdnIntCustId" runat="server" />
    <asp:HiddenField ID="hdnClaimCustId" runat="server" />
    <asp:HiddenField ID="hdnMiscCustId" runat="server" />
    <asp:HiddenField ID="hdnMiscDbtSeq" runat="server" />
    <asp:HiddenField ID="hdnReductionType" runat="server" />
    <asp:HiddenField ID="hdnMainDebtAmt" runat="server" />
    <asp:HiddenField ID="hdnInsDebtAmt" runat="server" />
    <asp:HiddenField ID="hdnIntDeptDebtAmt" runat="server" />
    <asp:HiddenField ID="hdnClaimDebtAmt" runat="server" />
    <asp:HiddenField ID="hdnMiscDebtAmt" runat="server" />
    <asp:HiddenField ID="hdnOwnPayVAT" runat="server" />
    <asp:HiddenField ID="hdnOHCGenDisc" runat="server" />
    <asp:HiddenField ID="hdnOHCLabDisc" runat="server" />
    <asp:HiddenField ID="hdnOHCSpareDisc" runat="server" />
    <asp:HiddenField ID="hdnInsGenDisc" runat="server" />
    <asp:HiddenField ID="hdnInsLabDisc" runat="server" />
    <asp:HiddenField ID="hdnInsSpareDisc" runat="server" />
    <asp:HiddenField ID="hdnIntGenDisc" runat="server" />
    <asp:HiddenField ID="hdnIntLabDisc" runat="server" />
    <asp:HiddenField ID="hdnIntSpareDisc" runat="server" />
    <asp:HiddenField ID="hdnClaGenDisc" runat="server" />
    <asp:HiddenField ID="hdnClaLabDisc" runat="server" />
    <asp:HiddenField ID="hdnClaSpareDisc" runat="server" />
    <asp:HiddenField ID="hdnMiscGenDisc" runat="server" />
    <asp:HiddenField ID="hdnMiscLabDisc" runat="server" />
    <asp:HiddenField ID="hdnMiscSpareDisc" runat="server" />    
    <asp:HiddenField ID="hdnIdDebtor" runat="server" />
    <asp:HiddenField ID="hdnJobNum" runat="server" />
    <asp:HiddenField ID="hdnOrdHeadDebtVatPerc" runat="server" />
    <asp:HiddenField ID="hdnInvoiceType" runat="server" />

    <div class="ui form">
        <div class="inline fields">
            <input type="button" value="Order head" id="btnHead" class="ui btn cTab" data-tab="Head" />
            <input type="button" value="Order details" id="btnOrderDetails" class="ui btn cTab" data-tab="OrderDetails" />
            <input type="button" value="Insurance" id="btnInsurance" class="ui btn cTab" data-tab="Insurance" />
            <input type="button" value="Internal dept." id="btnInternalDepartment" class="ui btn cTab" data-tab="InternalDepartment" />
            <input type="button" value="Claim" id="btnClaim" class="ui btn cTab" data-tab="Claim" />
            <input type="button" value="Misc" id="btnMiscellaneous" class="ui btn cTab" data-tab="Miscellaneous" />
            <input type="button" value="Split" id="btnSplit" class="ui btn cTab" data-tab="Split" />
        </div>
    </div>

    <asp:Label ID="RTlblError" runat="server" CssClass="lblErr"></asp:Label>
    <div class="overlayHide"></div>
    <div id="divJobDetheader" class="ui raised segment signup inactive">
        <div class="twelve fields">
            <asp:Label ID="lblCustomer" runat="server" Text="Kunde:" Width="120px" Style="font-weight: bold"></asp:Label>
            <asp:Label ID="lblCustName" runat="server" Width="180px"></asp:Label>
            <asp:Label ID="Label13" runat="server" Text="" Width="120px"></asp:Label>
            <asp:Label ID="lblRegnNo" runat="server" Text="RegNr." Width="120px" Style="font-weight: bold"></asp:Label>
            <asp:Label ID="lblRegistation" runat="server" Text="KH83796" Width="120px"></asp:Label>
            <asp:Label ID="Label15" runat="server" Text="" Width="120px"></asp:Label>
            <asp:Label ID="lblOrder" runat="server" Text="OrdreNr." Width="120px" Style="font-weight: bold"></asp:Label>
            <asp:Label ID="lblOrderNo" runat="server" Width="120px"></asp:Label>
        </div>
    </div>
    <div id="tabHead" class="tTab">
        <%--########################################## Head ##########################################--%>
        <div class="ui secondary vertical menu" style="width: 100%; background-color: #cce2ff">
            <a class="active item" runat="server" id="aAddrComm" style="background-color: transparent">Order Head Details</a>
            <asp:Label ID="Label6" runat="server" CssClass="lblErr"></asp:Label>
        </div>
        <div class="ui form" style="width: 100%">
            <div class="six fields lbl">
                <div class="field" style="padding-left: 0.55em; width: 147px">
                    <asp:Label ID="lbl_Order" runat="server" Text="Order Series"></asp:Label>
                </div>
                <div class="field" style="width: 200px">
                    <asp:Label ID="RTlbl_OrderNo" runat="server" Width="123px"></asp:Label>
                </div>
                <div class="field" style="padding-left: 1em; width: 147px">
                </div>
                <div class="field" style="width: 200px">
                </div>

            </div>
            <div class="six fields lbl">
                <div class="field" style="padding-left: 0.55em; width: 147px">
                    <asp:Label ID="lblOrdDate" runat="server" Text="Order Date"></asp:Label>
                </div>
                <div class="field" style="width: 200px">
                    <asp:Label ID="RTlblOrderDate" runat="server" Width="93px"></asp:Label>
                </div>
                <div class="field" style="padding-left: 1em; width: 147px">
                    <asp:Label ID="lblType" runat="server" Text="Type"></asp:Label><span class="mand">*</span>
                </div>
                <div class="field" style="width: 200px">
                    <asp:DropDownList ID="ddlType" runat="server" Width="120px" class="dropdowns"></asp:DropDownList>
                </div>
                <div class="field" style="padding-left: 1em; width: 147px">
                    <asp:Label ID="lblStatus" runat="server" Text="Status"></asp:Label><span class="mand">*</span>
                </div>
                <div class="field" style="width: 200px">
                    <asp:DropDownList ID="ddlStatus" runat="server" Width="180px" class="dropdowns"></asp:DropDownList>
                </div>

            </div>
            <div class="six fields lbl">
                <div class="field" style="padding-left: 0.55em; width: 147px">
                    <asp:Label ID="lblDeliveryDate" runat="server" Text="Delivery Date"></asp:Label>
                </div>
                <div class="field" style="width: 200px">
                    <asp:TextBox ID="txtDeliveryDate" runat="server" Width="140px" MaxLength="25" Columns="50"></asp:TextBox>
                </div>
                <div class="field" style="padding-left: 1em; width: 147px">
                    <asp:Label ID="lblDeliveryTime" runat="server" Text="Delivery Time"></asp:Label>
                </div>
                <div class="field" style="width: 200px">
                    <asp:TextBox ID="txtDeliveryTime" runat="server" Columns="50" MaxLength="25" Width="120px"></asp:TextBox>
                </div>
                <div class="field" style="padding-left: 1em; width: 147px">
                    <asp:Label ID="lblFinishDate" runat="server" Text="Finish Date"></asp:Label>
                </div>
                <div class="field" style="width: 200px">
                    <asp:TextBox ID="txtFinishDate" runat="server" Columns="50" MaxLength="25" Width="140px"></asp:TextBox>
                </div>

            </div>
            <div class="six fields lbl">
                <div class="field" style="padding-left: 0.55em; width: 147px">
                    <asp:Label ID="lblAnnotation" runat="server" Text="Annotation"></asp:Label>
                </div>
                <div class="field">
                    <asp:TextBox ID="TxtAnnotation" runat="server" MaxLength="50" TextMode="MultiLine" Height="45px"></asp:TextBox>
                </div>
            </div>
            <div class="six fields lbl">
                <div class="field" style="padding-left: 0.55em; width: 147px">
                    <asp:Label ID="lblDeptAccntNum" runat="server" Text="Department Account Number"></asp:Label>
                </div>
                <div class="field" style="width: 140px">
                    <asp:TextBox ID="txtDeptAccntNum" runat="server" MaxLength="50" Width="140px"></asp:TextBox>
                </div>
            </div>

        </div>

        <div class="ui page grid" style="padding-left: 0%; padding-right: 0%; margin-top: 10px">
            <div class="two column row">
                <div class="column" style="padding-left: 0em; width: 40%">
                    <div class="ui secondary vertical menu" style="width: 100%; background-color: #cce2ff">
                        <a class="active item">
                            <div class="ui form" style="width: 100%">
                                <div class="four fields">
                                    <div class="field" style="width: 70%">Vehicle Details</div>
                                    <div id="VehMoreInfo" class="field" runat="server" style="width: 30%; text-decoration: underline">More Information</div>
                                </div>
                            </div>
                        </a>
                    </div>

                    <div class="ui form" style="width: 90%">
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblVehicle" runat="server" Text="Search vehicle"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <div class="ui action input mini">
                                    <asp:TextBox ID="txtSrchVeh" CssClass="inp" runat="server" Width="330px"></asp:TextBox>
                                </div>
                                <%-- <asp:DropDownList ID="ddlVeh" runat="server" Width="300px"></asp:DropDownList>--%>
                                <asp:ListBox ID="lst_veh" runat="server" Width="289px"></asp:ListBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblRegNo" runat="server" Text="Reg.No"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtRegNo" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblInternalNo" runat="server" Text="Internal No"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtInternalNo" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblVin" runat="server" Text="VIN"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtVIN" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblMake" runat="server" Text="Make"></asp:Label><span class="mand">*</span>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:DropDownList ID="ddlMake" runat="server" class="dropdowns">
                                </asp:DropDownList>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblModel" runat="server" Text="Model"></asp:Label><span class="mand">*</span>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:DropDownList ID="ddlModel" runat="server" class="dropdowns">
                                </asp:DropDownList>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblVehMileage" runat="server" Text="Mileage"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtMileage" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblVehHours" runat="server" Text="Hours"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtHours" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblCostPrice" runat="server" Text="Cost Price" Visible="false"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtCostPrice" runat="server" Visible="false"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblSellPrice" runat="server" Text="Selling Price" Visible="false"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtSellPrice" runat="server" Visible="false"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblVANum" runat="server" Text="VA Number"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtVANum" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:HyperLink ID="lnkDefect" runat="server" NavigateUrl="javascript:openDefect()">Defect Note</asp:HyperLink>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="column" style="width: 50%">
                    <div class="ui secondary vertical menu" style="width: 100%; background-color: #cce2ff">
                        <a class="active item">
                            <div class="ui form" style="width: 100%">
                                <div class="four fields">
                                    <div class="field" style="width: 70%">Customer Details</div>
                                    <div id="CustMoreInfo" class="field" runat="server" style="width: 30%; text-decoration: underline">More Information</div>
                                </div>
                            </div>
                        </a>
                    </div>
                    <div class="ui form" style="width: 100%">
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="Label2" runat="server" Text="Search customer"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <div class="ui action input mini">
                                    <asp:TextBox ID="txtSrchCust" CssClass="inp" runat="server" Width="300px"></asp:TextBox>
                                </div>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblName" runat="server" Text="Name"></asp:Label><span class="mand">*</span>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtName" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblPaymentType" runat="server" Text="Payment Type"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:DropDownList ID="ddlPayType" runat="server" class="dropdowns">
                                </asp:DropDownList>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblPaymentTerms" runat="server" Text="Payment Terms"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:DropDownList ID="ddlPayTerms" runat="server" class="dropdowns">
                                </asp:DropDownList>
                            </div>
                        </div>

                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblCusGroup" runat="server" Text="Group"></asp:Label><span class="mand">*</span>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:DropDownList ID="ddlCusGroup" runat="server" class="dropdowns">
                                </asp:DropDownList>
                            </div>
                        </div>

                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblAddress1" runat="server" Text="Address1"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtAddress1" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblAddress2" runat="server" Text="Adress2"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtAddress2" runat="server"></asp:TextBox>
                            </div>
                        </div>

                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblZipcode" runat="server" Text="ZipCode"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtZipCode" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblState" runat="server" Text="State"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtState" runat="server"></asp:TextBox>
                            </div>
                        </div>
                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblCountry" runat="server" Text="Country"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtCountry" runat="server"></asp:TextBox>
                            </div>
                        </div>

                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblPhHome" runat="server" Text="Phone 1"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtHPhoneNo" runat="server"></asp:TextBox>
                            </div>
                        </div>

                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblPhOff" runat="server" Text="Phone 2"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtOPhoneNo" runat="server"></asp:TextBox>
                            </div>
                        </div>

                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 200px">
                                <asp:Label ID="lblMobNo" runat="server" Text="Mobile Phone"></asp:Label>
                            </div>
                            <div class="field" style="width: 250px">
                                <asp:TextBox ID="txtMobNo" runat="server"></asp:TextBox>
                            </div>
                        </div>

                        <div class="four fields lbl">
                            <div class="field" style="padding-left: 0.55em; width: 50px; text-decoration: underline">
                                <asp:LinkButton ID="lnkEmail" runat="server">E-Mail</asp:LinkButton>
                            </div>
                            <div class="field" style="width: 270px; text-decoration: underline">
                                <asp:LinkButton ID="lnkLog" runat="server">SMS</asp:LinkButton>
                            </div>
                            <div class="field" style="text-decoration: underline">
                                <asp:LinkButton ID="LinkButton1" runat="server">SMS/E-Mail Log</asp:LinkButton>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
   <div class="ui page grid" style="padding-left:0%;padding-right:0%;margin-top:10px"></div>
     <div style="text-align:center">
           <input id="btnSaveOrder" runat="server" class="ui button"  value="Save" type="button" />
     </div>
   
        <%--<a href="../Master/frmCustomerDetail.aspx" id="manual-ajax">second example</a>--%>
    </div>
    <%--########################################## OrderDetails ##########################################--%>

    <div id="tabOrderDetails" class="tTab">
        <table id="jobgrid"></table>
        <div id="pager"></div>
        <div id="divCfInvDetails" class="ui raised segment signup inactive">
            <div class="thirteen fields">
                <asp:Label ID="lblGM" runat="server" Text="Vk.Mat" Width="70px"></asp:Label>
                <asp:Label ID="lblTGM" runat="server" Text="TotalGM" Width="80px"></asp:Label>
                <asp:Label ID="lblTLab" runat="server" Text="TotalLab" Width="80px"></asp:Label>
                <asp:Label ID="lblTSp" runat="server" Text="TotalSpare" Width="80px"></asp:Label>
                <asp:Label ID="lblHPVat" runat="server" Text="HPVat" Width="60px"></asp:Label>
                <asp:Label ID="lblGMVat" runat="server" Text="GMVat" Width="60px"></asp:Label>
                <asp:Label ID="lblSPVat" runat="server" Text="SPVat" Width="60px"></asp:Label>
                <asp:Label ID="Label4" runat="server" Text="" Width="100px"></asp:Label>
                <asp:Label ID="Label1" runat="server" Text="" Width="100px"></asp:Label>
                <asp:Label ID="Label5" runat="server" Text="" Width="100px"></asp:Label>
                <asp:Label ID="lblNetSum" runat="server" Text="Net Sum" Width="120px" Style="text-align: left; margin-left: -56px"></asp:Label>
                <asp:Label ID="lblDisc" runat="server" Text="Discount" Width="120px" Style="text-align: left"></asp:Label>
                <asp:Label ID="lblTotalVat" runat="server" Text="Vat" Width="120px" Style="text-align: left"></asp:Label>
                <asp:Label ID="lblTotal" runat="server" Text="Total Including Vat" Width="120px" Style="text-align: left"></asp:Label>
            </div>
            <div class="thirteen fields">
                <asp:TextBox ID="txtGM" runat="server" Width="70px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtTGM" runat="server" Width="80px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtTLab" runat="server" Width="80px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtTSP" runat="server" Width="80px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtHPVat" runat="server" Width="60px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtGMVat" runat="server" Width="60px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtSPVat" runat="server" Width="60px" Enabled="false"></asp:TextBox>
                <%--<input id="btnPris" runat="server" class="ui button" value="Hent Pris" type="button" />--%>
                <input id="btnView" runat="server" class="ui button" value="View" type="button" onclick="viewDebitorTotals()"/>
                <input id="btnSave" runat="server" class="ui button" value="Save" type="button" onclick="saveJobDet(1)" />
                <input id="btnCancel" runat="server" class="ui button"  value="Cancel" type="button"  />
                <asp:TextBox ID="txtNet" runat="server" Width="120px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtDisc" runat="server" Width="120px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtVat" runat="server" Width="120px" Enabled="false"></asp:TextBox>
                <asp:TextBox ID="txtTotal" runat="server" Width="120px" Enabled="false"></asp:TextBox>
                <input id="btnInvBasis" runat="server" class="ui button"  value="Invoice Basis" type="button" style="background-color: #E0E0E0" onclick ="Invoicebasis()" />
                <input id="btnInvoice" runat="server" class="ui button"  value="Invoice" type="button" style="background-color: #E0E0E0" onclick ="Invoice()" />
                <input id="btnRINV" runat="server" class="ui button"  value="ReadyToInvoice" type="button" style="background-color: #E0E0E0" />

            </div>
        </div>
    </div>
    <asp:Label ID="lbReport" runat="server" />

    <div id="modWashCustomer" class="ui modal">
        <i class="close icon"></i>
        <div class="header">
            Add Job
        </div>
        <div class="content">
            <div class="ui grid">
                <div class="sixteen wide column">
                    <div class="ui form">

                        <div class="inline fields">
                            <div class="four wide field">
                                <label>
                                    <asp:Label ID="lblWorkCode" Text="WorkCode" runat="server"></asp:Label></label>
                            </div>
                            <div class="five wide field">
                                <asp:DropDownList ID="ddlWorkCode" CssClass="dropdowns" runat="server"></asp:DropDownList>
                            </div>
                            <div class="five wide field">
                                <label>
                                    <asp:Label ID="lblRPCode" Text="RepairCode" runat="server"></asp:Label></label>
                            </div>
                            <div class="two wide field">
                                <asp:DropDownList ID="ddlRepairCode" CssClass="dropdowns" runat="server"></asp:DropDownList>
                            </div>
                        </div>
                        <div class="inline fields">
                            <div class="four wide field">
                                <label>
                                    <asp:Label ID="lblJobId" Text="JobId" runat="server"></asp:Label></label>
                            </div>
                            <div class="five wide field">
                                <asp:TextBox ID="txtJobId" runat="server"></asp:TextBox>
                            </div>
                            <div class="five wide field">
                                <label>
                                    <asp:Label ID="Label3" Text="Foreign jobs From 90-99" runat="server"></asp:Label></label>
                            </div>

                        </div>
                        <div class="inline fields">
                            <div class="four wide field">
                                <label>
                                    <asp:Label ID="lblMechanic" Text="Mechanic" runat="server"></asp:Label></label>
                            </div>
                            <div class="five wide field">
                                <asp:DropDownList ID="ddlMechanic" CssClass="dropdowns" runat="server"></asp:DropDownList>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="actions">
            <div class="ui button ok positive">Ok</div>
            <div class="ui button cancel negative">Avbryt</div>
        </div>
    </div>
    <div id="modSpare" class="ui modal" style="width: 1000px; height: 700px; overflow: scroll;">
        <i class="close icon"></i>
        <div class="header">
            Add Spares
        </div>
        <div class="content">
            <div class="ui grid">
                <div class="sixteen wide column">
                    <div class="ui form">
                        <div class="inline fields">
                            <div class="two wide field">
                                <label>
                                    <asp:Label ID="lblSPSearch" Text="Spare Search" runat="server"></asp:Label></label>
                            </div>
                            <div>
                                <%--<asp:TextBox ID="txtSPSearch" runat="server" style="width:200px"></asp:TextBox>--%>
                                <input id="txtSPSearch" type="text" style="width: 200px" />
                            </div>
                            <div class="two wide field">
                                <input type="button" id="btnSearchSpares" runat="server" value="Search" class="ui btn mini" />
                            </div>
                        </div>
                        <div class="inline fields">
                            <!-- Grid--->
                            <table id="dgdSpareGrid"></table>
                            <div id="pagerSpareGrid"></div>
                        </div>
                        <div class="inline fields">
                            <!-- Grid--->
                            <table id="dgdSelectedSPGrid"></table>
                            <div id="pagerSelectedSPGrid"></div>
                        </div>
                        <div class="inline fields">
                            <div class="two wide field">
                                <label>
                                    <asp:Label ID="lblSrchMake" Text="Make" runat="server"></asp:Label></label>
                            </div>
                            <div style="width:180px">
                                <%--<input id="txtSrchMake" type="text" style="width: 200px; border: none" />--%>
                                <select id="selMake" runat="server" name="skills" multiple="true" class="ui fluid search dropdown "></select>
                            </div>                                                      
                        </div>
                        <div class="inline fields">
                            <div class="two wide field">
                                <label>
                                    <asp:Label ID="lblSrchSupplier" Text="Supplier" runat="server"></asp:Label></label>
                            </div>
                            <div style="width:180px">
                                <%--<input id="txtSrchSuppler" type="text" style="width: 200px; border: none" />--%>
                                <select id="selSupp" runat="server" name="skills" multiple="true" class="ui fluid search dropdown "></select>
                            </div>
                        </div>
                        <div class="inline fields">
                            <div class="two wide field">
                                <label>
                                    <asp:Label ID="lblSrchLocation" Text="Location" runat="server"></asp:Label></label>
                            </div>
                            <div style="width:180px">
                                <%--<input id="txtSrchLocation" type="text" style="width: 200px; border: none" />--%>
                                <select id="selLoc" runat="server" name="skills" multiple="true" class="ui fluid search dropdown "></select>
                            </div>
                        </div>
                        <div class="inline fields">
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkSPStkQty" runat="server" Text="Kun varer m/beholdning"  Checked="true" />
                            </div>
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkFlgStockItem" runat="server" Text="Kun varer m/ beh. Kontr." Checked="true"  />
                            </div>
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkFlgNonStockItem" runat="server" Text="Kun varer u/beh. Kontr" Checked="true"  />
                            </div>                         
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkSaveSprSettings" runat="server" Text="Save Spr Settings" />
                            </div>
                        </div>
                        <div class="actions">
                            <div class="ui button ok positive">Ok</div>
                            <div class="ui button cancel negative">Avbryt</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--Labourline popup -->
    <div id="modLabPopup" class="ui modal" style="width: 800px; height: 500px; overflow: scroll;">
        <i class="close icon"></i>
        <div class="header">
            LabourLine
        </div>
        <div class="content">
            <div class="ui grid">
                <div class="sixteen wide column">
                    <div class="ui form">
                        
                        <div class="inline fields">
                            <!-- Grid--->
                            <table id="dgdLabLine"></table>
                            <div id="pagerLabLine"></div>
                        </div>
                      
                        <div class="inline fields">
                             <div class="ten wide field">
                                <asp:TextBox ID="txtLabDesc" runat="server"></asp:TextBox>
                            </div>                                                     
                        </div>
                        <div class="inline fields">
                            <div class="two wide field">
                                <label>
                                    <asp:Label ID="lblMId" Text="MechId" runat="server"></asp:Label></label>
                            </div>
                            <div class="two wide field">
                                 <asp:TextBox ID="txtMId" runat="server"></asp:TextBox>
                            </div>
                            <div class="four wide field">
                                 <label>
                                    <asp:Label ID="LblMName" Text="" runat="server"></asp:Label></label>
                            </div>
                            <div class="two wide field">
                            </div>
                             <div class="two wide field">
                                 <label>
                                    <asp:Label ID="lblLabFord" Text="Ford %" runat="server"></asp:Label></label>
                            </div>
                            <div class="two wide field">
                                <asp:TextBox ID="txtLabFord" runat="server" ReadOnly="true"></asp:TextBox>
                            </div>

                        </div>
                        <div class="inline fields">
                            <div class="two wide field">
                                     <label><asp:Label ID="lblMech" Text="Mekaniker" runat="server"></asp:Label></label>
                            </div>
                            <div class="four wide field">
                                  <asp:DropDownList ID="ddlmechList" CssClass="dropdowns" runat="server"></asp:DropDownList>

                            </div>
                            <div class="four wide field">
                                 <label>
                                    <asp:Label ID="Label17" Text="" runat="server"></asp:Label></label>
                            </div>
                            <div class="two wide field">
                                 <label>
                                    <asp:Label ID="lblLab" Text="Avtalenr" runat="server"></asp:Label></label>
                            </div>
                            <div class="two wide field">
                                <asp:TextBox ID="TextBox1" runat="server"></asp:TextBox>
                            </div>
                        </div>                        
                        <div class="fields">
                             <div class="field">
                                 <div class="ui radio checkbox">                                    
                                    <asp:RadioButton ID="rbClkOut" GroupName="dpStatus" runat="server" Text="Stemplet ut"  />    
                                 </div>
                                 <div class="ui radio checkbox">
                                     <asp:RadioButton ID="rbComp" GroupName="dpStatus" runat="server" Text="Ferdig"  />
                                 </div>
                             </div>                        
                        </div>                        
                        <div class="twelve fields">
                         <asp:Label ID="lblStdTime" runat="server" Text="Fakt.Tid" Width="70px"></asp:Label>
                        <asp:Label ID="Label10" runat="server" Text="" Width="80px"></asp:Label>
                         <asp:Label ID="lblClkTime" runat="server" Text="Brukt tid" Width="80px"></asp:Label>
                            <asp:Label ID="Label11" runat="server" Text="" Width="80px"></asp:Label>
                        <asp:Label ID="lblLabSalesPr" runat="server" Text="Salgsprice" Width="80px"></asp:Label>
                            <asp:Label ID="Label12" runat="server" Text="" Width="80px"></asp:Label>
                        <asp:Label ID="lblLabDiscpercent" runat="server" Text="Rabatt%" Width="80px"></asp:Label>
                            <asp:Label ID="Label14" runat="server" Text="" Width="80px"></asp:Label>
                        <asp:Label ID="lblLabAmt" runat="server" Text="Belop" Width="60px"></asp:Label>
                        <asp:Label ID="lblDiscAmt" runat="server" Text="" Width="60px"></asp:Label>
                        </div>
                        <div class="twelve fields">
                             <asp:TextBox ID="txtStdTime" runat="server" Width="70px"></asp:TextBox>
                            <asp:Label ID="Label16" runat="server" Text="" Width="80px"></asp:Label>
                             <asp:TextBox ID="txtClkTime" runat="server" Width="80px" ReadOnly="true"></asp:TextBox>
                            <asp:Label ID="Label18" runat="server" Text="" Width="80px"></asp:Label>
                            <asp:TextBox ID="txtLabSalesPr" runat="server" Width="80px" ></asp:TextBox>
                            <asp:Label ID="Label19" runat="server" Text="" Width="80px"></asp:Label>
                            <asp:TextBox ID="txtLabDiscPer" runat="server" Width="80px" ></asp:TextBox>
                            <asp:Label ID="Label20" runat="server" Text="" Width="80px"></asp:Label>
                            <asp:TextBox ID="txtLabTotalAmt" runat="server" Width="60px" ReadOnly="true"></asp:TextBox>
                             <asp:TextBox ID="txtDiscAmt" runat="server" Width="60px" Visible="false" ReadOnly="true"></asp:TextBox>
                            
                        </div>
                        
                        <div class="actions">
                            <div class="ui button ok positive">Ok</div>
                            <div class="ui button cancel negative">Avbryt</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div id="modEditTextLine" class="ui modal" style="width: 1000px; height: 700px; overflow: scroll;">
        <i class="close icon"></i>
        <div class="header">
            Edit Text Line
        </div>
        <div class="content">
            <div class="ui grid">
                <div class="sixteen wide column">
                    <div class="ui form">
                        <div class="inline fields">
                            <div class="two wide field">
                                <label>
                                    <asp:Label ID="lblOrdTextLine" Text="Order Text Line" runat="server"></asp:Label>
                                </label>
                            </div>
                            <div>
                                <input id="txtOrdTextLine" type="text" runat="server" style="width: 200px" />
                            </div>                            
                        </div>
                        <div class="inline fields">
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkViewInv" runat="server" Text="Vis pa faktura" />
                            </div>
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkTextToLab" runat="server" Text="Omgjor til arbeidslinje" />
                            </div>
                        </div>
                        <div class="actions">
                            <div class="ui button ok positive">Ok</div>
                            <div class="ui button cancel negative">Avbryt</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="modEditSpareLine" class="ui modal" style="width: 1000px; height: 700px; overflow: scroll;">
        <i class="close icon"></i>
        <div class="header">
            Edit Spare Line
        </div>
        <div class="content">
            <div class="ui grid">
                <div class="sixteen wide column">
                    <div class="ui form">
                        <div class="inline fields">
                            <table id="dgdSpareLine"></table>
                            <div id="pagerSpareLine"></div>
                        </div>
                        <div class="inline fields">
                            <div class="four wide field">
                                 <asp:Label ID="lblSpareLine" Text="Spare Part Number" runat="server"></asp:Label>
                            </div>
                            <div class="seven wide field">
                                <asp:Label ID="Label7" Text="" runat="server"></asp:Label>
                            </div>
                            <div class="two wide field">
                                <asp:Label ID="Label8" Text="" runat="server"></asp:Label>
                            </div>
                            <div class="two wide field">
                                 <asp:Label ID="lblSpareFord" Text="Ford %" runat="server"></asp:Label>
                            </div>                                                    
                        </div>
                        <div class="inline fields">
                            <div class="four wide field">
                                <input id="txtSpareId" type="text" runat="server" readonly="true" />
                            </div>
                            <div class="seven wide field">    
                                <input id="txtSpareDesc" type="text" runat="server" readonly="true"  />
                            </div>
                            <div class="two wide field">
                                <asp:Label ID="Label9" Text="" runat="server"></asp:Label>
                            </div>
                            <div class="one wide field">    
                                <input id="txtSpareFord" type="text" runat="server"  readonly="true" />
                            </div>
                        </div>
                        <div class="inline fields">
                            <div class="four wide field">
                                <asp:Label ID="lblSpareQty" Text="Antail" runat="server"></asp:Label>
                            </div>                            
                            <div class="four wide field">
                                <asp:Label ID="lblSpareCP" Text="KostPris" runat="server"></asp:Label>
                            </div>                            
                            <div class="four wide field">
                                <asp:Label ID="lblSpareSP" Text="SalgPris" runat="server"></asp:Label>
                            </div>                            
                            <div class="four wide field">
                                <asp:Label ID="lblSpareDisc" Text="Rabat %" runat="server"></asp:Label>
                            </div>                            
                            <div class="four wide field">
                                <asp:Label ID="lblSpareAmt" Text="Belop" runat="server"></asp:Label>
                            </div>                            
                        </div>
                        <div class="inline fields">
                            <div class="four wide field">
                                <input id="txtSpareOrdQty" type="text" runat="server" style="width: 100px;" />
                            </div>
                            <div class="four wide field">
                                <input id="txtSpareCP" type="text" runat="server" style="width: 100px;" />
                            </div>
                            <div class="four wide field">
                                <input id="txtSpareSP" type="text" runat="server" style="width: 100px;" />
                            </div>
                            <div class="four wide field">
                                <input id="txtSpareDisc" type="text" runat="server" style="width: 100px;" />
                            </div>
                            <div class="four wide field">
                                <input id="txtSpareAmount" type="text" runat="server" style="width: 100px;" readonly="true" />
                            </div>
                        </div>
                        <div class="actions">
                            <div class="ui button ok positive">Ok</div>
                            <div class="ui button cancel negative">Avbryt</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="modViewDebitorTotals" class="ui modal" style="width:25%">
        <i class="close icon"></i>
        <div class="header">
            View Debitor Totals
        </div>
        <div class="content">
            
            <table id="debitors" class="ui sortable celled table">
                <thead>
                    <tr>
                        <th>Split Customer</th><th>Sum inkl.mva</th>
                    </tr>
                </thead>
                <tbody id="tbodyid">
                </tbody>
            </table>
        </div>
        <div class="actions">
            <div class="ui button okk positive">Ok</div>
        </div>
    </div>

    <div id="modCustomerLock" class="ui modal">
        <i class="close icon"></i>
        <div class="header">
            Delete Job
        </div>
        <div class="image content">
            <div class="description">
                Do you want to delete job?
            </div>
        </div>
        <div class="actions">
            <div class="ui button ok positive">Ok</div>
            <div class="ui button cancel negative">Avbryt</div>
        </div>
    </div>

    <div id="modContact" class="ui modal">
        <i class="close icon"></i>
        <div class="header">
            Delete Job
        </div>
        <div class="image content">
            <div id="desc" class="description">
                Cannot delete the job
            </div>
        </div>
        <div class="actions">
            <div class="ui button ok positive">Ok</div>
        </div>
    </div>

    <div id="tabInsurance" class="tTab">
        <div class="ten wide column ui top attached small header">
            <h2 style="display:inline; padding-right:70% ; font-size:0.95em;line-height: 1.28em;">Split 1 (Insurance Company)</h2>
            <h2 style="display:inline;  font-size:0.95em;line-height: 1.28em; text-decoration:underline;cursor:pointer" onclick="InscCustMoreInfo();">More Information</h2>
        </div>
        <div class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <!-- Left Column -->
                <div class="ten wide column">
                    <div class="ui stackable grid ">
                        <div class="three wide field">
                            <label for="txtInsCustID" id="lblInsCustID">
                                <asp:Literal ID="litInsCustID" runat="server" Text="Customer ID"></asp:Literal></label>
                            <asp:TextBox ID="txtInsCustID" runat="server" data-submit="INS_CUST_ID" ></asp:TextBox>
                        </div>
                        <div class="seven wide field">
                            <label for="txtInsCompanyName" id="lblInsCompanyName">
                                <asp:Literal ID="litInsCompanyName" runat="server" Text="Company name"></asp:Literal></label>
                            <asp:TextBox ID="txtInsCompanyName" runat="server" data-submit="INS_COMPANY_NAME" data-required="REQUIRED" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="six wide field">
                            <label for="ddlInsContactPerson" id="lblInsContactPerson">
                                <asp:Literal ID="litInsContactPerson" runat="server" Text="Contact person"></asp:Literal></label>
                            <asp:DropDownList ID="ddlInsContactPerson" class="dropdowns" runat="server" data-submit="INS_ID_CP"></asp:DropDownList>
                        </div>
                        <div class="ten wide column">
                            <div class="ui stackable grid">
                                <div class="eight wide field">
                                    <label for="txtInsPostalAddress" id="lblInsPostalAddress">
                                        <asp:Literal ID="litInsPostalAddress" runat="server" Text="Postal address"></asp:Literal></label>
                                    <asp:TextBox ID="txtInsPostalAddress" runat="server" data-cp-submit="INS_POSTAL_ADD" ReadOnly="true"></asp:TextBox>
                                </div>
                                <div class="eight wide field">
                                    <label for="txtInsVisitAddress" id="lblInsVisitAddress">
                                        <asp:Literal ID="litInsVisitAddress" runat="server" Text="Visit address"></asp:Literal></label>
                                    <asp:TextBox ID="txtInsVisitAddress" runat="server" data-cp-submit="INS_VISIT_ADD" ReadOnly="true"></asp:TextBox>
                                </div>
                                <div class="four wide field">
                                    <label for="txtInsZip" id="lblInsZip">
                                        <asp:Literal ID="litInsZip" runat="server" Text="Zip code"></asp:Literal></label>
                                    <asp:TextBox ID="txtInsZip" CssClass="CPZip" runat="server" data-cp-submit="INS_ZIP" ReadOnly="true"></asp:TextBox>
                                </div>
                                <div class="twelve wide field">
                                    <label for="txtZipCity" id="lblZipCity">
                                        <asp:Literal ID="litZipCity" runat="server" Text="Zip city"></asp:Literal></label>
                                    <asp:TextBox ID="txtZipCity" runat="server" data-cp-submit="INS_ZIP_CITY" ReadOnly="true"></asp:TextBox>
                                </div>
                            </div>
                        </div>
                        <div id="insPaymentDetails" class="ten wide column">
                            <div class="inline field">
                                <label for="txtInsSalesGroup" id="lblInsSalesGroup" style="Width:20%">
                                    <asp:Literal ID="litInsSalesGroup" runat="server" Text="Sales group"></asp:Literal></label>
                                <asp:TextBox ID="txtInsSalesGroup" runat="server" ReadOnly="true"></asp:TextBox>
                            </div>
                            <div class="inline field">
                                <label for="txtInsPaymentTerms" id="lblInsPaymentTerms">
                                    <asp:Literal ID="litInsPaymentTerms" runat="server" Text="Payment terms"></asp:Literal></label>
                                <asp:TextBox ID="txtInsPaymentTerms" runat="server" ReadOnly="true"></asp:TextBox>
                            </div>
                            <div class="inline field">
                                <label for="txtInsDiscount" id="lblInsDiscount" style="Width:20%">
                                    <asp:Literal ID="litInsDiscount" runat="server" Text="Discount" ></asp:Literal>
                                </label>
                                    <asp:TextBox ID="txtInsDiscount" runat="server" Width="20%" ></asp:TextBox>
                            </div>
                        </div>
                    </div>
                    <div class="ui stackable grid">
                        <div class="two wide field">
                            <label for="txtInsSplit" id="lblInsSplit">
                                <asp:Literal ID="litInsSplit" runat="server" Text="Split %"></asp:Literal></label>
                            <asp:TextBox ID="txtInsSplit" runat="server" Text="100 %" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtInsGM" id="lblInsGM">
                                <asp:Literal ID="litInsGM" runat="server" Text="GM Sum"></asp:Literal></label>
                            <asp:TextBox ID="txtInsGM" runat="server" Text=",00" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtInsEnvFee" id="lblInsEnvFee">
                                <asp:Literal ID="litInsEnvFee" runat="server" Text="Env. Fee Sum"></asp:Literal></label>
                            <asp:TextBox ID="txtInsEnvFee" runat="server" Text=",00" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtInsInvFee" id="lblInsInvFee">
                                <asp:Literal ID="litInsInvFee" runat="server" Text="Inv. Fee"></asp:Literal></label>
                            <asp:TextBox ID="txtInsInvFee" runat="server" Text=",00" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="five wide field">
                            <label>&nbsp;</label>
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkInsMoveVat" runat="server" Text="Main debtor pays VAT" data-cp-submit="INS_MOVE_VAT" />
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End Left column /-->
                <div class="six wide column">
                    <!-- Right Column -->
                    <div id="insPhone" class="column">
                        <h4 class="ui dividing header">Phone</h4>
                        <div class="inline field">
                            <label for="txtInsPhonePrivate" id="lblInsPhonePrivate">
                                <asp:Literal ID="litInsPhonePrivate" runat="server" Text="Private"></asp:Literal></label>
                            <asp:TextBox ID="txtInsPhonePrivate" runat="server" data-cp-submit="INS_PHONE_PRIVATE" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtInsPhoneSwitch" id="lblInsPhoneSwitch">
                                <asp:Literal ID="Literal1" runat="server" Text="Switch"></asp:Literal></label>
                            <asp:TextBox ID="txtInsPhoneSwitch" runat="server" data-cp-submit="INS_PHONE_SWITCH" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtInsPhoneFax" id="lblInsPhoneFax">
                                <asp:Literal ID="litInsPhoneFax" runat="server" Text="Fax"></asp:Literal></label>
                            <asp:TextBox ID="txtInsPhoneFax" runat="server" data-cp-submit="INS_PHONE_FAX" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtInsPhoneMobile" id="lblInsPhoneMobile">
                                <asp:Literal ID="litInsPhoneMobile" runat="server" Text="Mobile"></asp:Literal></label>
                            <asp:TextBox ID="txtInsPhoneMobile" runat="server" data-cp-submit="INS_PHONE_MOBILE" ReadOnly="true"></asp:TextBox>
                        </div>
                    </div>
                    <div class="column">
                        <h4 class="ui dividing header">Reduction</h4>
                        <div class="field">
                            <div class="ui radio checkbox">
                                <asp:RadioButton ID="radInsNoReduction" GroupName="reduction" runat="server"  Checked="true" />
                                <label>
                                    <asp:Literal ID="lblInsNoReduction" runat="server" Text="No reduction"></asp:Literal></label>
                            </div>
                        </div>
                        <div class="field">
                            <div class="ui radio checkbox">
                                <asp:RadioButton ID="radInsReductioAfter" GroupName="reduction" runat="server" />
                                <label>
                                    <asp:Literal ID="litInsReductionAfter" runat="server" Text="Reduction after own risk"></asp:Literal></label>
                            </div>
                        </div>
                        <div class="field">
                            <div class="ui radio checkbox">
                                <asp:RadioButton ID="radInsReductionBefore" GroupName="reduction" runat="server"  />
                                <label>
                                    <asp:Literal ID="litInsReductionBefore" runat="server" Text="Reduction before own risk"></asp:Literal></label>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End Right Column /-->
            </div>
        </div>
        <h3 class="ui top attached small header">Invoice</h3>
        <div class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <div class="three wide column">
                    <div class="ui checkbox">
                        <asp:CheckBox ID="chkInsInvPaid" runat="server" Text="Invoice paid" data-cp-submit="INS_INV_PAID" />
                    </div>
                </div>
                <div class="five wide column">
                    <div class="inline field">
                        <label for="txtInsInvID" id="lblInsInvID">
                            <asp:Literal ID="litInsInvID" runat="server" Text="Invoice nr.: "></asp:Literal></label>
                        <asp:TextBox ID="txtInsInvID" runat="server" data-cp-submit="INS_INV_ID" ReadOnly="true"></asp:TextBox>
                        <asp:Literal ID="litInsInvDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
                <div class="three wide column">
                    <div class="inline field">
                        <label id="lblInvDue">
                            <asp:Literal ID="litInsInvDue" runat="server" Text="Due date: "></asp:Literal></label>
                        <asp:Literal ID="litInsInvDueDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
                <div class="five wide column">
                    <div class="inline field">
                        <label for="txtInsInvJournal" id="lblInsInvJournal">
                            <asp:Literal ID="litInsInvJournal" runat="server" Text="Journal nr.: "></asp:Literal></label>
                        <asp:TextBox ID="txtInsInvJournal" runat="server" data-cp-submit="INS_INV_JOURNAL" ReadOnly="true"></asp:TextBox>
                        <asp:Literal ID="litInsInvJournalDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
            </div>
        </div>
        <h3 class="ui top attached small header">Damage referances</h3>
        <div id="insDamageReferance" class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <div class="six wide column">
                    <div class="inline field">
                        <label for="txtInsDmgID" id="lblInsDmgID">
                            <asp:Literal ID="litInsDmgID" runat="server" Text="Damage nr."></asp:Literal></label>
                        <asp:TextBox ID="txtInsDmgID" runat="server" data-cp-submit="INS_DMG_ID" ReadOnly="true"></asp:TextBox>
                    </div>
                    <div class="inline field">
                        <label for="txtInsReferance" id="lblInsReferance">
                            <asp:Literal ID="litInsReferance" runat="server" Text="Referance"></asp:Literal></label>
                        <asp:TextBox ID="txtInsReferance" runat="server" data-cp-submit="INS_REFERANCE" ReadOnly="true"></asp:TextBox>
                    </div>
                    <div class="inline field">
                        <label for="txtInsRefPhone" id="lblInsRefPhone">
                            <asp:Literal ID="litInsRefPhone" runat="server" Text="Phone"></asp:Literal></label>
                        <asp:TextBox ID="txtInsRefPhone" runat="server" data-cp-submit="INS_REF_PHONE" ReadOnly="true"></asp:TextBox>
                    </div>
                    <div class="inline field">
                        <label for="txtInsDate" id="lblInsDate">
                            <asp:Literal ID="litInsDate" runat="server" Text="Date/ time"></asp:Literal></label>
                        <asp:TextBox ID="txtInsDate" runat="server" data-cp-submit="INS_REF_DATE" ReadOnly="true"></asp:TextBox>
                    </div>
                    <div class="inline field">
                        <label for="txtInsDBS" id="lblInsDBS">
                            <asp:Literal ID="litInsDBS" runat="server" Text="DBS"></asp:Literal></label>
                        <asp:TextBox ID="txtInsDBS" runat="server" data-cp-submit="INS_DBS_ID" ReadOnly="true"></asp:TextBox>
                    </div>
                </div>

                <div class="four wide column">
                </div>
                <div class="six wide column">
                    <h4 class="ui dividing header">Invoice is addressed to</h4>
                    <div class="ui grid">
                        <div class="five wide field">
                            <label for="txtInsAddressedName" id="lblInsAddressedName">
                                <asp:Literal ID="litInsAddressedName" runat="server" Text="Name"></asp:Literal></label>
                        </div>
                        <div class="eleven wide field">
                            <asp:TextBox ID="txtInsAddressedName" runat="server" data-cp-submit="INS_ADDRESSED_NAME" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="five wide field">
                            <label for="txtInsAddressedPostalAddress" id="lblInsAddressedPostalAddress">
                                <asp:Literal ID="litInsAddressedPostalAddress" runat="server" Text="Postal address"></asp:Literal></label>
                        </div>
                        <div class="eleven wide field">
                            <asp:TextBox ID="txtInsAddressedPostalAddress" runat="server" data-cp-submit="INS_ADDRESSED_POSTAL_ADD" ReadOnly="true" ></asp:TextBox>
                        </div>
                        <div class="five wide field">
                            <label for="txtInsAddressedVisitAddress" id="lblInsvVisitAddress">
                                <asp:Literal ID="litInsAddressedVisitAddress" runat="server" Text="Visit address"></asp:Literal></label>
                        </div>
                        <div class="eleven wide field">
                            <asp:TextBox ID="txtInsAddressedVisitAddress" runat="server" data-cp-submit="INS_ADDRESSED_VISIT_ADD" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="five wide field">
                            <label for="txtInsZip" id="lblAddressedInsZip">
                                <asp:Literal ID="litInsAddressedZip" runat="server" Text="Zip code/ city"></asp:Literal></label>
                        </div>
                        <div class="three wide field">
                            <asp:TextBox ID="txtInsAddressedZip" CssClass="CPZip" runat="server" data-cp-submit="INS_ADDRESSED_ZIP" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="eight wide field">
                            <asp:TextBox ID="txtInsAddressedZipCity" runat="server" data-cp-submit="INS_ADRESSED_ZIP_CITY" ReadOnly="true"></asp:TextBox>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <input id="btnDeleteInsCust" runat="server" class="ui button" value="Delete" type="button" onclick="delInsCust()" />
    </div>
    <div id="tabInternalDepartment" class="tTab">
        <div class="ten wide column ui top attached small header">
            <h2 style="display:inline; padding-right:70% ; font-size:0.95em;line-height: 1.28em;">Split 2 (Internal Department)</h2>
            <h2 style="display:inline;  font-size:0.95em;line-height: 1.28em; text-decoration:underline;cursor:pointer" onclick="IntCustMoreInfo();">More Information</h2>
        </div>
        <div class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <!-- Left Column -->
                <div class="ten wide column">
                    <div class="ui stackable grid ">
                        <div class="three wide field">
                            <label for="txtIntCustID" id="lblIntCustID">
                                <asp:Literal ID="litIntCustID" runat="server" Text="Customer ID"></asp:Literal></label>
                                <asp:TextBox ID="txtIntCustID" runat="server" data-submit="INT_CUST_ID"></asp:TextBox>
                        </div>
                        <div class="seven wide field">
                            <label for="txtIntCompanyName" id="lblIntCompanyName">
                                <asp:Literal ID="litIntCompanyName" runat="server" Text="Company name"></asp:Literal></label>
                                <asp:TextBox ID="txtIntCompanyName" runat="server" data-submit="INT_COMPANY_NAME" data-required="REQUIRED" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="six wide field">
                            <label for="ddlIntContactPerson" id="lblIntContactPerson">
                                <asp:Literal ID="litIntContactPerson" runat="server" Text="Contact person"></asp:Literal></label>
                            <asp:DropDownList ID="ddlIntContactPerson" class="dropdowns" runat="server" data-submit="INT_ID_CP"></asp:DropDownList>
                        </div>
                        <div class="ten wide column">
                            <div class="ui stackable grid">
                                <div class="eight wide field">
                                    <label for="txtIntPostalAddress" id="lblIntPostalAddress">
                                        <asp:Literal ID="litIntPostalAddress" runat="server" Text="Postal address"></asp:Literal></label>
                                        <asp:TextBox ID="txtIntPostalAddress" runat="server" data-cp-submit="INT_POSTAL_ADD" ReadOnly="true"></asp:TextBox>
                                </div>
                                <div class="eight wide field">
                                    <label for="txtIntVisitAddress" id="lblIntVisitAddress">
                                        <asp:Literal ID="litIntVisitAddress" runat="server" Text="Visit address"></asp:Literal></label>
                                        <asp:TextBox ID="txtIntVisitAddress" runat="server" data-cp-submit="INT_VISIT_ADD" ReadOnly="true"></asp:TextBox>
                                </div>
                                <div class="four wide field">
                                    <label for="txtIntip" id="lblIntZip">
                                        <asp:Literal ID="litIntZip" runat="server" Text="Zip code"></asp:Literal></label>
                                        <asp:TextBox ID="txtIntZip" CssClass="CPZip" runat="server" data-cp-submit="INT_ZIP" ReadOnly="true"></asp:TextBox>
                                </div>
                                <div class="twelve wide field">
                                    <label for="txtIntZipCity" id="lblIntZipCity">
                                        <asp:Literal ID="litIntZipCity" runat="server" Text="Zip city"></asp:Literal></label>
                                        <asp:TextBox ID="txtIntZipCity" runat="server" data-cp-submit="INT_ZIP_CITY" ReadOnly="true"></asp:TextBox>
                                </div>
                            </div>
                        </div>
                        <div id="intPaymentDetails" class="ten wide column">
                            <div class="inline field">
                                <label for="txtIntSalesGroup" id="lblIntSalesGroup" style="Width:20%">
                                    <asp:Literal ID="litIntSalesGroup" runat="server" Text="Sales group"></asp:Literal></label>
                                    <asp:TextBox ID="txtIntSalesGroup" runat="server" ReadOnly="true"></asp:TextBox>
                            </div>
                            <div class="inline field">
                                <label for="txtIntPaymentTerms" id="lblIntPaymentTerms">
                                    <asp:Literal ID="litIntPaymentTerms" runat="server" Text="Payment terms"></asp:Literal></label>
                                    <asp:TextBox ID="txtIntPaymentTerms" runat="server" ReadOnly="true"></asp:TextBox>
                            </div>
                            <div class="inline field">
                                <label for="txtIntDiscount" id="lblIntDiscount" style="Width:20%">
                                    <asp:Literal ID="litIntDiscount" runat="server" Text="Discount" ></asp:Literal>
                                </label>
                                    <asp:TextBox ID="txtIntDiscount" runat="server" Width="20%" ></asp:TextBox>
                            </div>
                        </div>
                    </div>
                    <div class="ui stackable grid">
                        <div class="two wide field">
                            <label for="txtIntSplit" id="lblIntSplit">
                                <asp:Literal ID="litIntSplit" runat="server" Text="Split %"></asp:Literal></label>
                                <asp:TextBox ID="txtIntSplit" runat="server" Text="100" ></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtIntGM" id="lblIntGM">
                                <asp:Literal ID="litIntGM" runat="server" Text="GM Sum"></asp:Literal></label>
                                <asp:TextBox ID="txtIntGM" runat="server" Text=",00" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtIntEnvFee" id="lblIntEnvFee">
                                <asp:Literal ID="litIntEnvFee" runat="server" Text="Env. Fee Sum"></asp:Literal></label>
                                <asp:TextBox ID="txtIntEnvFee" runat="server" Text=",00" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtIntInvFee" id="lblIntInvFee">
                                <asp:Literal ID="litIntInvFee" runat="server" Text="Inv. Fee"></asp:Literal></label>
                                <asp:TextBox ID="txtIntInvFee" runat="server" Text=",00" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="five wide field">
                            <label>&nbsp;</label>
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkIntMoveOwnRisk" runat="server" Text="Own risk to this debtor" Enabled="false" data-cp-submit="INT_MOVE_OWN_RISK" />
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End Left column /-->
                <div class="six wide column">
                    <!-- Right Column -->
                    <div id="intPhone" class="column">
                        <h4 class="ui dividing header">Phone</h4>
                        <div class="inline field">
                            <label for="txtIntPhonePrivate" id="lblIntPhonePrivate">
                                <asp:Literal ID="litIntPhonePrivate" runat="server" Text="Private"></asp:Literal></label>
                                <asp:TextBox ID="txtIntPhonePrivate" runat="server" data-cp-submit="INT_PHONE_PRIVATE" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtIntPhoneSwitch" id="lblIntPhoneSwitch">
                                <asp:Literal ID="litIntPhoneSwitch" runat="server" Text="Switch"></asp:Literal></label>
                                <asp:TextBox ID="txtIntPhoneSwitch" runat="server" data-cp-submit="INT_PHONE_SWITCH" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtIntPhoneFax" id="lblIntPhoneFax">
                                <asp:Literal ID="litIntPhoneFax" runat="server" Text="Fax"></asp:Literal></label>
                                <asp:TextBox ID="txtIntPhoneFax" runat="server" data-cp-submit="INT_PHONE_FAX" ReadOnly="true"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtIntPhoneMobile" id="lblIntPhoneMobile">
                                <asp:Literal ID="litIntPhoneMobile" runat="server" Text="Mobile"></asp:Literal></label>
                                <asp:TextBox ID="txtIntPhoneMobile" runat="server" data-cp-submit="INT_PHONE_MOBILE" ReadOnly="true"></asp:TextBox>
                        </div>
                    </div>
                    <div class="column">
                        <h4 class="ui dividing header">Reduction</h4>
                        <div class="field">
                            <div class="ui radio checkbox">
                                <asp:RadioButton ID="radIntNoReduction" GroupName="reduction" runat="server" CssClass="hidden" Checked="true" />
                                <label>
                                    <asp:Literal ID="lblIntNoReduction" runat="server" Text="No reduction"></asp:Literal></label>
                            </div>
                        </div>
                        <div class="field">
                            <div class="ui radio checkbox">
                                <asp:RadioButton ID="radIntReductioAfter" GroupName="reduction" runat="server" CssClass="hidden" />
                                <label>
                                    <asp:Literal ID="litIntReductionAfter" runat="server" Text="Reduction after own risk"></asp:Literal></label>
                            </div>
                        </div>
                        <div class="field">
                            <div class="ui radio checkbox">
                                <asp:RadioButton ID="radIntReductionBefore" GroupName="reduction" runat="server" CssClass="hidden" />
                                <label>
                                    <asp:Literal ID="litIntReductionBefore" runat="server" Text="Reduction before own risk"></asp:Literal></label>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End Right Column /-->
            </div>
        </div>
        <h3 class="ui top attached small header">Invoice</h3>
        <div class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <div class="three wide column">
                    <div class="ui checkbox">
                        <asp:CheckBox ID="chkIntInvPaid" runat="server" Text="Invoice paid" data-cp-submit="INT_INV_PAID" />
                    </div>
                </div>
                <div class="five wide column">
                    <div class="inline field">
                        <label for="txtIntInvID" id="lblIntInvID">
                            <asp:Literal ID="litIntInvID" runat="server" Text="Invoice nr.: "></asp:Literal></label>
                            <asp:TextBox ID="txtIntInvID" runat="server" data-cp-submit="INT_INV_ID" ReadOnly="true"></asp:TextBox>
                            <asp:Literal ID="litIntInvDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
                <div class="three wide column">
                    <div class="inline field">
                        <label id="lblIntInvDue">
                            <asp:Literal ID="litIntInvDue" runat="server" Text="Due date: "></asp:Literal></label>
                            <asp:Literal ID="litIntInvDueDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
                <div class="five wide column">
                    <div class="inline field">
                        <label for="txtIntInvJournal" id="lblIntInvJournal">
                            <asp:Literal ID="litIntInvJournal" runat="server" Text="Journal nr.: "></asp:Literal></label>
                            <asp:TextBox ID="txtIntInvJournal" runat="server" data-cp-submit="INT_INV_JOURNAL" ReadOnly="true"></asp:TextBox>
                            <asp:Literal ID="litIntInvJournalDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
            </div>
        </div>
        <input id="btnIntDelete" runat="server" class="ui button" value="Delete" type="button" onclick="delIntCust()" />
    </div>
    <div id="tabClaim" class="tTab">
        <div class="ten wide column ui top attached small header">
            <h2 style="display:inline; padding-right:70% ; font-size:0.95em;line-height: 1.28em;">Split 3 (Claim)</h2>
            <h2 style="display:inline;  font-size:0.95em;line-height: 1.28em; text-decoration:underline;cursor:pointer" onclick="ClaCustMoreInfo();">More Information</h2>
        </div>
        <div class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <!-- Left Column -->
                <div class="ten wide column">
                    <div class="ui stackable grid ">
                        <div class="three wide field">
                            <label for="txtClaimCustID" id="lblClaimCustID">
                                <asp:Literal ID="litClaimCustID" runat="server" Text="Customer ID"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimCustID" runat="server" data-submit="CLAIM_CUST_ID"></asp:TextBox>
                        </div>
                        <div class="seven wide field">
                            <label for="txtClaimCompanyName" id="lblClaimCompanyName">
                                <asp:Literal ID="litClaimCompanyName" runat="server" Text="Company name"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimCompanyName" runat="server" data-submit="CLAIM_COMPANY_NAME" data-required="REQUIRED"></asp:TextBox>
                        </div>
                        <div class="six wide field">
                            <label for="ddlClaimContactPerson" id="lblClaimContactPerson">
                                <asp:Literal ID="litClaimContactPerson" runat="server" Text="Contact person"></asp:Literal></label>
                            <asp:DropDownList ID="ddlClaimContactPerson" class="dropdowns" runat="server" data-submit="CLAIM_ID_CP"></asp:DropDownList>
                        </div>
                        <div class="ten wide column">
                            <div class="ui stackable grid">
                                <div class="eight wide field">
                                    <label for="txtClaimPostalAddress" id="lblClaimPostalAddress">
                                        <asp:Literal ID="litClaimPostalAddress" runat="server" Text="Postal address"></asp:Literal></label>
                                    <asp:TextBox ID="txtClaimPostalAddress" runat="server" data-cp-submit="CLAIM_POSTAL_ADD"></asp:TextBox>
                                </div>
                                <div class="eight wide field">
                                    <label for="txtClaimVisitAddress" id="lblClaimVisitAddress">
                                        <asp:Literal ID="litClaimVisitAddress" runat="server" Text="Visit address"></asp:Literal></label>
                                    <asp:TextBox ID="txtClaimVisitAddress" runat="server" data-cp-submit="CLAIM_VISIT_ADD"></asp:TextBox>
                                </div>
                                <div class="four wide field">
                                    <label for="txtClaimZip" id="lblClaimZip">
                                        <asp:Literal ID="litClaimZip" runat="server" Text="Zip code"></asp:Literal></label>
                                    <asp:TextBox ID="txtClaimZip" CssClass="CPZip" runat="server" data-cp-submit="CLAIM_ZIP"></asp:TextBox>
                                </div>
                                <div class="twelve wide field">
                                    <label for="txtClaimZipCity" id="lblClaimZipCity">
                                        <asp:Literal ID="litClaimZipCity" runat="server" Text="Zip city"></asp:Literal></label>
                                    <asp:TextBox ID="txtClaimZipCity" runat="server" data-cp-submit="CLAIM_ZIP_CITY"></asp:TextBox>
                                </div>
                            </div>
                        </div>
                        <div id="claimPaymentDetails" class="ten wide column">
                            <div class="inline field">
                                <label for="txtClaimSalesGroup" id="lblClaimSalesGroup" style="Width:20%">
                                    <asp:Literal ID="litClaimSalesGroup" runat="server" Text="Sales group"></asp:Literal></label>
                                <asp:TextBox ID="txtClaimSalesGroup" runat="server"></asp:TextBox>
                            </div>
                            <div class="inline field">
                                <label for="txtClaimPaymentTerms" id="lblClaimPaymentTerms">
                                    <asp:Literal ID="litClaimPaymentTerms" runat="server" Text="Payment terms"></asp:Literal></label>
                                <asp:TextBox ID="txtClaimPaymentTerms" runat="server"></asp:TextBox>
                            </div>
                            <div class="inline field">
                                <label for="txtClaimDiscount" id="lblClaimDiscount" style="Width:20%">
                                    <asp:Literal ID="litClaimDiscount" runat="server" Text="Discount" ></asp:Literal>
                                </label>
                                    <asp:TextBox ID="txtClaimDiscount" runat="server" Width="20%" ></asp:TextBox>
                            </div>
                        </div>
                    </div>
                    <div class="ui stackable grid">
                        <div class="two wide field">
                            <label for="txtClaimSplit" id="lblClaimSplit">
                                <asp:Literal ID="litClaimSplit" runat="server" Text="Split %"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimSplit" runat="server" Text="100"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtClaimM" id="lblClaimGM">
                                <asp:Literal ID="litClaimGM" runat="server" Text="GM Sum"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimGM" runat="server" Text=",00"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtClaimEnvFee" id="lblClaimEnvFee">
                                <asp:Literal ID="litClaimEnvFee" runat="server" Text="Env. Fee Sum"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimEnvFee" runat="server" Text=",00"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtClaimInvFee" id="lblClaimInvFee">
                                <asp:Literal ID="litClaimInvFee" runat="server" Text="Inv. Fee"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimInvFee" runat="server" Text=",00"></asp:TextBox>
                        </div>
                    </div>
                </div>
                <!-- End Left column /-->
                <div class="six wide column">
                    <!-- Right Column -->
                    <div id="claimPhone" class="column">
                        <h4 class="ui dividing header">Phone</h4>
                        <div class="inline field">
                            <label for="txtClaimPhonePrivate" id="lblClaimPhonePrivate">
                                <asp:Literal ID="litClaimPhonePrivate" runat="server" Text="Private"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimPhonePrivate" runat="server" data-cp-submit="CLAIM_PHONE_PRIVATE"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtClaimPhoneSwitch" id="lblClaimPhoneSwitch">
                                <asp:Literal ID="litClaimPhoneSwitch" runat="server" Text="Switch"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimPhoneSwitch" runat="server" data-cp-submit="CLAIM_PHONE_SWITCH"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtClaimPhoneFax" id="lblClaimPhoneFax">
                                <asp:Literal ID="litClaimPhoneFax" runat="server" Text="Fax"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimPhoneFax" runat="server" data-cp-submit="CLAIM_PHONE_FAX"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtClaimPhoneMobile" id="lblClaimPhoneMobile">
                                <asp:Literal ID="litClaimPhoneMobile" runat="server" Text="Mobile"></asp:Literal></label>
                            <asp:TextBox ID="txtClaimPhoneMobile" runat="server" data-cp-submit="CLAIM_PHONE_MOBILE"></asp:TextBox>
                        </div>
                    </div>
                </div>
                <!-- End Right Column /-->
            </div>
        </div>
        <h3 class="ui top attached small header">Invoice</h3>
        <div class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <div class="three wide column">
                    <div class="ui checkbox">
                        <asp:CheckBox ID="chkClaimInvPaid" runat="server" Text="Invoice paid" data-cp-submit="CLAIM_INV_PAID" />
                    </div>
                </div>
                <div class="five wide column">
                    <div class="inline field">
                        <label for="txtClaimInvID" id="lblClaimInvID">
                            <asp:Literal ID="litClaimInvID" runat="server" Text="Invoice nr.: "></asp:Literal></label>
                        <asp:TextBox ID="txtClaimInvID" runat="server" data-cp-submit="CLAIM_INV_ID"></asp:TextBox>
                        <asp:Literal ID="litClaimInvDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
                <div class="three wide column">
                    <div class="inline field">
                        <label id="lblClaimInvDue">
                            <asp:Literal ID="litClaimInvDue" runat="server" Text="Due date: "></asp:Literal></label>
                        <asp:Literal ID="litClaimInvDueDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
                <div class="five wide column">
                    <div class="inline field">
                        <label for="txtClaimInvJournal" id="lblClaimInvJournal">
                            <asp:Literal ID="litClaimInvJournal" runat="server" Text="Journal nr.: "></asp:Literal></label>
                        <asp:TextBox ID="txtClaimInvJournal" runat="server" data-cp-submit="CLAIM_INV_JOURNAL"></asp:TextBox>
                        <asp:Literal ID="litClaimInvJournalDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
            </div>
        </div>
        <input id="btnDelClaim" runat="server" class="ui button" value="Delete" type="button" onclick="delClaCust()" />
    </div>
    <div id="tabMiscellaneous" class="tTab">
        <div class="ten wide column ui top attached small header">
            <h2 style="display:inline; padding-right:70% ; font-size:0.95em;line-height: 1.28em;">Split 4 (Miscellaneous)</h2>
            <h2 style="display:inline;  font-size:0.95em;line-height: 1.28em; text-decoration:underline;cursor:pointer" onclick="MiscCustMoreInfo();">More Information</h2>
        </div>
        <div class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <!-- Left Column -->
                <div class="ten wide column">
                    <div class="ui stackable grid ">
                        <div class="three wide field">
                            <label for="txtMiscCustID" id="lblMiscCustID">
                                <asp:Literal ID="litMiscCustID" runat="server" Text="Customer ID"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscCustID" runat="server" data-submit="MISC_CUST_ID"></asp:TextBox>
                        </div>
                        <div class="seven wide field">
                            <label for="txtMiscCompanyName" id="lblMiscCompanyName">
                                <asp:Literal ID="litMiscCompanyName" runat="server" Text="Company name"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscCompanyName" runat="server" data-submit="MISC_COMPANY_NAME" data-required="REQUIRED"></asp:TextBox>
                        </div>
                        <div class="six wide field">
                            <label for="ddlMiscContactPerson" id="lblMiscContactPerson">
                                <asp:Literal ID="litMiscContactPerson" runat="server" Text="Contact person"></asp:Literal></label>
                            <asp:DropDownList ID="ddlMiscContactPerson" class="dropdowns" runat="server" data-submit="MISC_ID_CP"></asp:DropDownList>
                        </div>
                        <div class="ten wide column">
                            <div class="ui stackable grid">
                                <div class="eight wide field">
                                    <label for="txtMiscPostalAddress" id="lblMiscPostalAddress">
                                        <asp:Literal ID="litMiscPostalAddress" runat="server" Text="Postal address"></asp:Literal></label>
                                    <asp:TextBox ID="txtMiscPostalAddress" runat="server" data-cp-submit="MISC_POSTAL_ADD"></asp:TextBox>
                                </div>
                                <div class="eight wide field">
                                    <label for="txtMiscVisitAddress" id="lblMiscVisitAddress">
                                        <asp:Literal ID="litMiscVisitAddress" runat="server" Text="Visit address"></asp:Literal></label>
                                    <asp:TextBox ID="txtMiscVisitAddress" runat="server" data-cp-submit="MISC_VISIT_ADD"></asp:TextBox>
                                </div>
                                <div class="four wide field">
                                    <label for="txtMiscZip" id="lblMiscZip">
                                        <asp:Literal ID="litMiscZip" runat="server" Text="Zip code"></asp:Literal></label>
                                    <asp:TextBox ID="txtMiscZip" CssClass="CPZip" runat="server" data-cp-submit="MISC_ZIP"></asp:TextBox>
                                </div>
                                <div class="twelve wide field">
                                    <label for="txtMiscZipCity" id="lblMiscZipCity">
                                        <asp:Literal ID="litMiscZipCity" runat="server" Text="Zip city"></asp:Literal></label>
                                    <asp:TextBox ID="txtMiscZipCity" runat="server" data-cp-submit="MISC_ZIP_CITY"></asp:TextBox>
                                </div>
                            </div>
                        </div>
                        <div id="miscPaymentDetails" class="ten wide column">
                            <div class="inline field">
                                <label for="txtMiscSalesGroup" id="lblMiscSalesGroup" style="Width:20%">
                                    <asp:Literal ID="litMiscSalesGroup" runat="server" Text="Sales group"></asp:Literal></label>
                                <asp:TextBox ID="txtMiscSalesGroup" runat="server"></asp:TextBox>
                            </div>
                            <div class="inline field">
                                <label for="txtMiscPaymentTerms" id="lblMiscPaymentTerms">
                                    <asp:Literal ID="litMiscPaymentTerms" runat="server" Text="Payment terms"></asp:Literal></label>
                                <asp:TextBox ID="txtMiscPaymentTerms" runat="server"></asp:TextBox>
                            </div>
                            <div class="inline field">
                                <label for="txtMiscDiscount" id="lblMiscDiscount" style="Width:20%">
                                    <asp:Literal ID="litMiscDiscount" runat="server" Text="Discount" ></asp:Literal>
                                </label>
                                    <asp:TextBox ID="txtMiscDiscount" runat="server" Width="20%" ></asp:TextBox>
                            </div>
                        </div>
                    </div>
                    <div class="ui stackable grid">
                        <div class="two wide field">
                            <label for="txtMiscSplit" id="lblMiscSplit">
                                <asp:Literal ID="litMiscSplit" runat="server" Text="Split %"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscSplit" runat="server" Text="100 %"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtMiscGM" id="lblMiscGM">
                                <asp:Literal ID="litMiscGM" runat="server" Text="GM Sum"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscGM" runat="server" Text=",00"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtMiscEnvFee" id="lblMiscEnvFee">
                                <asp:Literal ID="litMiscEnvFee" runat="server" Text="Env. Fee Sum"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscEnvFee" runat="server" Text=",00"></asp:TextBox>
                        </div>
                        <div class="three wide field">
                            <label for="txtMiscInvFee" id="lblMiscInvFee">
                                <asp:Literal ID="litMiscInvFee" runat="server" Text="Inv. Fee"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscInvFee" runat="server" Text=",00"></asp:TextBox>
                        </div>
                        <div class="five wide field">
                            <label>&nbsp;</label>
                            <div class="ui checkbox">
                                <asp:CheckBox ID="chkMiscMoveOwnRisk" runat="server" Text="Own risk to this debtor"  data-cp-submit="MISC_MOVE_OWN_RISK" />
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End Left column /-->
                <div class="six wide column">
                    <!-- Right Column -->
                    <div id="miscPhone" class="column">
                        <h4 class="ui dividing header">Phone</h4>
                        <div class="inline field">
                            <label for="txtMiscPhonePrivate" id="lblMiscPhonePrivate">
                                <asp:Literal ID="litMiscPhonePrivate" runat="server" Text="Private"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscPhonePrivate" runat="server" data-cp-submit="MISC_PHONE_PRIVATE"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtMiscPhoneSwitch" id="lblMiscPhoneSwitch">
                                <asp:Literal ID="litMiscPhoneSwitch" runat="server" Text="Switch"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscPhoneSwitch" runat="server" data-cp-submit="MISC_PHONE_SWITCH"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtMiscPhoneFax" id="lblMiscPhoneFax">
                                <asp:Literal ID="litMiscPhoneFax" runat="server" Text="Fax"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscPhoneFax" runat="server" data-cp-submit="MISC_PHONE_FAX"></asp:TextBox>
                        </div>
                        <div class="inline field">
                            <label for="txtMiscPhoneMobile" id="lblMiscPhoneMobile">
                                <asp:Literal ID="litMiscPhoneMobile" runat="server" Text="Mobile"></asp:Literal></label>
                            <asp:TextBox ID="txtMiscPhoneMobile" runat="server" data-cp-submit="MISC_PHONE_MOBILE"></asp:TextBox>
                        </div>
                    </div>
                </div>
                <!-- End Right Column /-->
            </div>
        </div>
        <h3 class="ui top attached small header">Invoice</h3>
        <div class="ui form attached segment">
            <div class="ui stackable grid container shift-container">
                <div class="three wide column">
                    <div class="ui checkbox">
                        <asp:CheckBox ID="chkMiscInvPaid" runat="server" Text="Invoice paid" data-cp-submit="MISC_INV_PAID" />
                    </div>
                </div>
                <div class="five wide column">
                    <div class="inline field">
                        <label for="txtMiscInvID" id="lblMiscInvID">
                            <asp:Literal ID="litMiscInvID" runat="server" Text="Invoice nr.: "></asp:Literal></label>
                        <asp:TextBox ID="txtMiscInvID" runat="server" data-cp-submit="MISC_INV_ID"></asp:TextBox>
                        <asp:Literal ID="litMiscInvDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
                <div class="three wide column">
                    <div class="inline field">
                        <label id="lblMiscInvDue">
                            <asp:Literal ID="litMiscInvDue" runat="server" Text="Due date: "></asp:Literal></label>
                        <asp:Literal ID="litMiscInvDueDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
                <div class="five wide column">
                    <div class="inline field">
                        <label for="txtMiscInvJournal" id="lblMiscInvJournal">
                            <asp:Literal ID="litMiscInvJournal" runat="server" Text="Journal nr.: "></asp:Literal></label>
                        <asp:TextBox ID="txtMiscInvJournal" runat="server" data-cp-submit="MISC_INV_JOURNAL"></asp:TextBox>
                        <asp:Literal ID="litMiscInvJournalDate" runat="server" Text="00/00/0000"></asp:Literal>
                    </div>
                </div>
            </div>
        </div>
        <input id="btnDelMisc" runat="server" class="ui button" value="Delete" type="button" onclick="delMiscCust()" />
    </div>


</asp:Content>
